{"version":3,"file":"SimpleSoundStudioLibrary.js","sources":["../../node_modules/tslib/tslib.es6.js","../../node_modules/@inversifyjs/common/lib/esm/index.js","../../node_modules/reflect-metadata/Reflect.js","../../node_modules/@inversifyjs/reflect-metadata-utils/lib/esm/index.js","../../node_modules/@inversifyjs/core/lib/esm/index.js","../../node_modules/@inversifyjs/prototype-utils/lib/esm/index.js","../../node_modules/@inversifyjs/container/lib/esm/index.js","../../lib/inversify.types.ts","../../lib/interfaces/AbstractAudioElement.ts","../../lib/utils/Functions.ts","../../lib/model/EventTypeEnum.ts","../../lib/audioEditor/AudioEditor.ts","../../lib/bufferPlayer/BufferPlayer.ts","../../lib/utils/TimerSaveTime.ts","../../lib/model/FilterNames.ts","../../lib/model/Constants.ts","../../lib/recorder/getRecorderWorker.ts","../../lib/recorder/Recorder.ts","../../lib/voiceRecorder/VoiceRecorder.ts","../../lib/filters/interfaces/AbstractAudioNode.ts","../../lib/filters/interfaces/AbstractAudioFilter.ts","../../lib/workletPolyfill/AudioParamPolyfill.ts","../../lib/workletPolyfill/WorkletScriptProcessorNodeAdapter.ts","../../lib/workletPolyfill/RegisterProcessorPolyfill.ts","../../lib/workletPolyfill/SimpleAudioWorkletProcessor.ts","../../lib/workletPolyfill/AudioWorkletProcessorPolyfill.ts","../../lib/filters/interfaces/AbstractAudioFilterWorklet.ts","../../lib/filters/interfaces/AbstractAudioRenderer.ts","../../lib/utils/EventEmitter.ts","../../lib/services/GenericConfigService.ts","../../lib/audioEditor/AudioContextManager.ts","../../lib/audioEditor/AudioProcessor.ts","../../lib/audioEditor/BufferManager.ts","../../lib/audioEditor/FilterManager.ts","../../lib/audioEditor/RendererManager.ts","../../lib/audioEditor/SaveBufferManager.ts","../../lib/services/BufferFetcherService.ts","../../lib/services/BufferDecoderService.ts","../../lib/filters/ReturnAudioRenderer.ts","../../lib/filters/BassBoosterFilter.ts","../../lib/filters/worklets/BitCrusher.worklet.ts","../../lib/filters/BitCrusherFilter.ts","../../lib/filters/EchoFilter.ts","../../lib/filters/HighPassFilter.ts","../../lib/utils/DelayBuffer.ts","../../lib/filters/worklets/Limiter.worklet.ts","../../lib/filters/LimiterFilter.ts","../../lib/filters/LowPassFilter.ts","../../lib/filters/ReverbFilter.ts","../../node_modules/soundtouchjs/dist/soundtouch.js","../../lib/filters/SountouchWrapperFilter.ts","../../lib/filters/TelephonizerFilter.ts","../../lib/utils/Vocoder.ts","../../lib/filters/VocoderFilter.ts","../../lib/filters/worklets/RenderingProgressCalculation.worklet.ts","../../lib/filters/RenderingProgressCalculationFilter.ts","../../lib/utils/SoundStudioFactory.ts","../../lib/inversify.config.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nvar ownKeys = function(o) {\r\n    ownKeys = Object.getOwnPropertyNames || function (o) {\r\n        var ar = [];\r\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\r\n        return ar;\r\n    };\r\n    return ownKeys(o);\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\r\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n        });\r\n    }\r\n    return path;\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __esDecorate: __esDecorate,\r\n    __runInitializers: __runInitializers,\r\n    __propKey: __propKey,\r\n    __setFunctionName: __setFunctionName,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,\r\n};\r\n","function e(e){return(\"object\"==typeof e&&null!==e||\"function\"==typeof e)&&\"function\"==typeof e.then}function t(e){switch(typeof e){case\"string\":case\"symbol\":return e.toString();case\"function\":return e.name;default:throw new Error(`Unexpected ${typeof e} service id type`)}}const n=Symbol.for(\"@inversifyjs/common/islazyServiceIdentifier\");class r{[n];#e;constructor(e){this.#e=e,this[n]=!0}static is(e){return\"object\"==typeof e&&null!==e&&!0===e[n]}unwrap(){return this.#e()}}export{r as LazyServiceIdentifier,e as isPromise,t as stringifyServiceIdentifier};\n//# sourceMappingURL=index.js.map\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof globalThis === \"object\" ? globalThis :\n            typeof global === \"object\" ? global :\n                typeof self === \"object\" ? self :\n                    typeof this === \"object\" ? this :\n                        sloppyModeThis();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect !== \"undefined\") {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter, root);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                if (previous)\n                    previous(key, value);\n            };\n        }\n        function functionThis() {\n            try {\n                return Function(\"return this;\")();\n            }\n            catch (_) { }\n        }\n        function indirectEvalThis() {\n            try {\n                return (void 0, eval)(\"(function() { return this; })()\");\n            }\n            catch (_) { }\n        }\n        function sloppyModeThis() {\n            return functionThis() || indirectEvalThis();\n        }\n    })(function (exporter, root) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var _Map = typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        var registrySymbol = supportsSymbol ? Symbol.for(\"@reflect-metadata:registry\") : undefined;\n        var metadataRegistry = GetOrCreateMetadataRegistry();\n        var metadataProvider = CreateMetadataProvider(metadataRegistry);\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var provider = GetMetadataProvider(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return provider.OrdinaryDeleteMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return ToBoolean(provider.OrdinaryHasOwnMetadata(MetadataKey, O, P));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return;\n            return provider.OrdinaryGetOwnMetadata(MetadataKey, O, P);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ true);\n            provider.OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var provider = GetMetadataProvider(O, P, /*create*/ false);\n            if (!provider) {\n                return [];\n            }\n            return provider.OrdinaryOwnMetadataKeys(O, P);\n        }\n        // 6 ECMAScript Data Types and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        function SameValueZero(x, y) {\n            return x === y || x !== x && y !== y;\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // Global metadata registry\n        // - Allows `import \"reflect-metadata\"` and `import \"reflect-metadata/no-conflict\"` to interoperate.\n        // - Uses isolated metadata if `Reflect` is frozen before the registry can be installed.\n        /**\n         * Creates a registry used to allow multiple `reflect-metadata` providers.\n         */\n        function CreateMetadataRegistry() {\n            var fallback;\n            if (!IsUndefined(registrySymbol) &&\n                typeof root.Reflect !== \"undefined\" &&\n                !(registrySymbol in root.Reflect) &&\n                typeof root.Reflect.defineMetadata === \"function\") {\n                // interoperate with older version of `reflect-metadata` that did not support a registry.\n                fallback = CreateFallbackProvider(root.Reflect);\n            }\n            var first;\n            var second;\n            var rest;\n            var targetProviderMap = new _WeakMap();\n            var registry = {\n                registerProvider: registerProvider,\n                getProvider: getProvider,\n                setProvider: setProvider,\n            };\n            return registry;\n            function registerProvider(provider) {\n                if (!Object.isExtensible(registry)) {\n                    throw new Error(\"Cannot add provider to a frozen registry.\");\n                }\n                switch (true) {\n                    case fallback === provider: break;\n                    case IsUndefined(first):\n                        first = provider;\n                        break;\n                    case first === provider: break;\n                    case IsUndefined(second):\n                        second = provider;\n                        break;\n                    case second === provider: break;\n                    default:\n                        if (rest === undefined)\n                            rest = new _Set();\n                        rest.add(provider);\n                        break;\n                }\n            }\n            function getProviderNoCache(O, P) {\n                if (!IsUndefined(first)) {\n                    if (first.isProviderFor(O, P))\n                        return first;\n                    if (!IsUndefined(second)) {\n                        if (second.isProviderFor(O, P))\n                            return first;\n                        if (!IsUndefined(rest)) {\n                            var iterator = GetIterator(rest);\n                            while (true) {\n                                var next = IteratorStep(iterator);\n                                if (!next) {\n                                    return undefined;\n                                }\n                                var provider = IteratorValue(next);\n                                if (provider.isProviderFor(O, P)) {\n                                    IteratorClose(iterator);\n                                    return provider;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!IsUndefined(fallback) && fallback.isProviderFor(O, P)) {\n                    return fallback;\n                }\n                return undefined;\n            }\n            function getProvider(O, P) {\n                var providerMap = targetProviderMap.get(O);\n                var provider;\n                if (!IsUndefined(providerMap)) {\n                    provider = providerMap.get(P);\n                }\n                if (!IsUndefined(provider)) {\n                    return provider;\n                }\n                provider = getProviderNoCache(O, P);\n                if (!IsUndefined(provider)) {\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return provider;\n            }\n            function hasProvider(provider) {\n                if (IsUndefined(provider))\n                    throw new TypeError();\n                return first === provider || second === provider || !IsUndefined(rest) && rest.has(provider);\n            }\n            function setProvider(O, P, provider) {\n                if (!hasProvider(provider)) {\n                    throw new Error(\"Metadata provider not registered.\");\n                }\n                var existingProvider = getProvider(O, P);\n                if (existingProvider !== provider) {\n                    if (!IsUndefined(existingProvider)) {\n                        return false;\n                    }\n                    var providerMap = targetProviderMap.get(O);\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return true;\n            }\n        }\n        /**\n         * Gets or creates the shared registry of metadata providers.\n         */\n        function GetOrCreateMetadataRegistry() {\n            var metadataRegistry;\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                metadataRegistry = root.Reflect[registrySymbol];\n            }\n            if (IsUndefined(metadataRegistry)) {\n                metadataRegistry = CreateMetadataRegistry();\n            }\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                Object.defineProperty(root.Reflect, registrySymbol, {\n                    enumerable: false,\n                    configurable: false,\n                    writable: false,\n                    value: metadataRegistry\n                });\n            }\n            return metadataRegistry;\n        }\n        function CreateMetadataProvider(registry) {\n            // [[Metadata]] internal slot\n            // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n            var metadata = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var targetMetadata = metadata.get(O);\n                    if (IsUndefined(targetMetadata))\n                        return false;\n                    return targetMetadata.has(P);\n                },\n                OrdinaryDefineOwnMetadata: OrdinaryDefineOwnMetadata,\n                OrdinaryHasOwnMetadata: OrdinaryHasOwnMetadata,\n                OrdinaryGetOwnMetadata: OrdinaryGetOwnMetadata,\n                OrdinaryOwnMetadataKeys: OrdinaryOwnMetadataKeys,\n                OrdinaryDeleteMetadata: OrdinaryDeleteMetadata,\n            };\n            metadataRegistry.registerProvider(provider);\n            return provider;\n            function GetOrCreateMetadataMap(O, P, Create) {\n                var targetMetadata = metadata.get(O);\n                var createdTargetMetadata = false;\n                if (IsUndefined(targetMetadata)) {\n                    if (!Create)\n                        return undefined;\n                    targetMetadata = new _Map();\n                    metadata.set(O, targetMetadata);\n                    createdTargetMetadata = true;\n                }\n                var metadataMap = targetMetadata.get(P);\n                if (IsUndefined(metadataMap)) {\n                    if (!Create)\n                        return undefined;\n                    metadataMap = new _Map();\n                    targetMetadata.set(P, metadataMap);\n                    if (!registry.setProvider(O, P, provider)) {\n                        targetMetadata.delete(P);\n                        if (createdTargetMetadata) {\n                            metadata.delete(O);\n                        }\n                        throw new Error(\"Wrong provider for target.\");\n                    }\n                }\n                return metadataMap;\n            }\n            // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n            function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                return ToBoolean(metadataMap.has(MetadataKey));\n            }\n            // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n            function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return undefined;\n                return metadataMap.get(MetadataKey);\n            }\n            // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n            function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n                metadataMap.set(MetadataKey, MetadataValue);\n            }\n            // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n            function OrdinaryOwnMetadataKeys(O, P) {\n                var keys = [];\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return keys;\n                var keysObj = metadataMap.keys();\n                var iterator = GetIterator(keysObj);\n                var k = 0;\n                while (true) {\n                    var next = IteratorStep(iterator);\n                    if (!next) {\n                        keys.length = k;\n                        return keys;\n                    }\n                    var nextValue = IteratorValue(next);\n                    try {\n                        keys[k] = nextValue;\n                    }\n                    catch (e) {\n                        try {\n                            IteratorClose(iterator);\n                        }\n                        finally {\n                            throw e;\n                        }\n                    }\n                    k++;\n                }\n            }\n            function OrdinaryDeleteMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                if (!metadataMap.delete(MetadataKey))\n                    return false;\n                if (metadataMap.size === 0) {\n                    var targetMetadata = metadata.get(O);\n                    if (!IsUndefined(targetMetadata)) {\n                        targetMetadata.delete(P);\n                        if (targetMetadata.size === 0) {\n                            metadata.delete(targetMetadata);\n                        }\n                    }\n                }\n                return true;\n            }\n        }\n        function CreateFallbackProvider(reflect) {\n            var defineMetadata = reflect.defineMetadata, hasOwnMetadata = reflect.hasOwnMetadata, getOwnMetadata = reflect.getOwnMetadata, getOwnMetadataKeys = reflect.getOwnMetadataKeys, deleteMetadata = reflect.deleteMetadata;\n            var metadataOwner = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var metadataPropertySet = metadataOwner.get(O);\n                    if (!IsUndefined(metadataPropertySet) && metadataPropertySet.has(P)) {\n                        return true;\n                    }\n                    if (getOwnMetadataKeys(O, P).length) {\n                        if (IsUndefined(metadataPropertySet)) {\n                            metadataPropertySet = new _Set();\n                            metadataOwner.set(O, metadataPropertySet);\n                        }\n                        metadataPropertySet.add(P);\n                        return true;\n                    }\n                    return false;\n                },\n                OrdinaryDefineOwnMetadata: defineMetadata,\n                OrdinaryHasOwnMetadata: hasOwnMetadata,\n                OrdinaryGetOwnMetadata: getOwnMetadata,\n                OrdinaryOwnMetadataKeys: getOwnMetadataKeys,\n                OrdinaryDeleteMetadata: deleteMetadata,\n            };\n            return provider;\n        }\n        /**\n         * Gets the metadata provider for an object. If the object has no metadata provider and this is for a create operation,\n         * then this module's metadata provider is assigned to the object.\n         */\n        function GetMetadataProvider(O, P, Create) {\n            var registeredProvider = metadataRegistry.getProvider(O, P);\n            if (!IsUndefined(registeredProvider)) {\n                return registeredProvider;\n            }\n            if (Create) {\n                if (metadataRegistry.setProvider(O, P, metadataProvider)) {\n                    return metadataProvider;\n                }\n                throw new Error(\"Illegal state.\");\n            }\n            return undefined;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            var Map = /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (SameValueZero(key, this._cacheKey)) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (!SameValueZero(this._cacheKey, key)) {\n                        this._cacheIndex = -1;\n                        for (var i = 0; i < this._keys.length; i++) {\n                            if (SameValueZero(this._keys[i], key)) {\n                                this._cacheIndex = i;\n                                break;\n                            }\n                        }\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            return Map;\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            var Set = /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.keys(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n            return Set;\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    var array = new Uint8Array(size);\n                    if (typeof crypto !== \"undefined\") {\n                        crypto.getRandomValues(array);\n                    }\n                    else if (typeof msCrypto !== \"undefined\") {\n                        msCrypto.getRandomValues(array);\n                    }\n                    else {\n                        FillRandomBytes(array, size);\n                    }\n                    return array;\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","function t(t,e){return Reflect.getOwnMetadata(e,t)}function e(t,e){return Reflect.getMetadata(e,t)}function n(t,e,n){Reflect.defineMetadata(e,n,t)}function a(e,n,a,f){const c=f(t(e,n)??a());Reflect.defineMetadata(n,c,e)}function f(t,n,a,f){const c=f(e(t,n)??a());Reflect.defineMetadata(n,c,t)}export{t as getOwnReflectMetadata,e as getReflectMetadata,n as setReflectMetadata,a as updateOwnReflectMetadata,f as updateReflectMetadata};\n//# sourceMappingURL=index.js.map\n","import{getOwnReflectMetadata as e,setReflectMetadata as t,updateOwnReflectMetadata as n}from\"@inversifyjs/reflect-metadata-utils\";import{getBaseType as i}from\"@inversifyjs/prototype-utils\";import{stringifyServiceIdentifier as o,LazyServiceIdentifier as r,isPromise as a}from\"@inversifyjs/common\";const s=\"@inversifyjs/container/bindingId\";function c(){const i=e(Object,s)??0;return i===Number.MAX_SAFE_INTEGER?t(Object,s,Number.MIN_SAFE_INTEGER):n(Object,s,(()=>i),(e=>e+1)),i}const u={Request:\"Request\",Singleton:\"Singleton\",Transient:\"Transient\"},d={ConstantValue:\"ConstantValue\",DynamicValue:\"DynamicValue\",Factory:\"Factory\",Instance:\"Instance\",Provider:\"Provider\",ResolvedValue:\"ResolvedValue\",ServiceRedirection:\"ServiceRedirection\"};function*l(...e){for(const t of e)yield*t}class p{#e;#t;#n;constructor(e){this.#e=new Map,this.#t={};for(const t of Reflect.ownKeys(e))this.#t[t]=new Map;this.#n=e}add(e,t){this.#i(e).push(t);for(const n of Reflect.ownKeys(t))this.#o(n,t[n]).push(e)}clone(){const e=Reflect.ownKeys(this.#n),t=new p(this.#n);this.#r(this.#e,t.#e);for(const n of e)this.#r(this.#t[n],t.#t[n]);return t}get(e,t){return this.#t[e].get(t)}getAllKeys(e){return this.#t[e].keys()}removeByRelation(e,t){const n=this.get(e,t);if(void 0===n)return;const i=new Set(n);for(const n of i){const i=this.#e.get(n);if(void 0===i)throw new Error(\"Expecting model relation, none found\");for(const o of i)o[e]===t&&this.#a(n,o);this.#e.delete(n)}}#i(e){let t=this.#e.get(e);return void 0===t&&(t=[],this.#e.set(e,t)),t}#o(e,t){let n=this.#t[e].get(t);return void 0===n&&(n=[],this.#t[e].set(t,n)),n}#r(e,t){for(const[n,i]of e)t.set(n,[...i])}#a(e,t){for(const n of Reflect.ownKeys(t))this.#s(e,n,t[n])}#s(e,t,n){const i=this.#t[t].get(n);if(void 0!==i){const o=i.indexOf(e);-1!==o&&i.splice(o,1),0===i.length&&this.#t[t].delete(n)}}}var f,g,m;!function(e){e.moduleId=\"moduleId\",e.serviceId=\"serviceId\"}(f||(f={}));class h{#c;#u;constructor(e,t){this.#c=t??new p({moduleId:{isOptional:!0},serviceId:{isOptional:!1}}),this.#u=e}static build(e){return new h(e)}add(e,t){this.#c.add(e,t)}clone(){return new h(this.#u,this.#c.clone())}get(e){const t=[],n=this.#c.get(f.serviceId,e);void 0!==n&&t.push(n);const i=this.#u?.get(e);if(void 0!==i&&t.push(i),0!==t.length)return l(...t)}removeAllByModuleId(e){this.#c.removeByRelation(f.moduleId,e)}removeAllByServiceId(e){this.#c.removeByRelation(f.serviceId,e)}}!function(e){e.id=\"id\",e.moduleId=\"moduleId\",e.serviceId=\"serviceId\"}(g||(g={}));class v{#d;#u;constructor(e,t){this.#d=t??new p({id:{isOptional:!1},moduleId:{isOptional:!0},serviceId:{isOptional:!1}}),this.#u=e}static build(e){return new v(e)}clone(){return new v(this.#u,this.#d.clone())}get(e){return this.getNonParentBindings(e)??this.#u?.get(e)}getById(e){return this.#d.get(g.id,e)??this.#u?.getById(e)}getByModuleId(e){return this.#d.get(g.moduleId,e)??this.#u?.getByModuleId(e)}getNonParentBindings(e){return this.#d.get(g.serviceId,e)}getNonParentBoundServices(){return this.#d.getAllKeys(g.serviceId)}removeById(e){this.#d.removeByRelation(g.id,e)}removeAllByModuleId(e){this.#d.removeByRelation(g.moduleId,e)}removeAllByServiceId(e){this.#d.removeByRelation(g.serviceId,e)}set(e){const t={[g.id]:e.id,[g.serviceId]:e.serviceIdentifier};void 0!==e.moduleId&&(t[g.moduleId]=e.moduleId),this.#d.add(e,t)}}!function(e){e.moduleId=\"moduleId\",e.serviceId=\"serviceId\"}(m||(m={}));class y{#l;#u;constructor(e,t){this.#l=t??new p({moduleId:{isOptional:!0},serviceId:{isOptional:!1}}),this.#u=e}static build(e){return new y(e)}add(e,t){this.#l.add(e,t)}clone(){return new y(this.#u,this.#l.clone())}get(e){const t=[],n=this.#l.get(m.serviceId,e);void 0!==n&&t.push(n);const i=this.#u?.get(e);if(void 0!==i&&t.push(i),0!==t.length)return l(...t)}removeAllByModuleId(e){this.#l.removeByRelation(m.moduleId,e)}removeAllByServiceId(e){this.#l.removeByRelation(m.serviceId,e)}}function M(e,t,n){const i=Array.isArray(e)?e:[e];if(void 0!==n)if(\"number\"!=typeof n)Reflect.decorate(i,t.prototype,n);else for(const e of i)e(t,void 0,n);else Reflect.decorate(i,t)}const I=\"@inversifyjs/core/classMetadataReflectKey\";function w(){return{constructorArguments:[],lifecycle:{postConstructMethodName:void 0,preDestroyMethodName:void 0},properties:new Map,scope:void 0}}const b=\"@inversifyjs/core/pendingClassMetadataCountReflectKey\";const j=Symbol.for(\"@inversifyjs/core/InversifyCoreError\");class T extends Error{[j];kind;constructor(e,t,n){super(t,n),this[j]=!0,this.kind=e}static is(e){return\"object\"==typeof e&&null!==e&&!0===e[j]}static isErrorOfKind(e,t){return T.is(e)&&e.kind===t}}var S,A,C;function $(t){const n=e(t,I)??w();if(!function(t){const n=e(t,b);return void 0!==n&&0!==n}(t))return function(e,t){const n=[];if(t.length<e.length)throw new T(S.missingInjectionDecorator,`Found unexpected missing metadata on type \"${e.name}\". \"${e.name}\" constructor requires at least ${e.length.toString()} arguments, found ${t.length.toString()} instead.\\nAre you using @inject, @multiInject or @unmanaged decorators in every non optional constructor argument?\\n\\nIf you're using typescript and want to rely on auto injection, set \"emitDecoratorMetadata\" compiler option to true`);for(let e=0;e<t.length;++e)void 0===t[e]&&n.push(e);if(n.length>0)throw new T(S.missingInjectionDecorator,`Found unexpected missing metadata on type \"${e.name}\" at constructor indexes \"${n.join('\", \"')}\".\\n\\nAre you using @inject, @multiInject or @unmanaged decorators at those indexes?\\n\\nIf you're using typescript and want to rely on auto injection, set \"emitDecoratorMetadata\" compiler option to true`)}(t,n.constructorArguments),n;!function(e,t){const n=[];for(let i=0;i<t.constructorArguments.length;++i){const o=t.constructorArguments[i];void 0!==o&&o.kind!==A.unknown||n.push(`  - Missing or incomplete metadata for type \"${e.name}\" at constructor argument with index ${i.toString()}.\\nEvery constructor parameter must be decorated either with @inject, @multiInject or @unmanaged decorator.`)}for(const[i,o]of t.properties)o.kind===A.unknown&&n.push(`  - Missing or incomplete metadata for type \"${e.name}\" at property \"${i.toString()}\".\\nThis property must be decorated either with @inject or @multiInject decorator.`);if(0===n.length)throw new T(S.unknown,`Unexpected class metadata for type \"${e.name}\" with uncompletion traces.\\nThis might be caused by one of the following reasons:\\n\\n1. A third party library is targeting inversify reflection metadata.\\n2. A bug is causing the issue. Consider submiting an issue to fix it.`);throw new T(S.missingInjectionDecorator,`Invalid class metadata at type ${e.name}:\\n\\n${n.join(\"\\n\\n\")}`)}(t,n)}function x(){return 0}function R(e){return t=>{void 0!==t&&t.kind===A.unknown&&n(e,b,x,(e=>e-1))}}function B(e,t){return(...n)=>i=>{if(void 0===i)return e(...n);if(i.kind===C.unmanaged)throw new T(S.injectionDecoratorConflict,\"Unexpected injection found. Multiple @inject, @multiInject or @unmanaged decorators found\");return t(i,...n)}}function k(e){if(e.kind!==A.unknown&&!0!==e.isFromTypescriptParamType)throw new T(S.injectionDecoratorConflict,\"Unexpected injection found. Multiple @inject, @multiInject or @unmanaged decorators found\")}!function(e){e[e.injectionDecoratorConflict=0]=\"injectionDecoratorConflict\",e[e.missingInjectionDecorator=1]=\"missingInjectionDecorator\",e[e.planning=2]=\"planning\",e[e.resolution=3]=\"resolution\",e[e.unknown=4]=\"unknown\"}(S||(S={})),function(e){e[e.unknown=32]=\"unknown\"}(A||(A={})),function(e){e[e.multipleInjection=0]=\"multipleInjection\",e[e.singleInjection=1]=\"singleInjection\",e[e.unmanaged=2]=\"unmanaged\"}(C||(C={}));const P=B((function(e,t){return{kind:e,name:void 0,optional:!1,tags:new Map,value:t}}),(function(e,t,n){return k(e),{...e,kind:t,value:n}}));function D(e,t){return n=>{const i=n.properties.get(t);return n.properties.set(t,e(i)),n}}var F;function O(e,t,n,i){if(T.isErrorOfKind(i,S.injectionDecoratorConflict)){const o=function(e,t,n){if(void 0===n){if(void 0===t)throw new T(S.unknown,\"Unexpected undefined property and index values\");return{kind:F.property,property:t,targetClass:e.constructor}}return\"number\"==typeof n?{index:n,kind:F.parameter,targetClass:e}:{kind:F.method,method:t,targetClass:e}}(e,t,n);throw new T(S.injectionDecoratorConflict,`Unexpected injection error.\\n\\nCause:\\n\\n${i.message}\\n\\nDetails\\n\\n${function(e){switch(e.kind){case F.method:return`[class: \"${e.targetClass.name}\", method: \"${e.method.toString()}\"]`;case F.parameter:return`[class: \"${e.targetClass.name}\", index: \"${e.index.toString()}\"]`;case F.property:return`[class: \"${e.targetClass.name}\", property: \"${e.property.toString()}\"]`}}(o)}`,{cause:i})}throw i}function V(e,t){return(i,o,r)=>{try{void 0===r?function(e,t){const i=E(e,t);return(e,t)=>{n(e.constructor,I,w,D(i(e),t))}}(e,t)(i,o):\"number\"==typeof r?function(e,t){const i=E(e,t);return(e,t,o)=>{if(!function(e,t){return\"function\"==typeof e&&void 0===t}(e,t))throw new T(S.injectionDecoratorConflict,`Found an @inject decorator in a non constructor parameter.\\nFound @inject decorator at method \"${t?.toString()??\"\"}\" at class \"${e.constructor.name}\"`);n(e,I,w,function(e,t){return n=>{const i=n.constructorArguments[t];return n.constructorArguments[t]=e(i),n}}(i(e),o))}}(e,t)(i,o,r):function(e,t){const i=E(e,t);return(e,t,o)=>{if(!function(e){return void 0!==e.set}(o))throw new T(S.injectionDecoratorConflict,`Found an @inject decorator in a non setter property method.\\nFound @inject decorator at method \"${t.toString()}\" at class \"${e.constructor.name}\"`);n(e.constructor,I,w,D(i(e),t))}}(e,t)(i,o,r)}catch(e){O(i,o,r,e)}}}function E(e,t){return n=>{const i=t(n);return t=>(i(t),e(t))}}function N(e){return V(P(C.singleInjection,e),R)}!function(e){e[e.method=0]=\"method\",e[e.parameter=1]=\"parameter\",e[e.property=2]=\"property\"}(F||(F={}));const U=\"@inversifyjs/core/classIsInjectableFlagReflectKey\";const K=[Array,BigInt,Boolean,Function,Number,Object,String];function q(t){const i=e(t,\"design:paramtypes\");void 0!==i&&n(t,I,w,function(e){return t=>(e.forEach(((e,n)=>{var i;void 0!==t.constructorArguments[n]||(i=e,K.includes(i))||(t.constructorArguments[n]=function(e){return{isFromTypescriptParamType:!0,kind:C.singleInjection,name:void 0,optional:!1,tags:new Map,value:e}}(e))})),t)}(i))}function z(i){return o=>{!function(n){if(void 0!==e(n,U))throw new T(S.injectionDecoratorConflict,`Cannot apply @injectable decorator multiple times at class \"${n.name}\"`);t(n,U,!0)}(o),q(o),void 0!==i&&n(o,I,w,(e=>({...e,scope:i})))}}function G(e,t,n){let i;return e.extendConstructorArguments??!0?(i=[...t.constructorArguments],n.constructorArguments.map(((e,t)=>{i[t]=e}))):i=n.constructorArguments,i}function _(e,t,n){let i;return i=e.extendProperties??!0?new Map(l(t.properties,n.properties)):n.properties,i}function X(e){return t=>{const i=$(e.type);n(t,I,w,function(e,t){const n=n=>({constructorArguments:G(e,t,n),lifecycle:n.lifecycle,properties:_(e,t,n),scope:n.scope});return n}(e,i))}}function H(e){return t=>{const n=i(t);if(void 0===n)throw new T(S.injectionDecoratorConflict,`Expected base type for type \"${t.name}\", none found.`);X({...e,type:n})(t)}}function J(e){return V(P(C.multipleInjection,e),R)}function L(e){return t=>{void 0===t&&n(e,b,x,(e=>e+1))}}function Q(e){return t=>{const n=t??{kind:A.unknown,name:void 0,optional:!1,tags:new Map};if(n.kind===C.unmanaged)throw new T(S.injectionDecoratorConflict,\"Unexpected injection found. Found @unmanaged injection with additional @named, @optional, @tagged or @targetName injections\");return e(n)}}function W(e){const t=Q(function(e){return t=>{if(void 0!==t.name)throw new T(S.injectionDecoratorConflict,\"Unexpected duplicated named decorator\");return t.name=e,t}}(e));return V(t,L)}function Y(e){if(e.optional)throw new T(S.injectionDecoratorConflict,\"Unexpected duplicated optional decorator\");return e.optional=!0,e}function Z(){return V(Q(Y),L)}function ee(){return(e,t,i)=>{try{n(e.constructor,I,w,(o=t,e=>{if(void 0!==e.lifecycle.postConstructMethodName)throw new T(S.injectionDecoratorConflict,\"Unexpected duplicated postConstruct decorator\");return e.lifecycle.postConstructMethodName=o,e}))}catch(n){O(e,t,void 0,n)}var o}}function te(){return(e,t,i)=>{try{n(e.constructor,I,w,(o=t,e=>{if(void 0!==e.lifecycle.preDestroyMethodName)throw new T(S.injectionDecoratorConflict,\"Unexpected duplicated preDestroy decorator\");return e.lifecycle.preDestroyMethodName=o,e}))}catch(n){O(e,t,void 0,n)}var o}}function ne(e,t){const n=Q(function(e,t){return n=>{if(n.tags.has(e))throw new T(S.injectionDecoratorConflict,\"Unexpected duplicated tag decorator with existing tag\");return n.tags.set(e,t),n}}(e,t));return V(n,L)}function ie(){return{kind:C.unmanaged}}const oe=B(ie,(function(e){if(k(e),function(e){return void 0!==e.name||e.optional||e.tags.size>0}(e))throw new T(S.injectionDecoratorConflict,\"Unexpected injection found. Found @unmanaged injection with additional @named, @optional, @tagged or @targetName injections\");return ie()}));function re(){return V(oe(),R)}var ae;!function(e){e[e.multipleInjection=0]=\"multipleInjection\",e[e.singleInjection=1]=\"singleInjection\"}(ae||(ae={}));class se{#p;constructor(e){this.#p=e}get name(){return this.#p.elem.name}get serviceIdentifier(){return this.#p.elem.serviceIdentifier}get tags(){return this.#p.elem.tags}getAncestor(){if(void 0!==this.#p.previous)return new se(this.#p.previous)}}class ce{last;constructor(e){this.last=e}concat(e){return new ce({elem:e,previous:this.last})}[Symbol.iterator](){let e=this.last;return{next:()=>{if(void 0===e)return{done:!0,value:void 0};const t=e.elem;return e=e.previous,{done:!1,value:t}}}}}function ue(e,t,n){const i=n?.customServiceIdentifier??t.serviceIdentifier,o=[...e.getBindings(i)??[]].filter((e=>e.isSatisfiedBy(t)));if(0===o.length&&void 0!==e.autobindOptions&&\"function\"==typeof i){const t=function(e,t){const n=$(t),i=n.scope??e.scope;return{cache:{isRight:!1,value:void 0},id:c(),implementationType:t,isSatisfiedBy:()=>!0,moduleId:void 0,onActivation:void 0,onDeactivation:void 0,scope:i,serviceIdentifier:t,type:d.Instance}}(e.autobindOptions,i);e.setBinding(t),o.push(t)}return o}function de(e){return void 0!==e.redirections}function le(e,t,n,i){let r,a;de(n)?(r=n.binding.targetServiceIdentifier,a=n.binding.serviceIdentifier):(r=n.serviceIdentifier,a=n.parent?.binding.serviceIdentifier),Array.isArray(e)?function(e,t,n,i,r){if(0!==e.length){const t=`Ambiguous bindings found for service: \"${o(n)}\".\\n\\nRegistered bindings:\\n\\n${e.map((e=>function(e){switch(e.type){case d.Instance:return`[ type: \"${e.type}\", serviceIdentifier: \"${o(e.serviceIdentifier)}\", scope: \"${e.scope}\", implementationType: \"${e.implementationType.name}\" ]`;case d.ServiceRedirection:return`[ type: \"${e.type}\", serviceIdentifier: \"${o(e.serviceIdentifier)}\", redirection: \"${o(e.targetServiceIdentifier)}\" ]`;default:return`[ type: \"${e.type}\", serviceIdentifier: \"${o(e.serviceIdentifier)}\", scope: \"${e.scope}\" ]`}}(e.binding))).join(\"\\n\")}\\n\\nTrying to resolve bindings for \"${fe(n,i)}\".\\n\\n${ge(r)}`;throw new T(S.planning,t)}t||pe(n,i,r)}(e,t,r,a,i):function(e,t,n,i,o){if(void 0!==e||t)return;pe(n,i,o)}(e,t,r,a,i)}function pe(e,t,n){const i=`No bindings found for service: \"${o(e)}\".\\n\\nTrying to resolve bindings for \"${fe(e,t)}\".\\n\\n${ge(n)}`;throw new T(S.planning,i)}function fe(e,t){return void 0===t?`${o(e)} (Root service)`:o(t)}function ge(e){const t=0===e.tags.size?\"\":`\\n- tags:\\n  - ${[...e.tags.keys()].map((e=>e.toString())).join(\"\\n  - \")}`;return`Binding constraints:\\n- service identifier: ${o(e.serviceIdentifier)}\\n- name: ${e.name?.toString()??\"-\"}${t}`}function me(e,t,n){if(1!==e.redirections.length)le(e.redirections,t,e,n);else{const[i]=e.redirections;de(i)&&me(i,t,n)}}function he(e,t,n){if(Array.isArray(e.bindings)&&1===e.bindings.length){const[i]=e.bindings;de(i)&&me(i,t,n)}else le(e.bindings,t,e,n)}function ve(e,t){if(function(e){return e instanceof Error&&(e instanceof RangeError&&/stack space|call stack|too much recursion/i.test(e.message)||\"InternalError\"===e.name&&/too much recursion/.test(e.message))}(t)){const n=function(e){const t=[...e];if(0===t.length)return\"(No dependency trace)\";return t.map(o).join(\" -> \")}(function(e){const t=new Set;for(const n of e.servicesBranch){if(t.has(n))return[...t,n];t.add(n)}return[...t]}(e));throw new T(S.planning,`Circular dependency found: ${n}`,{cause:t})}throw t}function ye(e){try{const t=new Map;void 0!==e.rootConstraints.tag&&t.set(e.rootConstraints.tag.key,e.rootConstraints.tag.value);const n=new ce({elem:{name:e.rootConstraints.name,serviceIdentifier:e.rootConstraints.serviceIdentifier,tags:t},previous:void 0}),i=new se(n.last),o=ue(e,i),r=[],a={bindings:r,parent:void 0,serviceIdentifier:e.rootConstraints.serviceIdentifier};if(r.push(...je(e,n,o,a)),!e.rootConstraints.isMultiple){he(a,e.rootConstraints.isOptional??!1,i);const[t]=r;a.bindings=t}return{tree:{root:a}}}catch(t){ve(e,t)}}function Me(e,t,n,i){const o={binding:t,classMetadata:e.getClassMetadata(t.implementationType),constructorParams:[],parent:i,propertyParams:new Map};return Se({autobindOptions:e.autobindOptions,getBindings:e.getBindings,getClassMetadata:e.getClassMetadata,node:o,servicesBranch:e.servicesBranch,setBinding:e.setBinding},n)}function Ie(e,t,n){if(n.kind===C.unmanaged)return;const i=r.is(n.value)?n.value.unwrap():n.value,o=t.concat({name:n.name,serviceIdentifier:i,tags:n.tags}),a=new se(o.last),s=ue(e,a),c=[],u={bindings:c,parent:e.node,serviceIdentifier:i};if(c.push(...je(e,o,s,u)),n.kind===C.singleInjection){he(u,n.optional,a);const[e]=c;u.bindings=e}return u}function we(e,t,n){const i=r.is(n.value)?n.value.unwrap():n.value,o=t.concat({name:n.name,serviceIdentifier:i,tags:n.tags}),a=new se(o.last),s=ue(e,a),c=[],u={bindings:c,parent:e.node,serviceIdentifier:i};if(c.push(...je(e,o,s,u)),n.kind===ae.singleInjection){he(u,n.optional,a);const[e]=c;u.bindings=e}return u}function be(e,t,n,i){const o={binding:t,params:[],parent:i};return Se({autobindOptions:e.autobindOptions,getBindings:e.getBindings,getClassMetadata:e.getClassMetadata,node:o,servicesBranch:e.servicesBranch,setBinding:e.setBinding},n)}function je(e,t,n,i){const o=de(i)?i.binding.targetServiceIdentifier:i.serviceIdentifier;e.servicesBranch.push(o);const r=[];for(const o of n)switch(o.type){case d.Instance:r.push(Me(e,o,t,i));break;case d.ResolvedValue:r.push(be(e,o,t,i));break;case d.ServiceRedirection:{const n=Te(e,t,o,i);r.push(n);break}default:r.push({binding:o,parent:i})}return e.servicesBranch.pop(),r}function Te(e,t,n,i){const o={binding:n,parent:i,redirections:[]},r=ue(e,new se(t.last),{customServiceIdentifier:n.targetServiceIdentifier});return o.redirections.push(...je(e,t,r,o)),o}function Se(e,t){return e.node.binding.type===d.Instance?function(e,t,n){const i=t.classMetadata;for(const[o,r]of i.constructorArguments.entries())t.constructorParams[o]=Ie(e,n,r);for(const[o,r]of i.properties){const i=Ie(e,n,r);void 0!==i&&t.propertyParams.set(o,i)}return e.node}(e,e.node,t):function(e,t,n){const i=t.binding.metadata;for(const[o,r]of i.arguments.entries())t.params[o]=we(e,n,r);return e.node}(e,e.node,t)}var Ae;!function(e){e[e.singleMandatory=0]=\"singleMandatory\",e[e.singleOptional=1]=\"singleOptional\",e[e.multipleMandatory=2]=\"multipleMandatory\",e[e.multipleOptional=3]=\"multipleOptional\",e[e.length=4]=\"length\"}(Ae||(Ae={}));class Ce{#f;#g;#m;#h;#v;constructor(){this.#f=this.#y(),this.#g=this.#y(),this.#h=this.#y(),this.#m=this.#y(),this.#v=[]}clearCache(){for(const e of this.#M())e.clear();for(const e of this.#v)e.clearCache()}get(e){return void 0===e.name?void 0===e.tag?this.#I(this.#f,e).get(e.serviceIdentifier):this.#I(this.#m,e).get(e.serviceIdentifier)?.get(e.tag.key)?.get(e.tag.value):void 0===e.tag?this.#I(this.#g,e).get(e.serviceIdentifier)?.get(e.name):this.#I(this.#h,e).get(e.serviceIdentifier)?.get(e.name)?.get(e.tag.key)?.get(e.tag.value)}set(e,t){void 0===e.name?void 0===e.tag?this.#I(this.#f,e).set(e.serviceIdentifier,t):this.#w(this.#w(this.#I(this.#m,e),e.serviceIdentifier),e.tag.key).set(e.tag.value,t):void 0===e.tag?this.#w(this.#I(this.#g,e),e.serviceIdentifier).set(e.name,t):this.#w(this.#w(this.#w(this.#I(this.#h,e),e.serviceIdentifier),e.name),e.tag.key).set(e.tag.value,t)}subscribe(e){this.#v.push(e)}#y(){const e=new Array(Ae.length);for(let t=0;t<e.length;++t)e[t]=new Map;return e}#w(e,t){let n=e.get(t);return void 0===n&&(n=new Map,e.set(t,n)),n}#I(e,t){return e[this.#b(t)]}#M(){return[...this.#f,...this.#g,...this.#h,...this.#m]}#b(e){return e.isMultiple?!0===e.optional?Ae.multipleOptional:Ae.multipleMandatory:!0===e.optional?Ae.singleOptional:Ae.singleMandatory}}function $e(e,t){return a(t)?(e.cache={isRight:!0,value:t},t.then((t=>xe(e,t)))):xe(e,t)}function xe(e,t){return e.cache={isRight:!0,value:t},t}function Re(e,t,n){const i=e.getActivations(t);return void 0===i?n:a(n)?Be(e,n,i[Symbol.iterator]()):function(e,t,n){let i=t,o=n.next();for(;!0!==o.done;){const t=o.value(e.context,i);if(a(t))return Be(e,t,n);i=t,o=n.next()}return i}(e,n,i[Symbol.iterator]())}async function Be(e,t,n){let i=await t,o=n.next();for(;!0!==o.done;)i=await o.value(e.context,i),o=n.next();return i}function ke(e,t,n){let i=n;if(void 0!==t.onActivation){const n=t.onActivation;i=a(i)?i.then((t=>n(e.context,t))):n(e.context,i)}return Re(e,t.serviceIdentifier,i)}function Pe(e){return(t,n)=>{if(n.cache.isRight)return n.cache.value;return $e(n,ke(t,n,e(t,n)))}}const De=Pe((function(e,t){return t.value}));function Fe(e){return e}function Oe(e,t){return(n,i)=>{const o=e(i);switch(o.scope){case u.Singleton:if(o.cache.isRight)return o.cache.value;return $e(o,ke(n,o,t(n,i)));case u.Request:{if(n.requestScopeCache.has(o.id))return n.requestScopeCache.get(o.id);const e=ke(n,o,t(n,i));return n.requestScopeCache.set(o.id,e),e}case u.Transient:return ke(n,o,t(n,i))}}}const Ve=(e=>Oe(Fe,e))((function(e,t){return t.value(e.context)}));const Ee=Pe((function(e,t){return t.factory(e.context)}));function Ne(e,t,n){const i=function(e,t,n){if(void 0===n)return;if(!(n in e))throw new T(S.resolution,`Expecting a \"${n.toString()}\" property when resolving \"${t.implementationType.name}\" class @postConstruct decorated method, none found.`);if(\"function\"!=typeof e[n])throw new T(S.resolution,`Expecting a \"${n.toString()}\" method when resolving \"${t.implementationType.name}\" class @postConstruct decorated method, a non function property was found instead.`);{let i;try{i=e[n]()}catch(e){throw new T(S.resolution,`Unexpected error found when calling \"${n.toString()}\" @postConstruct decorated method on class \"${t.implementationType.name}\"`,{cause:e})}if(a(i))return async function(e,t,n){try{await n}catch(n){throw new T(S.resolution,`Unexpected error found when calling \"${t.toString()}\" @postConstruct decorated method on class \"${e.implementationType.name}\"`,{cause:n})}}(t,n,i)}}(e,t,n);return a(i)?i.then((()=>e)):e}function Ue(e){return(t,n,i)=>{const o=new i.binding.implementationType(...t),r=e(n,o,i);return a(r)?r.then((()=>Ne(o,i.binding,i.classMetadata.lifecycle.postConstructMethodName))):Ne(o,i.binding,i.classMetadata.lifecycle.postConstructMethodName)}}const Ke=Pe((function(e,t){return t.provider(e.context)}));function qe(e){return e.binding}function ze(e){return e.binding}const Ge=function(e){return(t,n,i)=>{const o=[];for(const[r,s]of i.propertyParams){const c=i.classMetadata.properties.get(r);if(void 0===c)throw new T(S.resolution,`Expecting metadata at property \"${r.toString()}\", none found`);c.kind!==C.unmanaged&&void 0!==s.bindings&&(n[r]=e(t,s),a(n[r])&&o.push((async()=>{n[r]=await n[r]})()))}if(o.length>0)return Promise.all(o).then((()=>{}))}}(Ye),_e=function(e){return function t(n,i){const o=[];for(const r of i.redirections)de(r)?o.push(...t(n,r)):o.push(e(n,r));return o}}(We),Xe=function(e,t,n){return(i,o)=>{const r=e(i,o);return a(r)?t(r,i,o):n(r,i,o)}}(function(e){return(t,n)=>{const i=[];for(const o of n.constructorParams)void 0===o?i.push(void 0):i.push(e(t,o));return i.some(a)?Promise.all(i):i}}(Ye),function(e){return async(t,n,i)=>{const o=await t;return e(o,n,i)}}(Ue(Ge)),Ue(Ge)),He=function(e){return(t,n)=>{const i=e(t,n);return a(i)?i.then((e=>n.binding.factory(...e))):n.binding.factory(...i)}}(function(e){return(t,n)=>{const i=[];for(const o of n.params)i.push(e(t,o));return i.some(a)?Promise.all(i):i}}(Ye)),Je=(e=>Oe(qe,e))(Xe),Le=(e=>Oe(ze,e))(He);function Qe(e){return Ye(e,e.planResult.tree.root)}function We(e,t){switch(t.binding.type){case d.ConstantValue:return De(e,t.binding);case d.DynamicValue:return Ve(e,t.binding);case d.Factory:return Ee(e,t.binding);case d.Instance:return Je(e,t);case d.Provider:return Ke(e,t.binding);case d.ResolvedValue:return Le(e,t)}}function Ye(e,t){if(void 0!==t.bindings)return Array.isArray(t.bindings)?function(e,t){const n=[];for(const i of t)de(i)?n.push(..._e(e,i)):n.push(We(e,i));if(n.some(a))return Promise.all(n);return n}(e,t.bindings):function(e,t){if(de(t)){const n=_e(e,t);if(1===n.length)return n[0];throw new T(S.resolution,\"Unexpected multiple resolved values on single injection\")}return We(e,t)}(e,t.bindings)}function Ze(e){return void 0!==e.scope}function et(e,t){if(void 0!==e.lifecycle.preDestroyMethodName&&\"function\"==typeof t[e.lifecycle.preDestroyMethodName])return t[e.lifecycle.preDestroyMethodName]()}function tt(e,t,n){const i=e.getDeactivations(t);if(void 0!==i)return a(n)?nt(n,i[Symbol.iterator]()):function(e,t){let n=t.next();for(;!0!==n.done;){const i=n.value(e);if(a(i))return nt(e,t);n=t.next()}}(n,i[Symbol.iterator]())}async function nt(e,t){const n=await e;let i=t.next();for(;!0!==i.done;)await i.value(n),i=t.next()}function it(e,t){const n=function(e,t){if(t.type===d.Instance){const n=e.getClassMetadata(t.implementationType),i=t.cache.value;return a(i)?i.then((e=>et(n,e))):et(n,i)}}(e,t);return void 0===n?ot(e,t):n.then((()=>ot(e,t)))}function ot(e,t){const n=t.cache;return a(n.value)?n.value.then((n=>rt(e,t,n))):rt(e,t,n.value)}function rt(e,t,n){let i;if(void 0!==t.onDeactivation){i=(0,t.onDeactivation)(n)}return void 0===i?tt(e,t.serviceIdentifier,n):i.then((()=>tt(e,t.serviceIdentifier,n)))}function at(e,t){if(void 0===t)return;const n=function(e){const t=[];for(const n of e)Ze(n)&&n.scope===u.Singleton&&n.cache.isRight&&t.push(n);return t}(t),i=[];for(const t of n){const n=it(e,t);void 0!==n&&i.push(n)}return i.length>0?Promise.all(i).then((()=>{})):void 0}function st(e,t){const n=e.getBindingsFromModule(t);return at(e,n)}function ct(e,t){const n=e.getBindings(t);return at(e,n)}export{h as ActivationsService,v as BindingService,C as ClassElementMetadataKind,y as DeactivationsService,Ce as PlanResultCacheService,ae as ResolvedValueElementMetadataKind,u as bindingScopeValues,d as bindingTypeValues,M as decorate,c as getBindingId,$ as getClassMetadata,N as inject,H as injectFromBase,z as injectable,J as multiInject,W as named,Z as optional,ye as plan,ee as postConstruct,te as preDestroy,Qe as resolve,at as resolveBindingsDeactivations,st as resolveModuleDeactivations,ct as resolveServiceDeactivations,ne as tagged,re as unmanaged};\n//# sourceMappingURL=index.js.map\n","function t(t){const o=Object.getPrototypeOf(t.prototype),r=o?.constructor;return r}export{t as getBaseType};\n//# sourceMappingURL=index.js.map\n","import\"reflect-metadata\";import{getOwnReflectMetadata as i,setReflectMetadata as e,updateOwnReflectMetadata as n}from\"@inversifyjs/reflect-metadata-utils\";import{LazyServiceIdentifier as t,isPromise as s,stringifyServiceIdentifier as r}from\"@inversifyjs/common\";import{getClassMetadata as a,bindingTypeValues as o,getBindingId as d,bindingScopeValues as c,ResolvedValueElementMetadataKind as l,PlanResultCacheService as u,ActivationsService as h,BindingService as v,DeactivationsService as g,resolveServiceDeactivations as b,plan as f,resolve as S,resolveModuleDeactivations as p,resolveBindingsDeactivations as y}from\"@inversifyjs/core\";const m=\"@inversifyjs/container/bindingId\";class w{#i;#e;constructor(t){this.#i=function(){const t=i(Object,m)??0;return t===Number.MAX_SAFE_INTEGER?e(Object,m,Number.MIN_SAFE_INTEGER):n(Object,m,(()=>t),(i=>i+1)),t}(),this.#e=t}get id(){return this.#i}load(i){return this.#e(i)}}const I=Symbol.for(\"@inversifyjs/container/bindingIdentifier\");function A(i){return\"object\"==typeof i&&null!==i&&!0===i[I]}class P{static always=i=>!0}function B(i){return{[I]:!0,id:i.id}}function C(i){return e=>{for(let n=e.getAncestor();void 0!==n;n=n.getAncestor())if(i(n))return!0;return!1}}function R(i){return e=>e.name===i}function M(i){return e=>e.serviceIdentifier===i}function x(i,e){return n=>n.tags.has(i)&&n.tags.get(i)===e}function O(i){return void 0===i.name&&0===i.tags.size}function N(i){const e=C(i);return i=>!e(i)}function U(i){return e=>{const n=e.getAncestor();return void 0===n||!i(n)}}function F(i){return e=>{const n=e.getAncestor();return void 0!==n&&i(n)}}class k{#n;constructor(i){this.#n=i}getIdentifier(){return B(this.#n)}inRequestScope(){return this.#n.scope=c.Request,new V(this.#n)}inSingletonScope(){return this.#n.scope=c.Singleton,new V(this.#n)}inTransientScope(){return this.#n.scope=c.Transient,new V(this.#n)}}class D{#t;#s;#r;#a;constructor(i,e,n,t){this.#t=i,this.#s=e,this.#r=n,this.#a=t}to(i){const e=a(i),n={cache:{isRight:!1,value:void 0},id:d(),implementationType:i,isSatisfiedBy:P.always,moduleId:this.#s,onActivation:void 0,onDeactivation:void 0,scope:e.scope??this.#r,serviceIdentifier:this.#a,type:o.Instance};return this.#t(n),new E(n)}toSelf(){if(\"function\"!=typeof this.#a)throw new Error('\"toSelf\" function can only be applied when a newable function is used as service identifier');return this.to(this.#a)}toConstantValue(i){const e={cache:{isRight:!1,value:void 0},id:d(),isSatisfiedBy:P.always,moduleId:this.#s,onActivation:void 0,onDeactivation:void 0,scope:c.Singleton,serviceIdentifier:this.#a,type:o.ConstantValue,value:i};return this.#t(e),new V(e)}toDynamicValue(i){const e={cache:{isRight:!1,value:void 0},id:d(),isSatisfiedBy:P.always,moduleId:this.#s,onActivation:void 0,onDeactivation:void 0,scope:this.#r,serviceIdentifier:this.#a,type:o.DynamicValue,value:i};return this.#t(e),new E(e)}toResolvedValue(i,e){const n={cache:{isRight:!1,value:void 0},factory:i,id:d(),isSatisfiedBy:P.always,metadata:this.#o(e),moduleId:this.#s,onActivation:void 0,onDeactivation:void 0,scope:this.#r,serviceIdentifier:this.#a,type:o.ResolvedValue};return this.#t(n),new E(n)}toFactory(i){const e={cache:{isRight:!1,value:void 0},factory:i,id:d(),isSatisfiedBy:P.always,moduleId:this.#s,onActivation:void 0,onDeactivation:void 0,scope:c.Singleton,serviceIdentifier:this.#a,type:o.Factory};return this.#t(e),new V(e)}toProvider(i){const e={cache:{isRight:!1,value:void 0},id:d(),isSatisfiedBy:P.always,moduleId:this.#s,onActivation:void 0,onDeactivation:void 0,provider:i,scope:c.Singleton,serviceIdentifier:this.#a,type:o.Provider};return this.#t(e),new V(e)}toService(i){const e={id:d(),isSatisfiedBy:P.always,moduleId:this.#s,serviceIdentifier:this.#a,targetServiceIdentifier:i,type:o.ServiceRedirection};this.#t(e)}#o(i){return{arguments:(i??[]).map((i=>function(i){return\"object\"==typeof i&&!t.is(i)}(i)?{kind:!0===i.isMultiple?l.multipleInjection:l.singleInjection,name:i.name,optional:i.optional??!1,tags:new Map((i.tags??[]).map((i=>[i.key,i.value]))),value:i.serviceIdentifier}:{kind:l.singleInjection,name:void 0,optional:!1,tags:new Map,value:i}))}}}class j{#n;constructor(i){this.#n=i}getIdentifier(){return B(this.#n)}onActivation(i){return this.#n.onActivation=i,new T(this.#n)}onDeactivation(i){return this.#n.onDeactivation=i,new T(this.#n)}}class T{#n;constructor(i){this.#n=i}getIdentifier(){return B(this.#n)}when(i){return this.#n.isSatisfiedBy=i,new j(this.#n)}whenAnyAncestor(i){return this.when(C(i))}whenAnyAncestorIs(i){return this.when(C(M(i)))}whenAnyAncestorNamed(i){return this.when(function(i){return C(R(i))}(i))}whenAnyAncestorTagged(i,e){return this.when(function(i,e){return C(x(i,e))}(i,e))}whenDefault(){return this.when(O)}whenNamed(i){return this.when(R(i))}whenNoParent(i){return this.when(U(i))}whenNoParentIs(i){return this.when(U(M(i)))}whenNoParentNamed(i){return this.when(function(i){return U(R(i))}(i))}whenNoParentTagged(i,e){return this.when(function(i,e){return U(x(i,e))}(i,e))}whenParent(i){return this.when(F(i))}whenParentIs(i){return this.when(F(M(i)))}whenParentNamed(i){return this.when(function(i){return F(R(i))}(i))}whenParentTagged(i,e){return this.when(function(i,e){return F(x(i,e))}(i,e))}whenTagged(i,e){return this.when(x(i,e))}whenNoAncestor(i){return this.when(N(i))}whenNoAncestorIs(i){return this.when(N(M(i)))}whenNoAncestorNamed(i){return this.when(function(i){return N(R(i))}(i))}whenNoAncestorTagged(i,e){return this.when(function(i,e){return N(x(i,e))}(i,e))}}class V extends T{#d;constructor(i){super(i),this.#d=new j(i)}onActivation(i){return this.#d.onActivation(i)}onDeactivation(i){return this.#d.onDeactivation(i)}}class E extends V{#c;constructor(i){super(i),this.#c=new k(i)}inRequestScope(){return this.#c.inRequestScope()}inSingletonScope(){return this.#c.inSingletonScope()}inTransientScope(){return this.#c.inTransientScope()}}const q=Symbol.for(\"@inversifyjs/container/InversifyContainerError\");class G extends Error{[q];kind;constructor(i,e,n){super(e,n),this[q]=!0,this.kind=i}static is(i){return\"object\"==typeof i&&null!==i&&!0===i[q]}static isErrorOfKind(i,e){return G.is(i)&&i.kind===e}}var $;!function(i){i[i.invalidOperation=0]=\"invalidOperation\"}($||($={}));const _=c.Transient;class L{#l;#u;#h;#v;#g;#b;#f;#S;#p;#y;#m;constructor(i){this.#h=this.#w(),this.#g=i=>this.#l.get(i),this.#S=new u,this.#p=this.#I(),void 0===i?.parent?(this.#l=h.build(void 0),this.#u=v.build(void 0),this.#v=g.build(void 0)):(this.#l=h.build(i.parent.#l),this.#u=v.build(i.parent.#u),this.#v=g.build(i.parent.#v),i.parent.#S.subscribe(this.#S)),this.#b=this.#u.get.bind(this.#u),this.#y=this.#A.bind(this),this.#f={autobind:i?.autobind??!1,defaultScope:i?.defaultScope??_},this.#m=[]}bind(i){return new D((i=>{this.#A(i)}),void 0,this.#f.defaultScope,i)}get(i,e){const n=this.#P(!1,i,e),t=this.#B(n);if(s(t))throw new G($.invalidOperation,`Unexpected asyncronous service when resolving service \"${r(i)}\"`);return t}getAll(i,e){const n=this.#P(!0,i,e),t=this.#B(n);if(s(t))throw new G($.invalidOperation,`Unexpected asyncronous service when resolving service \"${r(i)}\"`);return t}async getAllAsync(i,e){const n=this.#P(!0,i,e);return this.#B(n)}async getAsync(i,e){const n=this.#P(!1,i,e);return this.#B(n)}isBound(i,e){const n=this.#u.get(i);return this.#C(i,n,e)}isCurrentBound(i,e){const n=this.#u.getNonParentBindings(i);return this.#C(i,n,e)}async load(...i){await Promise.all(this.#e(...i))}loadSync(...i){const e=this.#e(...i);for(const i of e)if(void 0!==i)throw new G($.invalidOperation,\"Unexpected asyncronous module load. Consider using Container.load() instead.\")}onActivation(i,e){this.#l.add(e,{serviceId:i})}onDeactivation(i,e){this.#v.add(e,{serviceId:i})}restore(){const i=this.#m.pop();if(void 0===i)throw new G($.invalidOperation,\"No snapshot available to restore\");this.#l=i.activationService,this.#u=i.bindingService,this.#v=i.deactivationService,this.#R()}async rebind(i){return await this.unbind(i),this.bind(i)}rebindSync(i){return this.unbindSync(i),this.bind(i)}snapshot(){this.#m.push({activationService:this.#l.clone(),bindingService:this.#u.clone(),deactivationService:this.#v.clone()})}async unbind(i){await this.#M(i)}async unbindAll(){const i=[...this.#u.getNonParentBoundServices()];await Promise.all(i.map((async i=>b(this.#h,i))));for(const e of i)this.#l.removeAllByServiceId(e),this.#u.removeAllByServiceId(e),this.#v.removeAllByServiceId(e);this.#S.clearCache()}unbindSync(i){void 0!==this.#M(i)&&this.#x(i)}async unload(...i){await Promise.all(this.#O(...i)),this.#N(i)}unloadSync(...i){const e=this.#O(...i);for(const i of e)if(void 0!==i)throw new G($.invalidOperation,\"Unexpected asyncronous module unload. Consider using Container.unload() instead.\");this.#N(i)}#U(i){return{bind:e=>new D((i=>{this.#A(i)}),i,this.#f.defaultScope,e),isBound:this.isBound.bind(this),onActivation:(e,n)=>{this.#l.add(n,{moduleId:i,serviceId:e})},onDeactivation:(e,n)=>{this.#v.add(n,{moduleId:i,serviceId:e})},rebind:this.rebind.bind(this),rebindSync:this.rebindSync.bind(this),unbind:this.unbind.bind(this),unbindSync:this.unbindSync.bind(this)}}#w(){return{getBindings:i=>this.#u.get(i),getBindingsFromModule:i=>this.#u.getByModuleId(i),getClassMetadata:a,getDeactivations:i=>this.#v.get(i)}}#F(i,e,n){return{isMultiple:i,name:n?.name,optional:n?.optional,serviceIdentifier:e,tag:n?.tag}}#k(i,e,n){const t={autobindOptions:n?.autobind??this.#f.autobind?{scope:this.#f.defaultScope}:void 0,getBindings:this.#b,getClassMetadata:a,rootConstraints:{isMultiple:e,serviceIdentifier:i},servicesBranch:[],setBinding:this.#y};return this.#D(t,n),t}#P(i,e,n){const t=this.#F(i,e,n),s=this.#S.get(t);if(void 0!==s)return s;const r=f(this.#k(e,i,n));return this.#S.set(t,r),r}#I(){return{get:this.get.bind(this),getAll:this.getAll.bind(this),getAllAsync:this.getAllAsync.bind(this),getAsync:this.getAsync.bind(this)}}#B(i){return S({context:this.#p,getActivations:this.#g,planResult:i,requestScopeCache:new Map})}#D(i,e){void 0!==e&&(void 0!==e.name&&(i.rootConstraints.name=e.name),!0===e.optional&&(i.rootConstraints.isOptional=!0),void 0!==e.tag&&(i.rootConstraints.tag={key:e.tag.key,value:e.tag.value}))}#C(i,e,n){if(void 0===e)return!1;const t={getAncestor:()=>{},name:n?.name,serviceIdentifier:i,tags:new Map};void 0!==n?.tag&&t.tags.set(n.tag.key,n.tag.value);for(const i of e)if(i.isSatisfiedBy(t))return!0;return!1}#e(...i){return i.map((i=>i.load(this.#U(i.id))))}#O(...i){return i.map((i=>p(this.#h,i.id)))}#R(){this.#S.clearCache(),this.#g=i=>this.#l.get(i),this.#b=this.#u.get.bind(this.#u),this.#p=this.#I(),this.#y=this.#A.bind(this)}#A(i){this.#u.set(i),this.#S.clearCache()}#x(i){let e;if(A(i)){const t=this.#u.getById(i.id),s=(n=t,function(i){if(void 0===i)return;const e=i.next();return!0!==e.done?e.value:void 0}(n?.[Symbol.iterator]()))?.serviceIdentifier;e=void 0===s?\"Unexpected asyncronous deactivation when unbinding binding identifier. Consider using Container.unbind() instead.\":`Unexpected asyncronous deactivation when unbinding \"${r(s)}\" binding. Consider using Container.unbind() instead.`}else e=`Unexpected asyncronous deactivation when unbinding \"${r(i)}\" service. Consider using Container.unbind() instead.`;var n;throw new G($.invalidOperation,e)}#M(i){return A(i)?this.#j(i):this.#T(i)}#j(i){const e=this.#u.getById(i.id),n=y(this.#h,e);if(void 0!==n)return n.then((()=>{this.#V(i)}));this.#V(i)}#V(i){this.#u.removeById(i.id),this.#S.clearCache()}#N(i){for(const e of i)this.#l.removeAllByModuleId(e.id),this.#u.removeAllByModuleId(e.id),this.#v.removeAllByModuleId(e.id);this.#S.clearCache()}#T(i){const e=b(this.#h,i);if(void 0!==e)return e.then((()=>{this.#E(i)}));this.#E(i)}#E(i){this.#l.removeAllByServiceId(i),this.#u.removeAllByServiceId(i),this.#v.removeAllByServiceId(i),this.#S.clearCache()}}export{L as Container,w as ContainerModule,G as InversifyContainerError,$ as InversifyContainerErrorKind};\n//# sourceMappingURL=index.js.map\n","const TYPES = {\n    AudioContextManager: Symbol.for(\"AudioContextManager\"),\n    AudioEditor: Symbol.for(\"AudioEditor\"),\n    AudioProcessor: Symbol.for(\"AudioProcessor\"),\n    BufferManager: Symbol.for(\"BufferManager\"),\n    FilterManager: Symbol.for(\"FilterManager\"),\n    RendererManager: Symbol.for(\"RendererManager\"),\n    SaveBufferManager: Symbol.for(\"SaveBufferManager\"),\n    ConfigService: Symbol.for(\"ConfigService\"),\n    EventEmitter: Symbol.for(\"EventEmitter\"),\n    BufferPlayer: Symbol.for(\"BufferPlayer\"),\n    BufferDecoderService: Symbol.for(\"BufferDecoderService\"),\n    BufferFetcherService: Symbol.for(\"BufferFetcherService\"),\n    AudioBuffersToFetch: Symbol.for(\"AudioBuffersToFetch\"),\n    Renderers: Symbol.for(\"Renderers\"),\n    Filters: Symbol.for(\"Filters\"),\n    EntryPointFilter: Symbol.for(\"EntryPointFilter\"),\n    VoiceRecorder: Symbol.for(\"VoiceRecorder\")\n};\n\nexport { TYPES };\n","import { inject, injectable } from \"inversify\";\nimport type { ConfigService } from \"../services/interfaces/ConfigService\";\nimport { TYPES } from \"@/inversify.types\";\nimport type BufferFetcherServiceInterface from \"@/services/interfaces/BufferFetcherServiceInterface\";\nimport type BufferDecoderServiceInterface from \"@/services/interfaces/BufferDecoderServiceInterface\";\nimport type EventEmitterInterface from \"@/utils/interfaces/EventEmitterInterface\";\nimport AudioContextManagerInterface from \"@/audioEditor/interfaces/AudioContextManagerInterface\";\n\n@injectable()\nexport default abstract class AbstractAudioElement {\n\n    @inject(TYPES.BufferFetcherService)\n    protected bufferFetcherService: BufferFetcherServiceInterface | null = null;\n\n    @inject(TYPES.BufferDecoderService)\n    protected bufferDecoderService: BufferDecoderServiceInterface | null = null;\n\n    @inject(TYPES.ConfigService)\n    protected configService: ConfigService | null = null;\n\n    @inject(TYPES.EventEmitter)\n    protected eventEmitter: EventEmitterInterface | null = null;\n\n    @inject(TYPES.AudioContextManager)\n    protected contextManager: AudioContextManagerInterface | null = null;\n\n    injectDependencies(bufferFetcherService: BufferFetcherServiceInterface | null,\n        bufferDecoderService: BufferDecoderServiceInterface | null,\n        configService: ConfigService | null,\n        eventEmitter: EventEmitterInterface | null,\n        contextManager: AudioContextManagerInterface | null) {\n        if (bufferFetcherService) {\n            this.bufferFetcherService = bufferFetcherService;\n        }\n\n        if (bufferDecoderService) {\n            this.bufferDecoderService = bufferDecoderService;\n        }\n\n        if (configService) {\n            this.configService = configService;\n        }\n\n        if (eventEmitter) {\n            this.eventEmitter = eventEmitter;\n        }\n\n        if (contextManager) {\n            this.contextManager = contextManager;\n        }\n    }\n}\n","import { FilterSettingValue } from \"../model/filtersSettings/FilterSettings\";\nimport FilterManagerInterface from \"@/audioEditor/interfaces/FilterManagerInterface\";\n\nconst utilFunctions = {\n    calcAudioDuration: (audio: AudioBuffer, speed?: number) => {\n        if (audio) {\n            let duration = audio.duration + 1;\n\n            if (speed != undefined) {\n                duration = duration / speed;\n            }\n\n            return duration;\n        }\n\n        return 0;\n    },\n    loadAudioBuffer: async (context: AudioContext, file: File) => {\n        const arrayBuffer = await utilFunctions.readAsArrayBufferPromisified(file);\n        const audioBuffer = await context.decodeAudioData(arrayBuffer);\n        return utilFunctions.decodeBuffer(context, audioBuffer);\n    },\n    readAsArrayBufferPromisified: (file: File): Promise<ArrayBuffer> =>\n        new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.onload = ev => {\n                const result = ev?.target?.result;\n\n                if (result instanceof ArrayBuffer) {\n                    resolve(result);\n                } else {\n                    reject();\n                }\n            };\n\n            if (file) {\n                reader.readAsArrayBuffer(file); // Read the file\n            }\n        }),\n    decodeBuffer: (context: AudioContext, buffer: AudioBuffer) => {\n        if (buffer.numberOfChannels == 1) { // convert to stereo buffer\n            context.resume();\n\n            const { duration } = buffer;\n            const { sampleRate } = context;\n\n            const newBuffer = context.createBuffer(2, sampleRate * duration + sampleRate * 2, sampleRate);\n\n            // Original buffer data\n            const sourceChannelData = buffer.getChannelData(0);\n\n            // Destination buffers\n            const channel0Data = newBuffer.getChannelData(0);\n            const channel1Data = newBuffer.getChannelData(1);\n\n            for (let i = 0; i < sourceChannelData.length; i++) {\n                channel0Data[i] = sourceChannelData[i];\n                channel1Data[i] = sourceChannelData[i];\n            }\n\n            return newBuffer;\n        }\n\n        return buffer;\n    },\n    convertAudioBufferToFloat32Array: (buffer: AudioBuffer) => {\n        const array: Float32Array[] = [];\n\n        for (let channel = 0; channel < buffer.numberOfChannels; channel++) {\n            array.push(buffer.getChannelData(channel));\n        }\n\n        return array;\n    },\n    convertAudioParamToFloat32Array: (param: AudioParam, length: number) => {\n        const array = new Float32Array(length);\n\n        for (let i = 0; i < length; i++) {\n            array.set([param.value], i);\n        }\n\n        return array;\n    },\n    sumAudioBufferChannel(buffer: AudioBuffer, channel: number) {\n        return buffer.getChannelData(channel).reduce((a, b) => a + b, 0);\n    },\n    sumAudioBuffer(buffer: AudioBuffer) {\n        let sum = 0;\n\n        for (let channel = 0; channel < buffer.numberOfChannels; channel++) {\n            sum += this.sumAudioBufferChannel(buffer, channel);\n        }\n\n        return sum;\n    },\n    /**\n    * This method checks if the browser is compatible with audio worklets\n    * @param audioContext\n    */\n    isAudioWorkletCompatible(audioContext: BaseAudioContext) {\n        if (typeof (audioContext) !== \"undefined\" && typeof (audioContext.audioWorklet) !== \"undefined\") {\n            return true;\n        }\n\n        return false;\n    },\n    /**\n     * Check that the setting value is correct\n     * @param value FilterSettingValue\n     */\n    isSettingValueValid(value: FilterSettingValue) {\n        return typeof (value) !== \"undefined\" && !isNaN(Number(value)) && !(typeof (value) === \"string\" && value.trim() === \"\");\n    },\n    /**\n     * Calculate approximative audio duration according to enabled filters and their settings\n     * @param speedAudio Current audio speed\n     * @returns The audio duration\n     */\n    calculateAudioDuration(buffer: AudioBuffer, filterManager: FilterManagerInterface, speedAudio?: number): number {\n        if (buffer && filterManager) {\n            const duration = this.calcAudioDuration(buffer, speedAudio);\n            const addingTime = filterManager.getAddingTime();\n\n            if (addingTime) {\n                return duration + addingTime;\n            }\n\n            return duration;\n        }\n\n        return 0;\n    },\n    forceDownload(blob: Blob, filename: string) {\n        const link = window.document.createElement(\"a\");\n        const url = URL.createObjectURL(blob);\n        window.document.body.appendChild(link);\n        link.href = url;\n        link.download = filename || \"output.wav\";\n        link.click();\n        URL.revokeObjectURL(url);\n        window.document.body.removeChild(link);\n    },\n    clearAudioBuffer(buffer: AudioBuffer | null) {\n        if (buffer) {\n            for (let channel = 0; channel < buffer.numberOfChannels; channel++) {\n                const channelData = buffer.getChannelData(channel);\n\n                for (let i = 0; i < channelData.length; i++) {\n                    channelData[i] = 0;\n                }\n            }\n        }\n    }\n};\n\nexport default utilFunctions;\n","export enum EventType {\n    LOADING_BUFFERS = \"loadingBuffers\",\n    LOADING_BUFFERS_ERROR = \"loadingBuffersError\",\n    FETCHING_BUFFERS = \"fetchingBuffers\",\n    FETCHING_BUFFERS_ERROR = \"fetchingBuffersError\",\n    FINISHED_FETCHING_BUFFERS = \"finishedFetchingBuffers\",\n    LOADED_BUFFERS = \"loadedBuffers\",\n    COMPATIBILITY_MODE_AUTO_ENABLED = \"compatibilityModeAutoEnabled\",\n    STARTED_RENDERING_AUDIO = \"renderingAudio\",\n    RENDERING_AUDIO_PROBLEM_DETECTED = \"renderingAudioProblemDetected\",\n    AUDIO_RENDERING_FINISHED = \"audioRenderingFinished\",\n    AUDIO_RENDERING_EXCEPTION_THROWN = \"audioRenderingExceptionThrown\",\n    OFFLINE_AUDIO_RENDERING_FINISHED = \"offlineAudioRenderingFinished\",\n    PLAYING_STOPPED = \"playingStopped\",\n    PLAYING_STARTED = \"playingStarted\",\n    PLAYING_FINISHED = \"playingFinished\",\n    PLAYING_UPDATE = \"playingUpdate\",\n    RECORDER_INIT = \"recorderInit\",\n    RECORDER_SUCCESS = \"recorderSuccess\",\n    RECORDER_ERROR = \"recorderError\",\n    RECORDER_UPDATE_CONSTRAINTS = \"recorderUpdateConstraints\",\n    RECORDER_RECORDING = \"recorderRecording\",\n    RECORDER_STOPPED = \"recorderStopped\",\n    RECORDER_PAUSED = \"recorderPaused\",\n    RECORDER_RESETED = \"recorderReseted\",\n    RECORDER_COUNT_UPDATE = \"recorderCountUpdate\",\n    SAMPLE_RATE_CHANGED = \"sampleRateChanged\",\n    DECODING_AUDIO_FILE = \"decodingAudioFile\",\n    DECODED_AUDIO_FILE = \"decodedAudioFile\",\n    ERROR_DECODING_AUDIO_FILE = \"errorDecodingAudioFile\",\n    RECORDER_NOT_FOUND_ERROR = \"recorderNotFoundError\",\n    RECORDER_UNKNOWN_ERROR = \"recorderUnknownError\",\n    UPDATE_AUDIO_TREATMENT_PERCENT = \"updateAudioTreatmentPercent\",\n    UPDATE_REMAINING_TIME_ESTIMATED = \"updateRemainingTimeEstimated\",\n    CANCELLED_AND_LOADED_INITIAL_AUDIO = \"cancelledAndLoadedInitialAudio\",\n    CANCELLING_AUDIO_PROCESSING = \"cancellingAudioProcessing\",\n    PLAYING_FINISHED_LOOP_ALL = \"playingFinishedLoopAll\",\n    LOADED_AUDIO_FILE_FROM_LIST = \"loadedAudioFileFromList\",\n    AUDIO_SPEED_UPDATED = \"audioSpeedUpdated\",\n    AUDIO_DURATION_UPDATED = \"audioDurationUpdated\",\n    FALLBACK_WORKLET_TO_SCRIPT_PROCESSOR = \"fallbackWorkletToScriptProcessor\",\n    WORKLET_SUCCESSFULLY_LOADED = \"workletSuccessfullyLoaded\"\n};\n","import AbstractAudioElement from \"../interfaces/AbstractAudioElement\";\nimport AbstractAudioFilter from \"../filters/interfaces/AbstractAudioFilter\";\nimport AbstractAudioRenderer from \"../filters/interfaces/AbstractAudioRenderer\";\nimport utils from \"../utils/Functions\";\nimport { EventType } from \"../model/EventTypeEnum\";\nimport { FilterSettings } from \"../model/filtersSettings/FilterSettings\";\nimport { EventEmitterCallback } from \"../model/EventEmitterCallback\";\nimport { FilterState } from \"../model/FilterState\";\nimport SaveBufferOptions from \"../model/SaveBufferOptions\";\nimport { TYPES } from \"../inversify.types\";\nimport { inject, injectable, injectFromBase, postConstruct } from \"inversify\";\nimport AudioEditorInterface from \"./interfaces/AudioEditorInterface\";\nimport type FilterManagerInterface from \"./interfaces/FilterManagerInterface\";\nimport type RendererManagerInterface from \"./interfaces/RendererManagerInterface\";\nimport type AudioContextManagerInterface from \"./interfaces/AudioContextManagerInterface\";\nimport type SaveBufferManagerInterface from \"./interfaces/SaveBufferManagerInteface\";\nimport type AudioProcessorInterface from \"./interfaces/AudioProcessorInterface\";\nimport type BufferManagerInterface from \"./interfaces/BufferManagerInterface\";\nimport type BufferPlayerInterface from \"@/bufferPlayer/interfaces/BufferPlayerInterface\";\n\n\n/**\n * Principal class used to manage audio processing: load an audio file or buffer,\n * manage filters/renderers (enable/disable, settings), add new filters/renderers,\n * download rendered audio, get rendered audio buffer\n */\n@injectable()\n@injectFromBase()\nexport default class AudioEditor extends AbstractAudioElement implements AudioEditorInterface {\n\n    /** The filter manager */\n    private filterManager: FilterManagerInterface | undefined;\n\n    /** The renderer manager */\n    private rendererManager: RendererManagerInterface | undefined;\n\n    /** The save buffer manager */\n    private saveBufferManager: SaveBufferManagerInterface | undefined;\n\n    /** The save buffer manager */\n    private audioProcessor: AudioProcessorInterface | undefined;\n\n    /** The save buffer manager */\n    private bufferManager: BufferManagerInterface | undefined;\n\n    /** The audio player */\n    private bufferPlayer: BufferPlayerInterface | undefined;\n\n    /** The audio buffer to be processed */\n    private principalBuffer: AudioBuffer | null = null;\n\n    /** The list of file selected by user */\n    private fileList: FileList | null = null;\n\n    /** The current index of the loaded file from file list */\n    private fileListCurrIndex = 0;\n\n    private loadingAudio = false;\n\n    private renderingAudio = false;\n\n    constructor(\n        @inject(TYPES.FilterManager) filterManager: FilterManagerInterface,\n        @inject(TYPES.RendererManager) rendererManager: RendererManagerInterface,\n        @inject(TYPES.AudioContextManager) contextManager: AudioContextManagerInterface,\n        @inject(TYPES.SaveBufferManager) saveBufferManager: SaveBufferManagerInterface,\n        @inject(TYPES.AudioProcessor) audioProcessor: AudioProcessorInterface,\n        @inject(TYPES.BufferManager) bufferManager: BufferManagerInterface,\n        @inject(TYPES.BufferPlayer) player: BufferPlayerInterface\n    ) {\n        super();\n\n        this.filterManager = filterManager;\n        this.rendererManager = rendererManager;\n        this.contextManager = contextManager;\n        this.saveBufferManager = saveBufferManager;\n        this.audioProcessor = audioProcessor;\n        this.bufferManager = bufferManager;\n        this.bufferPlayer = player;\n    }\n\n    @postConstruct()\n    setup() {\n        if (this.eventEmitter) {\n            // Callback called just before starting playing audio, when compatibility mode is enabled\n            this.eventEmitter.on(EventType.PLAYING_STARTED, async () => {\n                if (this.bufferPlayer && this.bufferPlayer.compatibilityMode\n                    && this.contextManager && this.contextManager.currentContext && this.audioProcessor) {\n                    await this.audioProcessor.setupOutput(this.principalBuffer, this.contextManager.currentContext);\n                }\n            });\n\n            // Callback called when playing is finished\n            this.eventEmitter.on(EventType.PLAYING_FINISHED, () => {\n                if (this.bufferPlayer && this.bufferPlayer.loop) {\n                    this.bufferPlayer.start();\n                }\n            });\n\n            // Callback called when playing is finished and looping all audio\n            this.eventEmitter.on(EventType.PLAYING_FINISHED_LOOP_ALL, async () => {\n                if (this.bufferPlayer && this.bufferPlayer.loopAll && !this.renderingAudio && !this.loadingAudio) {\n                    await this.loadNextAudio(true);\n                    this.bufferPlayer.start();\n                }\n            });\n        } else {\n            console.error(\"Event Emitter is not available!\");\n        }\n    }\n\n    addFilters(...filters: AbstractAudioFilter[]) {\n        if (this.filterManager) {\n            this.filterManager.addFilters(...filters);\n        }\n    }\n\n    addRenderers(...renderers: AbstractAudioRenderer[]) {\n        if (this.rendererManager) {\n            this.rendererManager.addRenderers(...renderers);\n        }\n    }\n\n    get currentSampleRate(): number {\n        if (this.contextManager) {\n            return this.contextManager.currentSampleRate;\n        }\n\n        return 0;\n    }\n\n    get defaultDeviceSampleRate(): number {\n        const tempContext = new AudioContext();\n        const { sampleRate } = tempContext;\n\n        if (tempContext) {\n            tempContext.close();\n        }\n\n        return sampleRate;\n    }\n\n    async loadBufferFromFile(file: File) {\n        this.loadingAudio = true;\n\n        if (this.audioProcessor) {\n            await this.audioProcessor.prepareContext(this.principalBuffer);\n        }\n\n        if (this.contextManager && this.contextManager.currentContext && this.bufferDecoderService && this.audioProcessor) {\n            this.clearPrincipalBuffer();\n\n            this.principalBuffer = await this.bufferDecoderService.decodeBufferFromFile(file);\n\n            this.audioProcessor.initialRenderingDone = false;\n\n            if (this.principalBuffer) {\n                this.audioProcessor.sumInputBuffer = utils.sumAudioBuffer(this.principalBuffer);\n            } else {\n                this.loadingAudio = false;\n                throw new Error(\"Error decoding audio file\");\n            }\n\n            this.audioProcessor.resetAudioRenderingProgress();\n\n            // If switching between a list of audio to one audio, reset the loop audio playing\n            if (this.bufferPlayer && this.bufferPlayer.loopAll && this.totalFileList <= 1) {\n                this.bufferPlayer.toggleLoop();\n            }\n\n            this.loadingAudio = false;\n        } else {\n            this.loadingAudio = false;\n            throw new Error(\"Audio Context is not ready!\");\n        }\n    }\n\n    async loadFileList(fileList: FileList) {\n        this.fileList = fileList;\n\n        await this.loadBufferFromFileListIndex(0);\n    }\n\n    async loadBufferFromFileListIndex(index: number) {\n        if (this.fileList) {\n            this.fileListCurrIndex = index;\n\n            const file = this.fileList.item(this.fileListCurrIndex);\n\n            if (this.eventEmitter) {\n                this.eventEmitter.emit(EventType.LOADED_AUDIO_FILE_FROM_LIST, index);\n            }\n\n            if (file) {\n                await this.loadBufferFromFile(file);\n            }\n        }\n    }\n\n    async loadPreviousAudio(forceInitialRendering?: boolean) {\n        const currentIndex = this.currentIndexFileList;\n        const maxIndex = this.totalFileList;\n        const newIndex = currentIndex - 1;\n\n        if (newIndex != currentIndex) {\n            if (newIndex < 0) {\n                await this.loadBufferFromFileListIndex(maxIndex - 1);\n            } else {\n                await this.loadBufferFromFileListIndex(newIndex);\n            }\n\n            await this.renderAudio(forceInitialRendering);\n        }\n    }\n\n    async loadNextAudio(forceInitialRendering?: boolean) {\n        const currentIndex = this.currentIndexFileList;\n        const maxIndex = this.totalFileList;\n        const newIndex = currentIndex + 1;\n\n        if (newIndex != currentIndex) {\n            if (newIndex >= maxIndex) {\n                await this.loadBufferFromFileListIndex(0);\n            } else {\n                await this.loadBufferFromFileListIndex(newIndex);\n            }\n\n            await this.renderAudio(forceInitialRendering);\n        }\n    }\n\n    getCurrentFileList(): Map<string, boolean> {\n        if (this.fileList) {\n            const mapFiles = new Map();\n\n            for (let i = 0; i < this.fileList.length; i++) {\n                const file = this.fileList.item(i);\n\n                if (file) {\n                    mapFiles.set(file.name, this.currentIndexFileList === i);\n                }\n            }\n\n            return mapFiles;\n        }\n\n        return new Map();\n    }\n\n    get currentIndexFileList() {\n        return this.fileListCurrIndex;\n    }\n\n    get totalFileList() {\n        if (this.fileList) {\n            return this.fileList.length;\n        }\n\n        return 0;\n    }\n\n    loadBuffer(audioBuffer: AudioBuffer) {\n        this.principalBuffer = audioBuffer;\n\n        if (this.audioProcessor) {\n            this.audioProcessor.sumInputBuffer = utils.sumAudioBuffer(this.principalBuffer);\n            this.audioProcessor.initialRenderingDone = false;\n        }\n    }\n\n    getOutputBuffer() {\n        if (this.audioProcessor) {\n            return this.audioProcessor.renderedBuffer;\n        }\n\n        return null;\n    }\n\n    async renderAudio(forceInitialRendering?: boolean): Promise<boolean> {\n        if (this.audioProcessor) {\n            try {\n                this.renderingAudio = true;\n\n                if (this.eventEmitter) {\n                    this.eventEmitter.emit(EventType.STARTED_RENDERING_AUDIO);\n                }\n\n                const result = await this.audioProcessor.renderAudio(this.principalBuffer, forceInitialRendering);\n\n                if (this.eventEmitter) {\n                    this.eventEmitter.emit(EventType.AUDIO_RENDERING_FINISHED);\n                }\n\n                this.renderingAudio = false;\n\n                return result;\n            } catch (e) {\n                if (this.eventEmitter) {\n                    this.eventEmitter.emit(EventType.AUDIO_RENDERING_FINISHED);\n                    this.eventEmitter.emit(EventType.AUDIO_RENDERING_EXCEPTION_THROWN, e as Error);\n                }\n\n                this.renderingAudio = false;\n            }\n        }\n\n        return false;\n    }\n\n    isAudioWorkletAvailable(): boolean {\n        if (this.contextManager && this.contextManager.currentContext) {\n            return utils.isAudioWorkletCompatible(this.contextManager.currentContext);\n        }\n\n        return false;\n    }\n\n    // Filters settings\n\n    getFiltersState(): FilterState {\n        if (this.filterManager && this.rendererManager) {\n            return {\n                ...this.filterManager.getFiltersState(),\n                ...this.rendererManager.getRenderersState()\n            };\n        }\n\n        return {};\n    }\n\n    getFiltersSettings(): Map<string, FilterSettings> {\n        if (this.filterManager) {\n            return this.filterManager.getFiltersSettings();\n        }\n\n        return new Map();\n    }\n\n    async reconnectNodesIfNeeded() {\n        if (this.contextManager && this.bufferPlayer && this.bufferPlayer.compatibilityMode &&\n            this.contextManager.currentContext && this.principalBuffer &&\n            this.filterManager && this.filterManager.entrypointFilter) {\n            await this.filterManager.connectNodes(this.contextManager.currentContext, this.principalBuffer, true, this.bufferPlayer.compatibilityMode);\n\n            if (this.audioProcessor) {\n                const speedAudio = this.filterManager.entrypointFilter.getSpeed();\n                const audioDuration = utils.calculateAudioDuration(this.principalBuffer, this.filterManager, speedAudio);\n\n                this.audioProcessor.updateAudioSpeedAndDuration(audioDuration);\n            }\n        }\n    }\n\n    enableFilter(filterId: string) {\n        if (this.rendererManager) {\n            this.rendererManager.enableRenderer(filterId);\n        }\n\n        if (this.filterManager) {\n            this.filterManager.enableFilter(filterId);\n            this.reconnectNodesIfNeeded();\n        }\n    }\n\n    disableFilter(filterId: string) {\n        if (this.rendererManager) {\n            this.rendererManager.disableRenderer(filterId);\n        }\n\n        if (this.filterManager) {\n            this.filterManager.disableFilter(filterId);\n            this.reconnectNodesIfNeeded();\n        }\n    }\n\n    toggleFilter(filterId: string) {\n        if (this.rendererManager) {\n            this.rendererManager.toggleRenderer(filterId);\n        }\n\n        if (this.filterManager) {\n            this.filterManager.toggleFilter(filterId);\n            this.reconnectNodesIfNeeded();\n        }\n    }\n\n    async changeFilterSettings(filterId: string, settings: FilterSettings) {\n        if (this.filterManager) {\n            await this.filterManager.changeFilterSettings(filterId, settings);\n            await this.reconnectNodesIfNeeded();\n        }\n    }\n\n    async resetFilterSettings(filterId: string) {\n        if (this.filterManager) {\n            await this.filterManager.resetFilterSettings(filterId);\n            await this.reconnectNodesIfNeeded();\n        }\n    }\n\n    resetAllFiltersState() {\n        if (this.rendererManager) {\n            this.rendererManager.resetAllRenderersState();\n        }\n\n        if (this.filterManager) {\n            this.filterManager.resetAllFiltersState();\n            this.reconnectNodesIfNeeded();\n        }\n    }\n\n    // Events and exit\n\n    exit() {\n        if (this.bufferPlayer) {\n            this.bufferPlayer.stop();\n            this.bufferPlayer.reset();\n        }\n\n        this.cancelAudioRendering();\n        this.clearBuffers();\n\n        this.fileList = null;\n        this.fileListCurrIndex = 0;\n    }\n\n    private clearBuffers() {\n        this.clearPrincipalBuffer();\n        this.clearRenderedBuffer();\n    }\n\n    private clearPrincipalBuffer() {\n        utils.clearAudioBuffer(this.principalBuffer);\n        this.principalBuffer = null;\n    }\n\n    private clearRenderedBuffer() {\n        if (this.audioProcessor) {\n            this.audioProcessor.clearRenderedBuffer();\n        }\n    }\n\n    cancelAudioRendering() {\n        if (this.audioProcessor) {\n            this.audioProcessor.cancelAudioRendering();\n        }\n    }\n\n    on(event: string, callback: EventEmitterCallback) {\n        if (this.eventEmitter) {\n            this.eventEmitter.on(event, callback);\n        }\n    }\n\n    off(event: string, callback: EventEmitterCallback) {\n        if (this.eventEmitter) {\n            this.eventEmitter.off(event, callback);\n        }\n    }\n\n    saveBuffer(options?: SaveBufferOptions): Promise<boolean> {\n        if (this.saveBufferManager && this.audioProcessor) {\n            return this.saveBufferManager?.saveBuffer(this.audioProcessor.renderedBuffer, options);\n        }\n\n        return Promise.resolve(false);\n    }\n\n    set downloadingInitialData(state: boolean) {\n        if (this.bufferManager) {\n            this.bufferManager.downloadingInitialData = state;\n        }\n    }\n\n    get downloadingInitialData(): boolean {\n        if (this.bufferManager) {\n            return this.bufferManager.downloadingInitialData;\n        }\n\n        return false;\n    }\n}\n","/*\n * Copyright (C) 2019-2024 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"Simple Voice Changer\".\n *\n * \"Simple Voice Changer\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"Simple Voice Changer\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"Simple Voice Changer\".  If not, see <http://www.gnu.org/licenses/>.\n */\n// The audio buffer player\n// Used to play the audio buffer, with time controls, pause/play, stop and loop\nimport { EventType } from \"../model/EventTypeEnum\";\nimport { EventEmitterCallback } from \"../model/EventEmitterCallback\";\nimport AbstractAudioElement from \"../interfaces/AbstractAudioElement\";\nimport { injectable, injectFromBase, postConstruct } from \"inversify\";\nimport BufferPlayerInterface from \"./interfaces/BufferPlayerInterface\";\n\n// Also used in compatibility mode (which doesn't use audio buffer) with less functions (no time control)\n@injectable()\n@injectFromBase()\nexport default class BufferPlayer extends AbstractAudioElement implements BufferPlayerInterface {\n\n    private buffer: AudioBuffer | null = null;\n    private source: AudioBufferSourceNode | null = null;\n    private gainNode: GainNode | null = null;\n    private intervals: number[] = [];\n    private _volume = 1;\n    private _duration = 0;\n\n    currentTime = 0;\n    displayTime = 0;\n    playing = false;\n    loop = false;\n    loopAll = false;\n    speedAudio = 1;\n\n    compatibilityMode = false;\n    currentNode: AudioNode | null = null;\n\n    @postConstruct()\n    setup() {\n        if (this.eventEmitter) {\n            this.eventEmitter.on(EventType.AUDIO_SPEED_UPDATED, speed => {\n                if (speed) {\n                    this.speedAudio = speed as number;\n                }\n            });\n\n            this.eventEmitter.on(EventType.AUDIO_DURATION_UPDATED, duration => {\n                if (duration) {\n                    this.duration = duration as number;\n                }\n            });\n        } else {\n            console.error(\"Event Emitter is not available!\");\n        }\n    }\n\n    init(direct?: boolean) {\n        this.playing = false;\n\n        if (this.contextManager && this.contextManager.currentContext) {\n            this.contextManager.currentContext.resume();\n\n            if (!this.compatibilityMode && this.buffer) {\n                if (this.source != null && !direct) {\n                    this.source.buffer = null;\n                    this.source.disconnect();\n                }\n\n                this.createGainNode(direct);\n\n                this.duration = this.buffer.duration;\n\n                if (this.source && this.gainNode) {\n                    this.source.connect(this.gainNode);\n                    this.gainNode.connect(this.contextManager.currentContext.destination);\n                }\n            }\n        }\n\n        this.updateInfos();\n    }\n\n    private createGainNode(direct?: boolean) {\n        if (this.contextManager && this.contextManager.currentContext) {\n            if (!direct) {\n                if (this.gainNode) {\n                    this.gainNode.disconnect();\n                }\n\n                if (this.source) {\n                    this.source.disconnect();\n                }\n            }\n\n            this.source = this.contextManager.currentContext.createBufferSource();\n            this.source.buffer = this.buffer;\n\n            this.gainNode = this.contextManager.currentContext.createGain();\n\n            this.setGainNodeValue();\n        }\n    }\n\n    loadBuffer(buffer: AudioBuffer) {\n        this.compatibilityMode = false;\n        this.reset();\n        this.buffer = buffer;\n        this.init();\n    }\n\n    setCompatibilityMode(currentNode: AudioNode, duration?: number) {\n        this.compatibilityMode = true;\n        this.reset();\n        this.init();\n\n        if (duration != null) {\n            this.duration = duration * this.speedAudio;\n        }\n\n        this.currentNode = currentNode;\n        this.updateInfos();\n    }\n\n    reset(direct?: boolean) {\n        this.clearIntervals();\n\n        this.currentTime = 0;\n        this.displayTime = 0;\n\n        if (!direct) {\n            this.stop();\n        }\n    }\n\n    stop() {\n        this.clearIntervals();\n\n        if (this.source != undefined && this.source != null && this.playing) {\n            this.source.stop(0);\n            this.playing = false;\n        }\n\n        if (this.currentNode) {\n            this.currentNode.disconnect();\n\n            if (this.compatibilityMode) {\n                this.currentTime = 0;\n                this.displayTime = 0;\n            }\n        }\n\n        this.eventEmitter?.emit(EventType.PLAYING_STOPPED);\n        this.updateInfos();\n    }\n\n    /**\n     * Clear old intervals\n     */\n    private clearIntervals() {\n        for (const interval of this.intervals) {\n            clearInterval(interval);\n        }\n\n        this.intervals = [];\n    }\n\n    async start(direct?: boolean): Promise<void> {\n        if (this.source || this.compatibilityMode) {\n            if (!direct) {\n                this.stop();\n            }\n\n            this.init(direct);\n\n            await this.eventEmitter?.emit(EventType.PLAYING_STARTED);\n\n            if (!this.compatibilityMode) {\n                // Classical mode\n                if (this.source) {\n                    this.source.start(0, direct ? 0 : this.currentTime / this.speedAudio);\n                    this.playing = true;\n                } else {\n                    return Promise.resolve();\n                }\n            } else if (this.currentNode && this.contextManager && this.contextManager.currentContext) {\n                // Compatibility/direct mode\n                this.createGainNode(direct);\n\n                if (this.gainNode) {\n                    this.currentNode.connect(this.gainNode);\n                    this.gainNode.connect(this.contextManager.currentContext.destination);\n                } else {\n                    this.currentNode.connect(this.contextManager.currentContext.destination);\n                }\n            } else {\n                return Promise.resolve();\n            }\n\n            let startTime = performance.now();\n\n            this.intervals.push(window.setInterval(() => {\n                const timeNow = performance.now();\n                const nextTime = timeNow - startTime;\n                startTime = timeNow;\n\n                this.currentTime += (nextTime / 1000) * this.speedAudio;\n                this.displayTime = this.currentTime;\n\n                if (this.currentTime > this.duration) {\n                    if (this.loop) {\n                        if (!this.compatibilityMode) {\n                            this.reset(direct);\n                            this.start();\n                        } else {\n                            this.eventEmitter?.emit(EventType.PLAYING_FINISHED);\n                        }\n                    } else {\n                        this.eventEmitter?.emit(EventType.PLAYING_FINISHED);\n                        this.reset(direct);\n\n                        if (this.loopAll) {\n                            this.eventEmitter?.emit(EventType.PLAYING_FINISHED_LOOP_ALL);\n                        }\n                    }\n                } else {\n                    this.updateInfos();\n                }\n            }, 100));\n        }\n\n        return Promise.resolve();\n    }\n\n    async playDirect() {\n        if (!this.compatibilityMode) {\n            await this.start(true);\n        } else {\n            // Play direct is not possible when compatibility mode is enabled\n            await this.start(false);\n        }\n    }\n\n    pause() {\n        this.stop();\n    }\n\n    /** Send an event to update the informations of this player */\n    private updateInfos() {\n        this.eventEmitter?.emit(EventType.PLAYING_UPDATE);\n    }\n\n    setTimePercent(percent: number) {\n        if (!this.compatibilityMode) {\n            this.currentTime = Math.round(this.duration * (percent / 100));\n            this.displayTime = this.currentTime;\n\n            if (this.playing) {\n                this.pause();\n                this.start();\n            } else {\n                this.updateInfos();\n            }\n        }\n    }\n\n    setTime(time: number) {\n        if (!this.compatibilityMode) {\n            this.currentTime = time;\n            this.displayTime = this.currentTime;\n\n            if (this.playing) {\n                this.pause();\n                this.start();\n            } else {\n                this.updateInfos();\n            }\n        }\n    }\n\n    set volume(volume: number) {\n        this._volume = volume;\n        this.setGainNodeValue();\n    }\n\n    private setGainNodeValue() {\n        if (this.gainNode) {\n            this.gainNode.gain.value = Math.pow(this._volume, 2);\n        }\n    }\n\n    get volume() {\n        return this._volume;\n    }\n\n    get duration() {\n        return this._duration;\n    }\n\n    set duration(duration: number) {\n        this._duration = duration * (this.speedAudio || 1);\n    }\n\n    onBeforePlaying(callback: () => Promise<void>) {\n        if (this.eventEmitter) {\n            this.eventEmitter.on(EventType.PLAYING_STARTED, callback);\n        }\n    }\n\n    toggleLoop() {\n        this.loopAll = false;\n        this.loop = !this.loop;\n    }\n\n    toggleLoopAll() {\n        this.loop = false;\n        this.loopAll = !this.loopAll;\n    }\n\n    on(event: string, callback: EventEmitterCallback) {\n        if (this.eventEmitter) {\n            this.eventEmitter.on(event, callback);\n        }\n    }\n\n    get currentTimeDisplay() {\n        return (\"0\" + Math.trunc(this.displayTime / 60)).slice(-2) + \":\" + (\"0\" + Math.trunc(this.displayTime % 60)).slice(-2);\n    }\n\n    get maxTimeDisplay() {\n        return (\"0\" + Math.trunc(this.duration / 60)).slice(-2) + \":\" + (\"0\" + Math.trunc(this.duration % 60)).slice(-2);\n    }\n\n    get percent() {\n        return (100 - Math.round((this.duration - this.displayTime) / this.duration * 100));\n    }\n\n    get remainingTimeDisplay() {\n        return (\"0\" + Math.trunc((this.duration - this.displayTime) / 60)).slice(-2) + \":\" + (\"0\" + Math.trunc((this.duration - this.displayTime) % 60)).slice(-2);\n    }\n}\n","/*\n * Copyright (C) 2019-2023 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"Simple Voice Changer\".\n *\n * \"Simple Voice Changer\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"Simple Voice Changer\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"Simple Voice Changer\".  If not, see <http://www.gnu.org/licenses/>.\n */\nexport default class TimerSaveTime {\n    seconds = 0;\n    initialSeconds = 0;\n    interval: number | null = null;\n    incr = 1;\n\n    private countCallback: () => void = () => {};\n\n    constructor(seconds: number, incr: number) {\n        this.seconds = seconds;\n        this.initialSeconds = seconds;\n        this.incr = incr;\n    }\n\n    start() {\n        this.interval = window.setInterval(() => this.count(), 1000);\n    }\n\n    stop() {\n        clearInterval(this.interval!);\n    }\n\n    count() {\n        this.seconds += this.incr;\n\n        if (this.seconds <= 0) {\n            this.stop();\n        }\n\n        if (this.countCallback) {\n            this.countCallback();\n        }\n    }\n\n    onCount(callback: () => void) {\n        this.countCallback = callback;\n    }\n}\n","const FilterNames = {\n    REVERB: \"reverb\",\n    ECHO: \"echo\",\n    BASS_BOOST: \"bassboost\",\n    BITCRUSHER: \"bitcrusher\",\n    HIGH_PASS: \"highpass\",\n    LIMITER: \"limiter\",\n    LOW_PASS: \"lowpass\",\n    RENDERING_PROGRESS_CALCULATION: \"renderingProgressCalculationFilter\",\n    RETURN_AUDIO: \"returnAudio\",\n    SOUNDTOUCH: \"soundtouch\",\n    TELEPHONIZER: \"telephonizer\",\n    VOCODER: \"vocoder\"\n};\n\nexport default FilterNames;\n","import FilterNames from \"./FilterNames\";\n\nconst Constants = {\n    AUDIO_EDITOR: \"audioEditor\",\n    VOICE_RECORDER: \"voiceRecorder\",\n    BUFFER_PLAYER: \"bufferPlayer\",\n    AUDIO_CONTEXT_MANAGER: \"audioContextManager\",\n    AUDIO_PROCESSOR: \"audioProcessor\",\n    BUFFER_MANAGER: \"bufferManager\",\n    FILTER_MANAGER: \"filterManager\",\n    RENDERER_MANAGER: \"rendererManager\",\n    SAVE_BUFFER_MANAGER: \"saveBufferManager\",\n    EXPORT_WAV_COMMAND: \"exportWAV\",\n    EXPORT_MP3_COMMAND: \"exportMP3\",\n    AUDIO_WAV: \"audio/wav\",\n    AUDIO_MP3: \"audio/mp3\",\n    RECORD_COMMAND: \"record\",\n    INIT_COMMAND: \"init\",\n    FILTERS_NAMES: FilterNames,\n    WORKLET_PATHS: {\n        BITCRUSHER: \"BitCrusher.worklet.js\",\n        LIMITER: \"Limiter.worklet.js\",\n        SOUNDTOUCH: \"Soundtouch.worklet.js\",\n        RECORDER_WORKLET: \"RecorderWorklet.js\",\n        RENDERING_PROGRESS_CALCULATION: \"RenderingProgressCalculation.worklet.js\"\n    },\n    WORKLET_NAMES: {\n        BITCRUSHER: \"bitcrusher-processor\",\n        LIMITER: \"limiter-processor\",\n        SOUNDTOUCH: \"soundtouch-processor\",\n        RECORDER_WORKLET: \"recorder-worklet\",\n        RENDERING_PROGRESS_CALCULATION: \"rendering-progress-calculation-worklet\"\n    },\n    PREFERENCES_KEYS: {\n        COMPATIBILITY_MODE_ENABLED: \"compatibility-mode-enabled\",\n        COMPATIBILITY_MODE_CHECKED: \"compatibility-mode-checked\",\n        ENABLE_AUDIO_WORKLET: \"enable-audio-worklet\",\n        ENABLE_SOUNDTOUCH_AUDIO_WORKLET: \"enable-soundtouch-audio-worklet\",\n        BUFFER_SIZE: \"buffer-size\",\n        SAMPLE_RATE: \"sample-rate\",\n        DISABLE_INITIAL_RENDERING: \"disable-initial-rendering\",\n        BITRATE_MP3: \"bitrate-mp3\"\n    },\n    // Enable or disable the use of Audio Worklet version of Soundtouch\n    // If disabled, the ScriptProcessorNode version is used\n    ENABLE_SOUNDTOUCH_AUDIO_WORKLET: true,\n    ENABLE_AUDIO_WORKLET: true,\n    ENABLE_RECORDER_AUDIO_WORKLET: true,\n    SOUNDTOUCH_PITCH_SHIFTER_BUFFER_SIZE: 16384,\n    SOUNDTOUCH_DEFAULT_SPEED: 1,\n    SOUNDTOUCH_DEFAULT_FREQUENCY: 1,\n    SOUNDTOUCH_DEFAULT_PITCH_SEMITONES: 0,\n    DEFAULT_REVERB_ENVIRONMENT: {\n        name: \"Medium Damping Cave E002 M2S\",\n        url: \"impulse_response.wav\",\n        size: 1350278,\n        addDuration: 4,\n        link: \"http://www.cksde.com/p_6_250.htm\"\n    },\n    VOCODER_MODULATOR: \"modulator.mp3\",\n    DEFAULT_BUFFER_SIZE: 0,\n    VALID_BUFFER_SIZE: [0, 256, 512, 1024, 2048, 4096, 8192, 16384],\n    VALID_MP3_BITRATES: [32, 64, 96, 128, 160, 256, 320],\n    DEFAULT_SAMPLE_RATE: 0, // 0 = AUTO\n    VALID_SAMPLE_RATES: [0, 8000, 11025, 16000, 22050, 32000, 44100, 48000, 88200, 96000, 176400, 192000],\n    // Interval used by the treatment percent counter. The event will be dispatched each ms defined here\n    TREATMENT_TIME_COUNTING_THROTTLE_INTERVAL: 100,\n    // Smoothing factor for the time couting estimation (between 0 and 1)\n    TREATMENT_TIME_COUNTING_SMOOTHING_FACTOR: 0.9,\n    // Disable initial rendering (when opening audio file or buffer)\n    DISABLE_INITIAL_RENDERING: false,\n    // Default save format\n    DEFAULT_SAVE_FORMAT: \"wav\",\n    // Default bitrate for the MP3 encoder\n    DEFAULT_MP3_BITRATE: 320\n};\n\nexport default Constants;\n","export default function getRecorderWorker(workerBasePath?: string): Worker {\n    return new Worker((workerBasePath ? workerBasePath : \"\") + \"RecorderWorker.js\");\n};\n","import { injectable } from \"inversify\";\nimport Constants from \"../model/Constants\";\nimport { RecorderCallback, RecorderCallbacks } from \"../model/RecorderCallback\";\nimport type RecorderConfig from \"../model/RecorderConfig\";\nimport RecorderWorkerMessage from \"../model/RecorderWorkerMessage\";\nimport RecorderWorkletMessage from \"../model/RecorderWorkletMessage\";\nimport utilFunctions from \"../utils/Functions\";\nimport getRecorderWorker from \"./getRecorderWorker\";\nimport RecorderInterface from \"./interfaces/RecorderInterface\";\n\n@injectable()\nexport class Recorder implements RecorderInterface {\n\n    // Inline Worker\n    private worker: Worker | null = null;\n    private node: ScriptProcessorNode | AudioWorkletNode | null = null;\n    private context: BaseAudioContext | null = null;\n\n    private config: RecorderConfig = {\n        bufferLen: 4096,\n        sampleRate: 44100,\n        numChannels: 2,\n        mimeType: \"audio/wav\",\n        workletBasePath: \"worklets/\",\n        workerBasePath: \"workers/\",\n        bitrate: Constants.DEFAULT_MP3_BITRATE,\n        callback: () => { }\n    };\n\n    private callbacks: RecorderCallbacks = {\n        getBuffer: [],\n        exportWAV: [],\n        exportMP3: []\n    };\n\n    recording = false;\n\n    constructor(cfg: RecorderConfig) {\n        Object.assign(this.config, cfg);\n    }\n\n    async setup(source: AudioNode) {\n        if (this.node) { // Disconnect previous node\n            if (this.node instanceof AudioWorkletNode) {\n                this.node.port.postMessage(\"stop\");\n            }\n\n            this.node.disconnect();\n        }\n\n        if (source) {\n            this.context = source.context;\n\n            await this.createRecorderNode();\n\n            if (this.node && this.context) {\n                source.connect(this.node);\n                this.node.connect(this.context.destination);    //this should not be necessary\n            }\n        }\n\n        if (this.context && !this.worker) {\n            this.worker = getRecorderWorker(this.config.workerBasePath);\n\n            if (this.worker) {\n                this.worker.postMessage({\n                    command: \"init\",\n                    config: {\n                        sampleRate: this.context.sampleRate,\n                        numChannels: this.config.numChannels,\n                        bitrate: this.config.bitrate\n                    }\n                });\n\n                this.worker.onmessage = (e: RecorderWorkerMessage) => {\n                    let callbacks = null;\n\n                    switch (e.data.command) {\n                    case \"getBuffer\":\n                        callbacks = this.callbacks.getBuffer;\n                        break;\n                    case Constants.EXPORT_WAV_COMMAND:\n                        callbacks = this.callbacks.exportWAV;\n                        break;\n                    case Constants.EXPORT_MP3_COMMAND:\n                        callbacks = this.callbacks.exportMP3;\n                        break;\n                    }\n\n                    if (callbacks) {\n                        const cb = callbacks.pop();\n                        if (typeof cb == \"function\") {\n                            (cb as RecorderCallback<Blob | Float32Array[]>)(e.data.data);\n                        }\n                    }\n                };\n            }\n        }\n    }\n\n\n    private async createRecorderNode() {\n        if (this.context) {\n            if (utilFunctions.isAudioWorkletCompatible(this.context) && Constants.ENABLE_RECORDER_AUDIO_WORKLET) {\n                try {\n                    await this.createRecorderWorklet();\n                } catch (e) {\n                    console.error(e);\n                    this.createRecorderScriptProcessorNode();\n                }\n            } else {\n                this.createRecorderScriptProcessorNode();\n            }\n        }\n    }\n\n    private async createRecorderWorklet() {\n        if (this.context) {\n            await this.context.audioWorklet.addModule(this.config.workletBasePath + Constants.WORKLET_PATHS.RECORDER_WORKLET);\n\n            this.node = new AudioWorkletNode(this.context, Constants.WORKLET_NAMES.RECORDER_WORKLET);\n\n            if (this.node && this.node.port) {\n                const numChannelParameter = this.node.parameters.get(\"numChannels\");\n\n                if (numChannelParameter) {\n                    numChannelParameter.value = this.config.numChannels;\n                    numChannelParameter.setValueAtTime(this.config.numChannels, 0);\n                }\n\n                this.node.port.onmessage = (e: MessageEvent<RecorderWorkletMessage>) => {\n                    if (this.worker && e.data.command == \"record\" && e.data.buffer.length > 0) {\n                        this.worker.postMessage({\n                            command: \"record\",\n                            buffer: e.data.buffer\n                        });\n                    }\n                };\n            }\n        }\n    }\n\n    private createRecorderScriptProcessorNode() {\n        if (this.context) {\n            this.node = (this.context.createScriptProcessor).call(this.context,\n                this.config.bufferLen, this.config.numChannels, this.config.numChannels);\n\n            this.node.onaudioprocess = e => {\n                if (!this.recording) {\n                    return;\n                }\n\n                const buffer = [];\n                for (let channel = 0; channel < this.config.numChannels; channel++) {\n                    buffer.push(e.inputBuffer.getChannelData(channel));\n                }\n\n                if (this.worker) {\n                    this.worker.postMessage({\n                        command: \"record\",\n                        buffer\n                    });\n                }\n            };\n        }\n    }\n\n    record() {\n        this.recording = true;\n\n        if (this.node instanceof AudioWorkletNode) {\n            this.node.port.postMessage(\"record\");\n        }\n    }\n\n    stop() {\n        this.recording = false;\n\n        if (this.node instanceof AudioWorkletNode) {\n            this.node.port.postMessage(\"stop\");\n        }\n    }\n\n    clear() {\n        if (this.worker) {\n            this.worker.postMessage({ command: \"clear\" });\n        }\n    }\n\n    kill() {\n        this.clear();\n        this.stop();\n\n        if (this.worker) {\n            this.worker.terminate();\n        }\n    }\n\n    getBuffer(cb: RecorderCallback<Float32Array[]>) {\n        cb = cb || this.config.callback;\n\n        if (!cb) {\n            throw new Error(\"Callback not set\");\n        }\n\n        this.callbacks.getBuffer.push(cb);\n\n        if (this.worker) {\n            this.worker.postMessage({ command: \"getBuffer\" });\n        }\n    }\n\n    exportWAV(cb: RecorderCallback<Blob>, mimeType?: string) {\n        mimeType = mimeType || this.config.mimeType;\n        cb = cb || this.config.callback;\n\n        if (!cb) {\n            throw new Error(\"Callback not set\");\n        }\n\n        this.callbacks.exportWAV.push(cb);\n\n        if (this.worker) {\n            this.worker.postMessage({\n                command: Constants.EXPORT_WAV_COMMAND,\n                type: mimeType\n            });\n        }\n    }\n\n    exportMP3(cb: RecorderCallback<Blob>, mimeType?: string) {\n        mimeType = mimeType || this.config.mimeType;\n        cb = cb || this.config.callback;\n\n        if (!cb) {\n            throw new Error(\"Callback not set\");\n        }\n\n        this.callbacks.exportMP3.push(cb);\n\n        if (this.worker) {\n            this.worker.postMessage({\n                command: Constants.EXPORT_MP3_COMMAND,\n                type: mimeType\n            });\n        }\n    }\n};\n\nexport default Recorder;\n","\n/*\n * Copyright (C) 2019-2023 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"Simple Voice Changer\".\n *\n * \"Simple Voice Changer\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"Simple Voice Changer\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"Simple Voice Changer\".  If not, see <http://www.gnu.org/licenses/>.\n */\n// The Voice Recorder class\n// Used to record a sound (voice, etc.) with the user microphone\n// Offer control with play/pause and audio feedback\nimport { inject, injectable, injectFromBase } from \"inversify\";\nimport TimerSaveTime from \"../utils/TimerSaveTime\";\nimport { EventType } from \"../model/EventTypeEnum\";\nimport AudioConstraintWrapper from \"../model/AudioConstraintWrapper\";\nimport { RecorderSettings } from \"../model/RecorderSettings\";\nimport type { ConfigService } from \"../services/interfaces/ConfigService\";\nimport AbstractAudioElement from \"../interfaces/AbstractAudioElement\";\nimport { EventEmitterCallback } from \"../model/EventEmitterCallback\";\nimport { AudioConstraint } from \"../model/AudioConstraint\";\nimport Recorder from \"../recorder/Recorder\";\nimport VoiceRecorderInterface from \"./interfaces/VoiceRecorderInterface\";\nimport { TYPES } from \"@/inversify.types\";\nimport AudioContextManagerInterface from \"@/audioEditor/interfaces/AudioContextManagerInterface\";\n\n@injectable()\n@injectFromBase()\nexport default class VoiceRecorder extends AbstractAudioElement implements VoiceRecorderInterface {\n\n    private recorder: Recorder | null = null;\n\n    private input: MediaStreamAudioSourceNode | null = null;\n\n    private stream: MediaStream | null = null;\n\n    private alreadyInit = false;\n\n    private timer: TimerSaveTime | null = null;\n\n    private enableAudioFeedback = false;\n\n    private recording = false;\n\n    private deviceList: MediaDeviceInfo[] = [];\n\n    private constraints: AudioConstraintWrapper = {\n        audio: {\n            noiseSuppression: true,\n            echoCancellation: true,\n            autoGainControl: true,\n            sampleRate: { ideal: 44100 }\n        }\n    };\n\n    private sampleRateConfigNotSupported = false;\n\n    constructor(\n        @inject(TYPES.AudioContextManager) contextManager: AudioContextManagerInterface | null,\n        @inject(TYPES.ConfigService) configService: ConfigService) {\n        super();\n\n        this.contextManager = contextManager;\n        this.configService = configService;\n    }\n\n    async init() {\n        if (!this.isRecordingAvailable()) {\n            return;\n        }\n\n        // Specific case: Firefox doesn't support changing sample-rate for MediaDevice API\n        // In this case we disable sample-rate config feature for this VoiceRecorder\n        this.sampleRateConfigNotSupported = !navigator.mediaDevices.getSupportedConstraints().sampleRate;\n\n        if (this.contextManager) {\n            if (this.sampleRateConfigNotSupported) {\n                this.contextManager.createNewContext(0);\n            } else {\n                this.contextManager.createNewContextIfNeeded();\n            }\n        }\n\n        this.eventEmitter?.emit(EventType.RECORDER_INIT);\n\n        try {\n            const stream = await navigator.mediaDevices.getUserMedia(this.constraints);\n\n            if (this.contextManager && this.contextManager.currentContext) {\n                this.contextManager.currentContext.resume();\n            }\n\n            await this.setup(stream, false, false);\n\n            this.alreadyInit = true;\n            this.timer = new TimerSaveTime(0, 1);\n\n            this.timer.onCount(() => {\n                this.eventEmitter?.emit(EventType.RECORDER_COUNT_UPDATE);\n            });\n\n            this.successCallback();\n        } catch (e) {\n            console.error(e);\n\n            const exception = e as DOMException;\n\n            if (exception) {\n                switch (exception.name) {\n                case \"SecurityError\":\n                case \"NotAllowedError\":\n                    this.errorCallback();\n                    break;\n                case \"NotFoundError\":\n                    this.notFoundErrorCallback();\n                    break;\n                    // Disable sample rate configuration\n                case \"NotSupportedError\":\n                    if (!this.sampleRateConfigNotSupported) {\n                        this.sampleRateConfigNotSupported = true;\n                        this.init();\n                    }\n                    break;\n                default:\n                    this.unknownErrorCallback();\n                    break;\n                }\n            }\n        }\n\n        navigator.mediaDevices.ondevicechange = () => this.updateInputList();\n    }\n\n    private successCallback() {\n        this.eventEmitter?.emit(EventType.RECORDER_SUCCESS);\n    }\n\n    private errorCallback() {\n        this.eventEmitter?.emit(EventType.RECORDER_ERROR);\n    }\n\n    private notFoundErrorCallback() {\n        this.eventEmitter?.emit(EventType.RECORDER_NOT_FOUND_ERROR);\n    }\n\n    private unknownErrorCallback() {\n        this.eventEmitter?.emit(EventType.RECORDER_UNKNOWN_ERROR);\n    }\n\n    audioFeedback(enable: boolean) {\n        if (this.contextManager && this.contextManager.currentContext) {\n            if (enable) {\n                if (this.input) {\n                    this.input.connect(this.contextManager.currentContext.destination);\n                }\n\n                this.enableAudioFeedback = true;\n            } else {\n                if (this.input) {\n                    this.input.connect(this.contextManager.currentContext.destination);\n                    this.input.disconnect(this.contextManager.currentContext.destination);\n                }\n\n                this.enableAudioFeedback = false;\n            }\n\n            this.eventEmitter?.emit(EventType.RECORDER_UPDATE_CONSTRAINTS);\n        }\n    }\n\n    /**\n     * Get current constraints/settings\n     * @returns MediaTrackSettings\n     */\n    private getConstraints() {\n        if (this.stream) {\n            const tracks = this.stream.getTracks();\n\n            if (tracks && tracks.length > 0) {\n                return tracks[0].getSettings();\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Update the current constraints\n     */\n    private updateConstraints() {\n        const constraints = this.getConstraints();\n\n        if (constraints) {\n            this.constraints.audio = Object.assign(this.constraints.audio, constraints);\n            this.eventEmitter?.emit(EventType.RECORDER_UPDATE_CONSTRAINTS);\n        }\n    }\n\n    /**\n     * Reset the current constraints\n     * @param newConstraint AudioConstraintWrapper\n     */\n    private async resetConstraints(newConstraint?: AudioConstraintWrapper) {\n        if (this.stream) {\n            const precAudioFeedback = this.enableAudioFeedback;\n            const precRecording = this.recording;\n            const tracks = this.stream.getTracks();\n\n            if (newConstraint) {\n                this.updateConstraints();\n                this.constraints.audio = Object.assign(this.constraints.audio, newConstraint.audio);\n            }\n\n            if (tracks && tracks.length > 0) {\n                try {\n                    await tracks[0].applyConstraints(this.constraints.audio);\n\n                    const newConstraints = this.getConstraints();\n                    const newConstraintName = newConstraint ? Object.keys(newConstraint.audio)[0] : \"\";\n\n                    this.audioFeedback(false);\n                    this.pause();\n\n                    if (!newConstraint ||\n                        (newConstraints && (newConstraints as AudioConstraint)[newConstraintName] != newConstraint.audio[newConstraintName])) {\n                        this.stopStream();\n\n                        const stream = await navigator.mediaDevices.getUserMedia(this.constraints);\n\n                        await this.setup(stream, precRecording, precAudioFeedback);\n                    } else {\n                        await this.setup(null, precRecording, precAudioFeedback);\n                    }\n                } catch (e) {\n                    console.error(e);\n                    this.errorCallback();\n                }\n            }\n        }\n    }\n\n    /**\n     * Setup this voice recorder\n     * @param stream MediaStream\n     * @param precRecording Was recording?\n     * @param precAudioFeedback Has audio feedback?\n     */\n    private async setup(stream: MediaStream | null, precRecording: boolean, precAudioFeedback: boolean) {\n        if (stream && this.contextManager && this.contextManager.currentContext) {\n            this.input = this.contextManager.currentContext.createMediaStreamSource(stream);\n            this.stream = stream;\n        }\n\n        if (this.recorder && this.input) {\n            await this.recorder.setup(this.input);\n\n            if (precRecording) {\n                await this.record();\n            }\n        }\n\n        this.audioFeedback(precAudioFeedback);\n        this.updateConstraints();\n        await this.updateInputList();\n    }\n\n    setNoiseSuppression(enable: boolean) {\n        this.resetConstraints({\n            audio: {\n                noiseSuppression: enable\n            }\n        });\n    }\n\n    setAutoGain(enable: boolean) {\n        this.resetConstraints({\n            audio: {\n                autoGainControl: enable\n            }\n        });\n    }\n\n    setEchoCancellation(enable: boolean) {\n        this.resetConstraints({\n            audio: {\n                echoCancellation: enable\n            }\n        });\n    }\n\n    /**\n     * Update current audio input list\n     */\n    private async updateInputList() {\n        if (this.deviceList) {\n            const devices = await navigator.mediaDevices.enumerateDevices();\n            this.deviceList = [];\n\n            devices.forEach(device => {\n                if (device.kind == \"audioinput\") {\n                    this.deviceList.push(device);\n                }\n            });\n        }\n    }\n\n    changeInput(deviceId: string, groupId: string | undefined) {\n        if (groupId) {\n            this.constraints.audio.deviceId = deviceId;\n            this.constraints.audio.groupId = groupId;\n            this.resetConstraints();\n        }\n    }\n\n    async record() {\n        if (this.alreadyInit && this.configService && this.input) {\n            if (!this.recorder) {\n                this.recorder = new Recorder({\n                    bufferLen: this.configService.getBufferSize(),\n                    sampleRate: this.configService.getSampleRate(),\n                    numChannels: 2,\n                    workletBasePath: this.configService.getWorkletBasePath(),\n                    workerBasePath: this.configService.getWorkerBasePath(),\n                    mimeType: \"audio/wav\"\n                });\n\n                await this.recorder.setup(this.input);\n            }\n\n            if (this.recorder) {\n                this.recorder.record();\n            }\n\n            if (this.timer) {\n                this.timer.start();\n            }\n\n            this.recording = true;\n\n            if (this.eventEmitter) {\n                this.eventEmitter.emit(EventType.RECORDER_RECORDING);\n            }\n        }\n    }\n\n    stop() {\n        if (this.alreadyInit && this.recorder) {\n            this.recorder.stop();\n\n            if (this.timer) {\n                this.timer.stop();\n            }\n\n            this.recording = false;\n\n            this.recorder.getBuffer((buffer: Float32Array[]) => {\n                if (this.contextManager && this.contextManager.currentContext) {\n                    this.contextManager.currentContext.resume();\n\n                    const newBuffer = this.contextManager.currentContext.createBuffer(2, buffer[0].length, this.contextManager.currentContext.sampleRate);\n                    newBuffer.getChannelData(0).set(buffer[0]);\n                    newBuffer.getChannelData(1).set(buffer[1]);\n\n                    this.eventEmitter?.emit(EventType.RECORDER_STOPPED, newBuffer);\n                    this.reset();\n                }\n            });\n        }\n    }\n\n    pause() {\n        if (this.alreadyInit) {\n            if (this.recorder) {\n                this.recorder.stop();\n            }\n\n            if (this.timer) {\n                this.timer.stop();\n            }\n\n            this.recording = false;\n            this.eventEmitter?.emit(EventType.RECORDER_PAUSED);\n        }\n    }\n\n    /**\n     * Stop stream\n     */\n    private stopStream() {\n        if (this.stream) {\n            const tracks = this.stream.getTracks();\n\n            for (let i = 0, l = tracks.length; i < l; i++) {\n                tracks[i].stop();\n            }\n        }\n    }\n\n    reset() {\n        if (this.recorder) {\n            this.recorder.kill();\n        }\n\n        if (this.timer) {\n            this.timer.stop();\n        }\n\n        this.audioFeedback(false);\n\n        this.stopStream();\n\n        this.input = null;\n        this.recorder = null;\n        this.stream = null;\n        this.alreadyInit = false;\n        this.timer = null;\n\n        this.eventEmitter?.emit(EventType.RECORDER_RESETED);\n    }\n\n    get currentTimeDisplay() {\n        return this.timer?.seconds ? (\"0\" + Math.trunc(this.timer?.seconds / 60)).slice(-2) + \":\" + (\"0\" + Math.trunc(this.timer?.seconds % 60)).slice(-2) : \"00:00\";\n    }\n\n    get currentTime() {\n        return this.timer ? this.timer.seconds : 0;\n    }\n\n    getSettings(): RecorderSettings {\n        return {\n            deviceList: this.deviceList,\n            audioFeedback: this.enableAudioFeedback,\n            constraints: this.constraints.audio\n        };\n    }\n\n    on(event: string, callback: EventEmitterCallback) {\n        this.eventEmitter?.on(event, callback);\n    }\n\n    isRecordingAvailable() {\n        return typeof (navigator.mediaDevices) !== \"undefined\" && typeof (navigator.mediaDevices.getUserMedia) !== \"undefined\";\n    }\n}\n","import { injectable } from \"inversify\";\nimport AbstractAudioElement from \"@/interfaces/AbstractAudioElement\";\n\n@injectable()\nexport default abstract class AbstractAudioNode extends AbstractAudioElement {\n\n    /** Is this element enabled? */\n    private enabled = false;\n\n    /** Is this element enabled by default? */\n    private defaultEnabled = false;\n\n    /** Returns the order in which the filter/renderer needs to be applied */\n    abstract get order(): number;\n\n    /** Returns the id of this filter/renderer */\n    abstract get id(): string;\n\n    /** Is this filter/renderer enabled? */\n    isEnabled(): boolean {\n        return this.enabled;\n    }\n\n    /** Is this filter/renderer enabled by default? */\n    isDefaultEnabled(): boolean {\n        return this.defaultEnabled;\n    }\n\n    /** Set to true if this filter/renderer needs to be enabled by default */\n    setDefaultEnabled(state: boolean) {\n        this.defaultEnabled = state;\n\n        if (state) {\n            this.enable();\n        } else {\n            this.disable();\n        }\n    }\n\n    /**\n     * Set the enabled/disabled state\n     * @param state true to enable, false to disable\n     */\n    setEnabled(state: boolean) {\n        this.enabled = state;\n    }\n\n    /** Enable this filter/renderer */\n    enable() {\n        this.setEnabled(true);\n    }\n\n    /** Disable this filter/renderer */\n    disable() {\n        this.setEnabled(false);\n    }\n\n    /** Toggle to enabled/disabled this filter */\n    toggle() {\n        this.setEnabled(!this.isEnabled());\n    }\n}\n","import { AudioFilterNodes } from \"../../model/AudioNodes\";\nimport { FilterSettingValue, FilterSettings } from \"../../model/filtersSettings/FilterSettings\";\nimport AbstractAudioNode from \"./AbstractAudioNode\";\n\nexport default abstract class AbstractAudioFilter extends AbstractAudioNode {\n\n    /** The default settings */\n    private defaultSettings: FilterSettings | null = null;\n\n    /** Total sample of the input audio buffer */\n    protected _totalSamples = 0;\n\n    /** Return a input and output AudioNode of the filter */\n    abstract getNode(context: BaseAudioContext): AudioFilterNodes;\n\n    /** Return an object with current settings of this filter */\n    abstract getSettings(): FilterSettings;\n\n    /** Set a filter setting */\n    abstract setSetting(settingId: string, value: FilterSettingValue): Promise<void>;\n\n    /** Get the amount of time this filter add to the audio */\n    getAddingTime(): number {\n        return 0;\n    }\n\n    /** Store the default settings */\n    public initializeDefaultSettings() {\n        this.defaultSettings = this.getSettings();\n    }\n\n    /** Returns the default settings of this filter */\n    public getDefaultSettings() {\n        return this.defaultSettings;\n    }\n\n    /** Reset the default settings of this filter */\n    public async resetSettings() {\n        if (this.defaultSettings) {\n            for (const key in this.defaultSettings) {\n                if (this.defaultSettings && typeof (this.defaultSettings[key]) !== \"undefined\") {\n                    await this.setSetting(key, this.defaultSettings[key]);\n                }\n            }\n        }\n    }\n\n    /** Return if the current filter use an audio worklet */\n    public isWorklet() {\n        return false;\n    }\n\n    /**\n     * Called when the buffer fetcher was reseted\n     * @returns boolean\n    */\n    public bufferFetcherReseted(): Promise<boolean> {\n        return Promise.resolve(false);\n    }\n\n    set totalSamples(value: number) {\n        this._totalSamples = value;\n    }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * This class is a polyfill for the standard web AudioParam class used by worklets\n */\nexport default class AudioParamPolyfill implements AudioParam {\n    private _value: number = 0;\n    private _minValue: number = 0;\n    private _maxValue: number = Number.MAX_SAFE_INTEGER;\n    private _defaultValue: number = 0;\n    private context: BaseAudioContext | null = null;\n    automationRate: AutomationRate = \"a-rate\";\n\n    constructor(context: BaseAudioContext, defaultValue?: number) {\n        this._defaultValue = defaultValue !== undefined ? defaultValue : 0;\n        this._value = this._defaultValue;\n        this.context = context;\n    }\n\n    get value(): number {\n        return this._value;\n    }\n\n    set value(newValue: number) {\n        this._value = Math.max(this._minValue, Math.min(this._maxValue, newValue));\n    }\n\n    get minValue(): number {\n        return this._minValue;\n    }\n\n    get maxValue(): number {\n        return this._maxValue;\n    }\n\n    get defaultValue(): number {\n        return this._defaultValue;\n    }\n\n    setValueAtTime(value: number, startTime: number): AudioParam {\n        console.warn(\"setValueAtTime used with AudioParamPolyfill, is not fully compatible with standard AudioParam\");\n        this.value = value;\n        return new AudioParamPolyfill(this.context!, value);\n    }\n\n    linearRampToValueAtTime(value: number, endTime: number): AudioParam {\n        console.warn(\"linearRampToValueAtTime used with AudioParamPolyfill, is not fully compatible with standard AudioParam\");\n        this.value = value;\n        return new AudioParamPolyfill(this.context!, value);\n    }\n\n    exponentialRampToValueAtTime(value: number, endTime: number): AudioParam {\n        console.warn(\"exponentialRampToValueAtTime used with AudioParamPolyfill, is not fully compatible with standard AudioParam\");\n        this.value = value;\n        return new AudioParamPolyfill(this.context!, value);\n    }\n\n    cancelAndHoldAtTime(cancelTime: number): AudioParam {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    cancelScheduledValues(cancelTime: number): AudioParam {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    setTargetAtTime(target: number, startTime: number, timeConstant: number): AudioParam {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    setValueCurveAtTime(values: unknown, startTime: unknown, duration: unknown): AudioParam {\n        throw new Error(\"Method not implemented.\");\n    }\n}\n","import SimpleAudioWorkletProcessor from \"./SimpleAudioWorkletProcessor\";\nimport AudioParamPolyfill from \"./AudioParamPolyfill\";\nimport Functions from \"../utils/Functions\";\n\n/**\n * This class convert an audio worklet processor node to a script processor node\n * automagically. Might not work with some WorkletProcessor\n */\nexport default class WorkletScriptProcessorNodeAdapter {\n\n    private workletProcessor: SimpleAudioWorkletProcessor | null;\n    private _parameters = new Map<string, AudioParamPolyfill>();\n    private _port: MessagePort | null = null;\n    private _scriptProcessorNode: ScriptProcessorNode | null;\n    private currentContext: BaseAudioContext | null = null;\n\n    constructor(context: BaseAudioContext, node: SimpleAudioWorkletProcessor, bufferSize?: number) {\n        this.workletProcessor = node;\n        this.currentContext = context;\n\n        // Create a ScriptProcessorNode with two channels\n        this._scriptProcessorNode = context.createScriptProcessor(\n            bufferSize,\n            context.destination.channelCount,\n            context.destination.channelCount\n        );\n\n        this.setupPort();\n        this.setupProcessor();\n        this.setupWorkletScope(context);\n    }\n\n    private setupPort(): void {\n        const messageChannel = new MessageChannel();\n\n        messageChannel.port1.onmessage = ev => {\n            if (this.workletProcessor && this.workletProcessor.port2) {\n                this.workletProcessor.port2.postMessage(ev.data);\n            }\n\n            if (ev && ev.data === \"stop\") {\n                this.stop();\n            }\n        };\n\n        if (this.workletProcessor && this.workletProcessor.port2) {\n            this.workletProcessor.port2.onmessage = ev => {\n                messageChannel.port1.postMessage(ev.data);\n            };\n        }\n\n        this._port = messageChannel.port2;\n    }\n\n    private setupProcessor() {\n        if (!this._scriptProcessorNode || !this.workletProcessor) {\n            return;\n        }\n\n        this._scriptProcessorNode.onaudioprocess = (ev: AudioProcessingEvent) => {\n            if (this.workletProcessor) {\n                const inputArray = [Functions.convertAudioBufferToFloat32Array(ev.inputBuffer)];\n                const ouputArray = [Functions.convertAudioBufferToFloat32Array(ev.outputBuffer)];\n\n                const records: [string, Float32Array][] = [];\n\n                for (const [key, value] of this._parameters.entries()) {\n                    records.push([key, Functions.convertAudioParamToFloat32Array(value, 1)]);\n                }\n\n                const recordsMap: Record<string, Float32Array> = Object.fromEntries(records);\n\n                this.workletProcessor.process(inputArray, ouputArray, recordsMap);\n            }\n        };\n\n        const descriptors = this.workletProcessor.defaultParameterDescriptors;\n\n        if (descriptors) {\n            descriptors.forEach(descriptor => {\n                if (this.currentContext) {\n                    this._parameters.set(descriptor.name, new AudioParamPolyfill(this.currentContext, descriptor.defaultValue));\n                }\n            });\n        }\n    }\n\n    private setupWorkletScope(context: BaseAudioContext) {\n        if (typeof(window) !== \"undefined\") {\n            window.sampleRate = context.sampleRate;\n        }\n    }\n\n    private stop() {\n        this._scriptProcessorNode = null;\n        this._port = null;\n        this._parameters = new Map();\n        this.currentContext = null;\n        this.workletProcessor = null;\n    }\n\n    get port() {\n        return this._port;\n    }\n\n    get parameters(): AudioParamMap {\n        return this._parameters;\n    }\n\n    get node() {\n        return this._scriptProcessorNode;\n    }\n\n    get context() {\n        return this._scriptProcessorNode?.context;\n    }\n}\n","import SimpleAudioWorkletProcessor from \"./SimpleAudioWorkletProcessor\";\n\n/**\n * Polyfill for registerProcessor method used in AudioWorklets\n */\nexport default class RegisterProcessorPolyfill {\n\n    private static processorsMap = new Map<string, typeof SimpleAudioWorkletProcessor>();\n\n    static registerProcessor(processorName: string, processorClass: typeof SimpleAudioWorkletProcessor) {\n        RegisterProcessorPolyfill.processorsMap.set(processorName, processorClass);\n    }\n\n    static getProcessor(processorName: string): SimpleAudioWorkletProcessor | null {\n        const processor = RegisterProcessorPolyfill.processorsMap.get(processorName);\n\n        if (processor) {\n            return new processor();\n        }\n\n        return null;\n    }\n};\n","/**\n * This class is the standard AudioWorkletProcessor interface\n */\nexport interface AudioWorkletProcessorInterface {\n\n    process(inputs: Float32Array[][], outputs: Float32Array[][], parameters: Record<string, Float32Array>): boolean;\n    get parameters(): AudioParamMap;\n    get parameterDescriptors(): AudioParamMap;\n    messageProcessor?: (event: MessageEvent) => void;\n}\n\ntype ParameterDescriptors = {\n    name: string;\n    defaultValue: number;\n}[];\n\n/**\n * This class is a polyfill for the AudioWorkletProcessor interface\n */\nexport default class SimpleAudioWorkletProcessor implements AudioWorkletProcessorInterface {\n    private messageChannel: MessageChannel | null = null;\n    messageProcessor?: ((event: MessageEvent) => void) | undefined;\n\n    constructor() {\n        this.messageChannel = new MessageChannel();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    process(inputs: Float32Array[][], outputs: Float32Array[][], parameters: Record<string, Float32Array>): boolean {\n        return true;\n    }\n\n    get port(): MessagePort | null {\n        return this.messageChannel && this.messageChannel.port1;\n    }\n\n    get port2(): MessagePort | null {\n        return this.messageChannel && this.messageChannel.port2;\n    }\n\n    get parameters(): AudioParamMap {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    get parameterDescriptors(): AudioParamMap {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    get defaultParameterDescriptors(): ParameterDescriptors {\n        return [];\n    }\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport RegisterProcessorPolyfill from \"./RegisterProcessorPolyfill\";\nimport SimpleAudioWorkletProcessor from \"./SimpleAudioWorkletProcessor\";\n\nif (typeof(window) !== \"undefined\" && !(\"AudioWorkletProcessor\" in window)) {\n    (window as any).AudioWorkletProcessor = SimpleAudioWorkletProcessor;\n    (window as any).registerProcessor = RegisterProcessorPolyfill.registerProcessor;\n}\n\nif (typeof(global) !== \"undefined\" && !(\"AudioWorkletProcessor\" in global)) {\n    (global as any).AudioWorkletProcessor = SimpleAudioWorkletProcessor;\n    (global as any).registerProcessor = RegisterProcessorPolyfill.registerProcessor;\n}\n","import WorkletScriptProcessorNodeAdapter from \"../../workletPolyfill/WorkletScriptProcessorNodeAdapter\";\nimport AbstractAudioFilter from \"./AbstractAudioFilter\";\nimport Constants from \"../../model/Constants\";\nimport \"../../workletPolyfill/AudioWorkletProcessorPolyfill\";\nimport RegisterProcessorPolyfill from \"../../workletPolyfill/RegisterProcessorPolyfill\";\nimport utilFunctions from \"../../utils/Functions\";\nimport { FilterSettingValue } from \"@/model/filtersSettings/FilterSettings\";\nimport { EventType } from \"@/model/EventTypeEnum\";\n\nexport default abstract class AbstractAudioFilterWorklet<T> extends AbstractAudioFilter {\n\n    protected currentWorkletNode: AudioWorkletNode | WorkletScriptProcessorNodeAdapter | null = null;\n\n    protected fallbackToScriptProcessor = false;\n\n    protected keepCurrentNodeIfPossible = false;\n\n    private loadedModulesMap = new WeakMap<BaseAudioContext, Set<string>>();\n\n    /**\n     * Return the worklet name (as registered with method registerProcessor)\n     */\n    abstract get workletName(): string;\n\n    /**\n     * Return the path to worklet file\n     */\n    abstract get workletPath(): string;\n\n    /**\n     * Receive event from the worklet\n     */\n    abstract receiveEvent(message: MessageEvent<T>): void;\n\n    /**\n     * Initialize the audio worklet by loading the module\n     * @param audioContext The audio context\n     */\n    async initializeWorklet(audioContext: BaseAudioContext): Promise<void> {\n        this.stop();\n\n        if (!utilFunctions.isAudioWorkletCompatible(audioContext)) {\n            console.error(\"Audio Worklets not supported on this browser. Fallback to ScriptProcessor\");\n            this.fallbackToScriptProcessor = true;\n            return;\n        }\n\n        const workletPath = (this.configService ? this.configService.getWorkletBasePath() : \"\") + this.workletPath;\n\n        const alreadyLoadedModules = this.loadedModulesMap.get(audioContext);\n\n        if (!alreadyLoadedModules || !alreadyLoadedModules.has(workletPath)) {\n            await audioContext.audioWorklet.addModule(workletPath)\n                .then(() => {\n                    const workletPathSet = alreadyLoadedModules ?? new Set<string>();\n\n                    if (!alreadyLoadedModules) {\n                        this.loadedModulesMap.set(audioContext, workletPathSet);\n                    }\n\n                    workletPathSet.add(workletPath);\n\n                    if (this.eventEmitter) {\n                        this.eventEmitter.emit(EventType.WORKLET_SUCCESSFULLY_LOADED);\n                    }\n                })\n                .catch(e => {\n                    console.error(`Error when loading Worklet (${workletPath}) for filter ${this.id}. Fallback to ScriptProcessor. Exception:`, e);\n                    this.fallbackToScriptProcessor = true;\n\n                    if (this.eventEmitter) {\n                        this.eventEmitter.emit(EventType.FALLBACK_WORKLET_TO_SCRIPT_PROCESSOR);\n                    }\n                });\n        }\n    }\n\n    /**\n     * This method checks if audio worklet are enabled\n     * @param audioContext\n     */\n    protected isAudioWorkletEnabled() {\n        if (this.configService) {\n            return this.configService.isAudioWorkletEnabled();\n        }\n\n        return Constants.ENABLE_AUDIO_WORKLET;\n    }\n\n    /**\n     * Check if the Worklet is available and can be used\n     * @returns true if this is the case, false otherwise\n     */\n    protected isAudioWorkletAvailable() {\n        return this.isAudioWorkletEnabled() && !this.fallbackToScriptProcessor;\n    }\n\n    /**\n     * Initialize the AudioWorkletNode or fallback to ScriptProcessorNode\n     * @param context The audio context\n     * @param workletName The worklet name\n     */\n    private initializeNode(context: BaseAudioContext, workletName: string) {\n        if (this.isAudioWorkletAvailable()) {\n            // Standard Audio Worklet\n            this.currentWorkletNode = new AudioWorkletNode(context, workletName);\n        } else {\n            // Fallback to ScriptProcessorNode (polyfill)\n            const processor = RegisterProcessorPolyfill.getProcessor(workletName);\n\n            if (processor) {\n                this.currentWorkletNode = new WorkletScriptProcessorNodeAdapter(context, processor, this.configService!.getBufferSize());\n            } else {\n                throw new Error(`No processor registered with name ${workletName} for filter ${this.id} to use the fallback/polyfill for AudioWorklet. Make sure you have created the class.`);\n            }\n        }\n\n        if (this.currentWorkletNode && this.currentWorkletNode.port) {\n            this.currentWorkletNode.port.onmessage = message => this.receiveEvent(message);\n        }\n    }\n\n    /**\n     * Apply current settings to the audio worklet node.\n     * Uses the getSettings method to extract the settings.\n     */\n    protected applyCurrentSettingsToWorklet() {\n        const currentSettings = this.getSettings();\n\n        for (const settingKey of Object.keys(currentSettings)) {\n            this.setWorkletSetting(settingKey, currentSettings[settingKey]);\n        }\n    }\n\n    /**\n     * Set a setting of the Worklet\n     * @param settingKey The setting name\n     * @param currentSettings The setting value\n     */\n    protected setWorkletSetting(settingKey: string, settingValue: FilterSettingValue) {\n        if (this.currentWorkletNode && this.currentWorkletNode.parameters) {\n            const settingFromWorklet = this.currentWorkletNode.parameters.get(settingKey);\n\n            if (settingFromWorklet) {\n                settingFromWorklet.value = settingValue as number;\n                settingFromWorklet.setValueAtTime(settingValue as number, 0);\n            }\n        }\n    }\n\n    /** Default implementation for GetNode - AbstractAudioFilterWorklet */\n    getNode(context: BaseAudioContext) {\n        if (!this.keepCurrentNodeIfPossible || !this.currentWorkletNode\n            || this.currentWorkletNode.context != context) {\n            this.stop();\n            this.initializeNode(context, this.workletName);\n        }\n\n        this.applyCurrentSettingsToWorklet();\n        this.setEnabled(this.isEnabled());\n\n        if (this.currentWorkletNode) {\n            if (this.currentWorkletNode instanceof WorkletScriptProcessorNodeAdapter) {\n                return {\n                    input: this.currentWorkletNode.node!,\n                    output: this.currentWorkletNode.node!,\n                };\n            }\n\n            return {\n                input: this.currentWorkletNode,\n                output: this.currentWorkletNode,\n            };\n        }\n\n        throw new Error(\"Worklet node has not yet been created\");\n    }\n\n    /**\n     * Stop the current worklet node. The worklet need to respond to \"stop\" events.\n     */\n    stop() {\n        if (this.currentWorkletNode && this.currentWorkletNode.port) {\n            this.currentWorkletNode.port.postMessage(\"stop\");\n            this.currentWorkletNode.port.close();\n            this.currentWorkletNode.port.onmessage = null;\n        }\n\n        this.currentWorkletNode = null;\n    }\n\n    /**\n     * Pass the current disabled/enabled state to the worklet.\n     * The worklet need to respond to \"enable\"/\"disable\" events.\n     * @param state The current disabled/enabled state\n     */\n    setEnabled(state: boolean): void {\n        if (this.currentWorkletNode && this.currentWorkletNode.port) {\n            this.currentWorkletNode.port.postMessage(state ? \"enable\" : \"disable\");\n        }\n\n        super.setEnabled(state);\n    }\n\n    public isWorklet(): boolean {\n        return true;\n    }\n}\n","import AbstractAudioNode from \"./AbstractAudioNode\";\n\n\nexport default abstract class AbstractAudioRenderer extends AbstractAudioNode {\n\n    /** Render an AudioBuffer based on another input AudioBuffer */\n    abstract renderAudio(context: BaseAudioContext, buffer: AudioBuffer): Promise<AudioBuffer>;\n}\n","import { injectable } from \"inversify\";\nimport AudioEditorEvents from \"../model/AudioEditorEvent\";\nimport { EventEmitterCallback } from \"../model/EventEmitterCallback\";\nimport EventEmitterInterface from \"./interfaces/EventEmitterInterface\";\nimport { EventType } from \"@/model/EventTypeEnum\";\n\n@injectable()\nexport default class EventEmitter implements EventEmitterInterface {\n\n    private _listeners: AudioEditorEvents = {};\n\n    constructor() {\n        this._listeners = {};\n    }\n\n    on(event: EventType | string, callback: EventEmitterCallback) {\n        if (!this._listeners[event]) {\n            this._listeners[event] = [];\n        }\n\n        this._listeners[event].push(callback);\n    }\n\n    async emit(event: EventType | string, data?: string | number | AudioBuffer) {\n        if (this._listeners[event]) {\n            for (const callback of this._listeners[event]) {\n                await callback(data);\n            }\n        }\n    }\n\n    off(event: EventType | string, callback: EventEmitterCallback) {\n        if (this._listeners[event]) {\n            this._listeners[event] = this._listeners[event].filter(cb => cb !== callback);\n        }\n    }\n\n    get listeners() {\n        return this._listeners;\n    }\n\n    set listeners(events: AudioEditorEvents) {\n        this._listeners = events;\n    }\n}\n","import { injectable } from \"inversify\";\nimport Constants from \"../model/Constants\";\nimport { ConfigService } from \"./interfaces/ConfigService\";\n\n/**\n * Default implementation for a ConfigService, using a built-in map.\n * The configuration is not stored in localstorage in this case.\n */\n@injectable()\nexport default class GenericConfigService implements ConfigService {\n\n    private mapConfig = new Map<string, string>();\n\n    private workerBasePath = \"\";\n    private workletBasePath = \"\";\n    private soundBasePath = \"\";\n\n    getConfig(key: string): string | undefined | null {\n        return this.mapConfig.get(key);\n    }\n\n    setConfig(key: string, value: string): void {\n        this.mapConfig.set(key, value);\n    }\n\n    isCompatibilityModeEnabled(): boolean {\n        return this.getConfig(Constants.PREFERENCES_KEYS.COMPATIBILITY_MODE_ENABLED) == \"true\";\n    }\n\n    isCompatibilityModeChecked(): boolean {\n        return this.getConfig(Constants.PREFERENCES_KEYS.COMPATIBILITY_MODE_CHECKED) == \"true\";\n    }\n\n    isAudioWorkletEnabled(): boolean {\n        const setting = this.getConfig(Constants.PREFERENCES_KEYS.ENABLE_AUDIO_WORKLET);\n\n        if (setting != null) {\n            return setting == \"true\";\n        }\n\n        return Constants.ENABLE_AUDIO_WORKLET;\n    }\n\n    isSoundtouchAudioWorkletEnabled(): boolean {\n        const setting = this.getConfig(Constants.PREFERENCES_KEYS.ENABLE_SOUNDTOUCH_AUDIO_WORKLET);\n\n        if (setting != null) {\n            return setting == \"true\";\n        }\n\n        return Constants.ENABLE_SOUNDTOUCH_AUDIO_WORKLET;\n    }\n\n    getBufferSize(): number {\n        const setting = this.getConfig(Constants.PREFERENCES_KEYS.BUFFER_SIZE);\n\n        if (setting != null) {\n            return parseInt(setting, 10);\n        }\n\n        return Constants.DEFAULT_BUFFER_SIZE;\n    }\n\n    getSampleRate(): number {\n        const setting = this.getConfig(Constants.PREFERENCES_KEYS.SAMPLE_RATE);\n\n        if (setting != null) {\n            return parseInt(setting, 10);\n        }\n\n        return Constants.DEFAULT_SAMPLE_RATE;\n    }\n\n    getBitrateMP3(): number {\n        const setting = this.getConfig(Constants.PREFERENCES_KEYS.BITRATE_MP3);\n\n        if (setting != null) {\n            return parseInt(setting, 10);\n        }\n\n        return Constants.DEFAULT_MP3_BITRATE;\n    }\n\n    enableCompatibilityMode() {\n        this.setConfig(Constants.PREFERENCES_KEYS.COMPATIBILITY_MODE_ENABLED, \"true\");\n    }\n\n    disableCompatibilityMode() {\n        this.setConfig(Constants.PREFERENCES_KEYS.COMPATIBILITY_MODE_ENABLED, \"false\");\n    }\n\n    getWorkletBasePath(): string {\n        return this.workletBasePath;\n    }\n\n    getWorkerBasePath(): string {\n        return this.workerBasePath;\n    }\n\n    getSoundBasePath(): string {\n        return this.soundBasePath;\n    }\n\n    setWorkletBasePath(workletBasePath: string) {\n        this.workletBasePath = workletBasePath;\n    }\n\n    setWorkerBasePath(workerBasePath: string) {\n        this.workerBasePath = workerBasePath;\n    }\n\n    setSoundBasePath(soundBasePath: string) {\n        this.soundBasePath = soundBasePath;\n    }\n\n    isInitialRenderingDisabled(): boolean {\n        const setting = this.getConfig(Constants.PREFERENCES_KEYS.DISABLE_INITIAL_RENDERING);\n\n        if (setting != null) {\n            return setting == \"true\";\n        }\n\n        return Constants.DISABLE_INITIAL_RENDERING;\n    }\n};\n","import { inject, injectable, postConstruct } from \"inversify\";\nimport { EventType } from \"@/model/EventTypeEnum\";\nimport Constants from \"@/model/Constants\";\nimport EventEmitter from \"@/utils/EventEmitter\";\nimport AudioContextManagerInterface from \"./interfaces/AudioContextManagerInterface\";\nimport { ConfigService } from \"@/services/interfaces/ConfigService\";\nimport EventEmitterInterface from \"@/utils/interfaces/EventEmitterInterface\";\nimport { TYPES } from \"@/inversify.types\";\nimport WindowWithOfflineAudioContext from \"@/model/WindowWithOfflineAudioContext\";\n\n@injectable()\nexport default class AudioContextManager implements AudioContextManagerInterface {\n\n    /** The current event emitter */\n    private eventEmitter: EventEmitterInterface | undefined;\n\n    /** The config service */\n    private configService: ConfigService | null;\n\n    /** The current audio context */\n    private _currentContext: AudioContext | null | undefined;\n\n    /** The previous sample rate setting */\n    private previousSampleRate = Constants.DEFAULT_SAMPLE_RATE;\n\n    constructor(\n        @inject(TYPES.EventEmitter) eventEmitter: EventEmitterInterface | null,\n        @inject(TYPES.ConfigService) configService: ConfigService | null) {\n        this.eventEmitter = eventEmitter || new EventEmitter();\n        this.configService = configService;\n    }\n\n    @postConstruct()\n    setup() {\n        if (this.configService) {\n            this.previousSampleRate = this.configService.getSampleRate();\n\n            if (this.eventEmitter) {\n                this.eventEmitter.emit(EventType.SAMPLE_RATE_CHANGED, this.previousSampleRate);\n            }\n        }\n\n        if (!this.currentContext) {\n            this.createNewContext(this.previousSampleRate);\n        }\n    }\n\n    createNewContextIfNeeded(principalBuffer?: AudioBuffer | null) {\n        const isCompatibilityModeEnabled = this.configService && this.configService.isCompatibilityModeEnabled();\n\n        if (isCompatibilityModeEnabled && principalBuffer) {\n            // If compatibility mode is enabled, we use the sample rate of the input audio buffer\n            if (this.currentSampleRate != principalBuffer.sampleRate) {\n                this.createNewContext(principalBuffer.sampleRate);\n                return true;\n            }\n        } else {\n            // Otherwise we change the context if the sample rate has changed\n            let currentSampleRate = Constants.DEFAULT_SAMPLE_RATE;\n\n            if (this.configService) {\n                currentSampleRate = this.configService.getSampleRate();\n            }\n\n            // If sample rate setting has changed, create a new audio context\n            if (currentSampleRate != this.previousSampleRate) {\n                this.createNewContext(currentSampleRate);\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Stop previous audio context and create a new one\n     * @param sampleRate New sample rate\n     */\n    createNewContext(sampleRate: number) {\n        if (this._currentContext) {\n            this._currentContext.close();\n        }\n\n        const options: AudioContextOptions = {\n            latencyHint: \"interactive\"\n        };\n\n        if (sampleRate != 0) {\n            options.sampleRate = sampleRate;\n        }\n\n        this._currentContext = new AudioContext(options);\n\n        if (this.eventEmitter) {\n            this.eventEmitter.emit(EventType.SAMPLE_RATE_CHANGED, this.currentSampleRate);\n        }\n\n        this.previousSampleRate = sampleRate;\n    }\n\n    createOfflineAudioContext(numberOfChannels: number, duration: number, sampleRate: number) {\n        /* Hack: we use an iframe to force the garbage collector to clean up the memory\n           used by the OfflineAudioContext, including audio buffers. This helps avoid\n           memory leaks in Chrome, where offline audio contexts may not be properly cleaned up. */\n        const iframe = document.createElement(\"iframe\");\n        iframe.style.display = \"none\";\n\n        document.body.appendChild(iframe);\n\n        const iframeWindow = iframe.contentWindow;\n\n        if (!iframeWindow) {\n            throw new Error(\"Failed to create isolated OfflineAudioContext\");\n        }\n\n        const OfflineAudioContextConstructor = (iframeWindow as WindowWithOfflineAudioContext).OfflineAudioContext as typeof OfflineAudioContext;\n        const offlineAudioContext = new OfflineAudioContextConstructor(numberOfChannels, duration, sampleRate);\n\n        offlineAudioContext.addEventListener(\"complete\", () => {\n            /* We use setTimeout (macro task) to ensure that the iframe removal happens after the audio processing is finished\n               and after event handling from other parts of the code has been completed. This ensures that the iframe\n               is removed at the right time, without interfering with the ongoing execution of other tasks related to\n               audio processing in the offline context. */\n            setTimeout(() => document.body.removeChild(iframe));\n        });\n\n        return offlineAudioContext;\n    }\n\n    get currentSampleRate(): number {\n        if (this.currentContext) {\n            return this.currentContext.sampleRate;\n        }\n\n        return 0;\n    }\n\n    get currentContext() {\n        return this._currentContext;\n    }\n}\n","import AbstractAudioElement from \"@/interfaces/AbstractAudioElement\";\nimport { EventType } from \"@/model/EventTypeEnum\";\nimport utils from \"../utils/Functions\";\nimport Constants from \"@/model/Constants\";\nimport AudioProcessorInterface from \"./interfaces/AudioProcessorInterface\";\nimport { inject, injectable, injectFromBase } from \"inversify\";\nimport type BufferPlayerInterface from \"@/bufferPlayer/interfaces/BufferPlayerInterface\";\nimport type BufferManagerInterface from \"./interfaces/BufferManagerInterface\";\nimport type RendererManagerInterface from \"./interfaces/RendererManagerInterface\";\nimport type FilterManagerInterface from \"./interfaces/FilterManagerInterface\";\nimport { TYPES } from \"@/inversify.types\";\n\n@injectable()\n@injectFromBase()\nexport default class AudioProcessor extends AbstractAudioElement implements AudioProcessorInterface {\n\n    /** The filter manager */\n    private filterManager: FilterManagerInterface | undefined;\n\n    /** The filter manager */\n    private rendererManager: RendererManagerInterface | undefined;\n\n    /** The audio player */\n    private bufferPlayer: BufferPlayerInterface | undefined;\n\n    /** The save buffer manager */\n    private bufferManager: BufferManagerInterface | undefined;\n\n    /** The current offline context */\n    private currentOfflineContext: OfflineAudioContext | null | undefined;\n\n    /** The resulting audio buffer */\n    private _renderedBuffer: AudioBuffer | null = null;\n\n    /** true if the user wanted to cancel audio rendering */\n    private audioRenderingLastCanceled = false;\n\n    /** true if initial rendering for the current buffer was done */\n    initialRenderingDone = false;\n\n    /** The sum of all the samples of the input buffer,\n     * used to detect the need to enable the compatibility mode */\n    sumInputBuffer: number = 0;\n\n    constructor(\n        @inject(TYPES.FilterManager) filterManager: FilterManagerInterface | undefined,\n        @inject(TYPES.RendererManager) rendererManager: RendererManagerInterface | undefined,\n        @inject(TYPES.BufferPlayer) bufferPlayer: BufferPlayerInterface | undefined,\n        @inject(TYPES.BufferManager) bufferManager: BufferManagerInterface | undefined) {\n        super();\n\n        this.bufferPlayer = bufferPlayer;\n        this.filterManager = filterManager;\n        this.rendererManager = rendererManager;\n        this.bufferManager = bufferManager;\n    }\n\n    async prepareContext(inputBuffer: AudioBuffer | null) {\n        if (this.contextManager) {\n            const changed = this.contextManager.createNewContextIfNeeded(inputBuffer);\n\n            if (changed && this.bufferManager) {\n                await this.bufferManager.resetBufferFetcher();\n            }\n\n            if (this.contextManager.currentContext) {\n                this.contextManager.currentContext.resume();\n            }\n        }\n    }\n\n    updateAudioSpeedAndDuration(durationAudio?: number | null) {\n        if (this.eventEmitter) {\n            if (this.filterManager && this.filterManager.entrypointFilter) {\n                const speedAudio = this.filterManager.entrypointFilter.getSpeed();\n                this.eventEmitter.emit(EventType.AUDIO_SPEED_UPDATED, speedAudio);\n            }\n\n            if (durationAudio != null) {\n                this.eventEmitter.emit(EventType.AUDIO_DURATION_UPDATED, durationAudio);\n            }\n        }\n    }\n\n    resetAudioRenderingProgress() {\n        if (this.eventEmitter) {\n            this.eventEmitter.emit(EventType.UPDATE_AUDIO_TREATMENT_PERCENT, 0);\n            this.eventEmitter.emit(EventType.UPDATE_REMAINING_TIME_ESTIMATED, -1);\n        }\n\n        if (this.filterManager) {\n            this.filterManager.disableFilter(Constants.FILTERS_NAMES.RENDERING_PROGRESS_CALCULATION);\n        }\n    }\n\n    startRenderingProgressCalculation() {\n        if (this.filterManager) {\n            this.filterManager.enableFilter(Constants.FILTERS_NAMES.RENDERING_PROGRESS_CALCULATION);\n        }\n    }\n\n    async renderAudio(inputBuffer: AudioBuffer | null, forceInitialRendering?: boolean): Promise<boolean> {\n        await this.prepareContext(inputBuffer);\n\n        if (!this.contextManager || !this.contextManager.currentContext) {\n            throw new Error(\"AudioContext is not yet available\");\n        }\n\n        if (!this.filterManager) {\n            throw new Error(\"Filter manager is not available\");\n        }\n\n        if (!this.rendererManager) {\n            throw new Error(\"Renderer manager is not available\");\n        }\n\n        if (!this.filterManager.entrypointFilter) {\n            throw new Error(\"Entrypoint filter is not available\");\n        }\n\n        if (!inputBuffer) {\n            throw new Error(\"No principal buffer available\");\n        }\n\n        if (this.eventEmitter) {\n            this.eventEmitter.emit(EventType.AUDIO_SPEED_UPDATED, 1);\n        }\n\n        // If initial rendering is disabled and compatibility mode is disabled, we stop here\n        if (!this.initialRenderingDone && this.configService && this.configService.isInitialRenderingDisabled() && !this.configService.isCompatibilityModeEnabled() && !forceInitialRendering) {\n            this.loadInitialBuffer(inputBuffer);\n            this.initialRenderingDone = true;\n            return true;\n        }\n\n        // If switching from compatiblity mode to normal mode, we stop the audio player\n        if (this.configService && this.bufferPlayer && !this.configService.isCompatibilityModeEnabled() && this.bufferPlayer.compatibilityMode) {\n            this.bufferPlayer.stop();\n        }\n\n        this.currentOfflineContext = null;\n        this.audioRenderingLastCanceled = false;\n\n        const speedAudio = this.filterManager.entrypointFilter.getSpeed();\n        const durationAudio = utils.calculateAudioDuration(inputBuffer, this.filterManager, speedAudio);\n        const outputContext = this.configService && this.configService.isCompatibilityModeEnabled() ?\n            this.contextManager.currentContext :\n            this.contextManager.createOfflineAudioContext(2, this.contextManager.currentContext.sampleRate * durationAudio, this.contextManager.currentContext.sampleRate);\n\n        this._renderedBuffer = await this.rendererManager.executeAudioRenderers(inputBuffer, outputContext);\n\n        this.resetAudioRenderingProgress();\n\n        this.filterManager.setupTotalSamples(durationAudio, this.contextManager.currentContext);\n\n        return this.setupOutput(inputBuffer, outputContext, durationAudio);\n    }\n\n    async setupOutput(inputBuffer: AudioBuffer | null, outputContext: AudioContext | OfflineAudioContext, durationAudio?: number): Promise<boolean> {\n        if (this._renderedBuffer && this.configService && this.eventEmitter && this.bufferPlayer && this.filterManager) {\n            const compatibilityModeEnabled = this.configService.isCompatibilityModeEnabled();\n\n            if (!compatibilityModeEnabled) {\n                this.startRenderingProgressCalculation();\n            }\n\n            // Initialize worklets then connect the filter nodes\n            await this.filterManager.initializeWorklets(outputContext);\n\n            await this.filterManager.connectNodes(outputContext, this._renderedBuffer, false, this.configService.isCompatibilityModeEnabled());\n\n            // Standard mode\n            if (!compatibilityModeEnabled && this.filterManager.currentNodes) {\n                const offlineContext = outputContext as OfflineAudioContext;\n\n                this.currentOfflineContext = offlineContext;\n\n                this.filterManager.currentNodes.output.connect(outputContext.destination);\n\n                const renderedBuffer = await offlineContext.startRendering();\n\n                this.cleanupAfterOfflineRendering();\n\n                if (this.contextManager && !this.loadRenderedAudio(inputBuffer, renderedBuffer)) {\n                    return this.setupOutput(inputBuffer, this.contextManager.currentContext!, durationAudio);\n                }\n\n                if (this.audioRenderingLastCanceled) {\n                    return false;\n                }\n\n                this.eventEmitter.emit(EventType.OFFLINE_AUDIO_RENDERING_FINISHED);\n            } else if (this.filterManager.currentNodes) { // Compatibility mode\n                this.bufferPlayer.setCompatibilityMode(this.filterManager.currentNodes.output);\n\n                this.updateAudioSpeedAndDuration(durationAudio);\n\n                this.initialRenderingDone = true;\n            }\n\n            if (this.eventEmitter) {\n                this.eventEmitter.emit(EventType.AUDIO_RENDERING_FINISHED);\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    public cancelAudioRendering() {\n        if (this.currentOfflineContext && !this.audioRenderingLastCanceled && this.filterManager) {\n            this.audioRenderingLastCanceled = true;\n            this.filterManager.disconnectOldNodes(false);\n\n            if (this.eventEmitter) {\n                this.eventEmitter.emit(EventType.CANCELLING_AUDIO_PROCESSING);\n            }\n        }\n    }\n\n    private cleanupAfterOfflineRendering() {\n        if (this.filterManager) {\n            this.filterManager.clearWorklets();\n            this.filterManager.disconnectOldNodes(false);\n        }\n\n        if (this.currentOfflineContext) {\n            this.currentOfflineContext.destination.disconnect();\n            this.currentOfflineContext = null;\n        }\n    }\n\n    /**\n     * Load rendered audio buffer into audio player\n     * @param renderedBuffer Rendered audio buffer - AudioBuffer\n     * @returns false if the rendered audio buffer is invalid, true otherwise\n     */\n    private loadRenderedAudio(inputBuffer: AudioBuffer | null, renderedBuffer: AudioBuffer): boolean {\n        if (this.eventEmitter && this.bufferPlayer) {\n            if (!this.audioRenderingLastCanceled) {\n                const sumRenderedAudio = utils.sumAudioBuffer(renderedBuffer);\n\n                if (sumRenderedAudio == 0 && this.sumInputBuffer !== 0) {\n                    if (this.configService && !this.configService.isCompatibilityModeChecked()) {\n                        this.setCompatibilityModeChecked(true);\n                        this.configService.enableCompatibilityMode();\n                        this.eventEmitter.emit(EventType.COMPATIBILITY_MODE_AUTO_ENABLED);\n\n                        console.warn(\"Compatibility mode has been automatically enabled because a problem has been detected with the web browser.\");\n\n                        return false;\n                    }\n\n                    this.eventEmitter.emit(EventType.RENDERING_AUDIO_PROBLEM_DETECTED);\n                }\n\n                this._renderedBuffer = renderedBuffer;\n\n                this.bufferPlayer.loadBuffer(this._renderedBuffer);\n\n                this.updateAudioSpeedAndDuration(null);\n            } else if (!this.initialRenderingDone) {\n                this.loadInitialBuffer(inputBuffer);\n                this.eventEmitter.emit(EventType.CANCELLED_AND_LOADED_INITIAL_AUDIO);\n            }\n\n            this.initialRenderingDone = true;\n        }\n\n        return true;\n    }\n\n    /**\n     * Load the initial audio buffer to the buffer player\n     */\n    private loadInitialBuffer(inputBuffer: AudioBuffer | null) {\n        if (this.bufferPlayer) {\n            this._renderedBuffer = inputBuffer;\n            this.bufferPlayer.loadBuffer(inputBuffer!);\n        }\n    }\n\n    clearRenderedBuffer() {\n        utils.clearAudioBuffer(this._renderedBuffer);\n        this._renderedBuffer = null;\n    }\n\n    /**\n     * Set compatibility/direct audio rendering mode already checked for auto enabling (if an error occurs rendering in offline context)\n     * @param checked boolean\n     */\n    private setCompatibilityModeChecked(checked: boolean) {\n        if (this.configService) {\n            this.configService.setConfig(Constants.PREFERENCES_KEYS.COMPATIBILITY_MODE_CHECKED, String(checked));\n        }\n    }\n\n    get renderedBuffer() {\n        return this._renderedBuffer;\n    }\n}\n","import AbstractAudioElement from \"@/interfaces/AbstractAudioElement\";\nimport { EventType } from \"@/model/EventTypeEnum\";\nimport BufferManagerInterface from \"./interfaces/BufferManagerInterface\";\nimport { inject, injectable, injectFromBase, postConstruct } from \"inversify\";\nimport { TYPES } from \"@/inversify.types\";\nimport EventEmitterInterface from \"@/utils/interfaces/EventEmitterInterface\";\nimport type FilterManagerInterface from \"./interfaces/FilterManagerInterface\";\nimport type BufferFetcherServiceInterface from \"@/services/interfaces/BufferFetcherServiceInterface\";\n\n@injectable()\n@injectFromBase()\nexport default class BufferManager extends AbstractAudioElement implements BufferManagerInterface {\n\n    /** The filter manager */\n    private filterManager: FilterManagerInterface | undefined;\n\n    /** True if we are downloading initial buffer data */\n    downloadingInitialData = false;\n\n    /** List of audio buffers to fetch */\n    private audioBuffersToFetch: string[] = [];\n\n    constructor(\n        @inject(TYPES.FilterManager) filterManager: FilterManagerInterface,\n        @inject(TYPES.BufferFetcherService) bufferFetcherService: BufferFetcherServiceInterface,\n        @inject(TYPES.EventEmitter) eventEmitter: EventEmitterInterface | null,\n        @inject(TYPES.AudioBuffersToFetch) audioBuffersToFetch: string[]) {\n        super();\n\n        this.bufferFetcherService = bufferFetcherService;\n        this.eventEmitter = eventEmitter;\n        this.filterManager = filterManager;\n        this.filterManager = filterManager;\n        this.audioBuffersToFetch = audioBuffersToFetch;\n    }\n\n    @postConstruct()\n    setup() {\n        if (this.audioBuffersToFetch.length > 0) {\n            this.fetchBuffers(false);\n        }\n    }\n\n    /**\n     * Fetch default buffers from network\n     * @param refetch true if we need to refetch the buffers\n     */\n    private async fetchBuffers(refetch: boolean) {\n        if (this.downloadingInitialData || !this.bufferFetcherService) {\n            return;\n        }\n\n        this.downloadingInitialData = true;\n\n        if (this.eventEmitter && !refetch) {\n            this.eventEmitter.emit(EventType.LOADING_BUFFERS);\n        }\n\n        try {\n            await this.bufferFetcherService.fetchAllBuffers(this.audioBuffersToFetch);\n\n            this.downloadingInitialData = false;\n\n            if (this.eventEmitter && !refetch) {\n                this.eventEmitter.emit(EventType.LOADED_BUFFERS);\n            }\n        } catch (e) {\n            console.error(e);\n\n            if (this.eventEmitter && !refetch) {\n                this.eventEmitter.emit(EventType.LOADING_BUFFERS_ERROR);\n            }\n        }\n    }\n\n    async resetBufferFetcher() {\n        if (this.bufferFetcherService) {\n            this.bufferFetcherService.reset();\n\n            await this.fetchBuffers(true);\n\n            if (this.filterManager) {\n                await this.filterManager.resetFilterBuffers();\n            }\n        }\n    }\n}\n","import AbstractAudioElement from \"@/interfaces/AbstractAudioElement\";\nimport AbstractAudioFilter from \"@/filters/interfaces/AbstractAudioFilter\";\nimport AudioFilterEntrypointInterface from \"@/filters/interfaces/AudioFilterEntrypointInterface\";\nimport { AudioFilterNodes } from \"@/model/AudioNodes\";\nimport AbstractAudioFilterWorklet from \"@/filters/interfaces/AbstractAudioFilterWorklet\";\nimport { FilterState } from \"@/model/FilterState\";\nimport { FilterSettings } from \"@/model/filtersSettings/FilterSettings\";\nimport FilterManagerInterface from \"./interfaces/FilterManagerInterface\";\nimport { inject, injectable, injectFromBase, multiInject, postConstruct } from \"inversify\";\nimport { TYPES } from \"@/inversify.types\";\n\n@injectable()\n@injectFromBase()\nexport default class FilterManager extends AbstractAudioElement implements FilterManagerInterface {\n\n    /** A list of filters */\n    private filters: AbstractAudioFilter[] = [];\n\n    /** The entrypoint filter */\n    private _entryPointFilter: (AbstractAudioFilter & AudioFilterEntrypointInterface) | null = null;\n\n    /** The current connected nodes */\n    private _currentNodes: AudioFilterNodes | null = null;\n\n    constructor(\n        @multiInject(TYPES.Filters) filters: AbstractAudioFilter[],\n        @inject(TYPES.EntryPointFilter) entryPointFilter: (AbstractAudioFilter & AudioFilterEntrypointInterface) | null\n    ) {\n        super();\n\n        this.filters = filters;\n        this._entryPointFilter = entryPointFilter;\n    }\n\n    @postConstruct()\n    setup() {\n        this.initializeFilters(this.filters);\n    }\n\n    addFilters(...filters: AbstractAudioFilter[]) {\n        this.initializeFilters(filters);\n        this.filters.push(...filters);\n    }\n\n    private initializeFilters(filters: AbstractAudioFilter[]) {\n        for (const filter of filters) {\n            filter.initializeDefaultSettings();\n            filter.injectDependencies(this.bufferFetcherService, this.bufferDecoderService, this.configService, this.eventEmitter, this.contextManager);\n        }\n    }\n\n    getFiltersState(): FilterState {\n        const state: FilterState = {};\n\n        this.filters.forEach(filter => {\n            state[filter.id] = filter.isEnabled();\n        });\n\n        return state;\n    }\n\n    getFiltersSettings(): Map<string, FilterSettings> {\n        const settings = new Map<string, FilterSettings>();\n\n        for (const filter of this.filters) {\n            settings.set(filter.id, filter.getSettings());\n        }\n\n        return settings;\n    }\n\n    enableFilter(filterId: string) {\n        const filter = this.filters.find(f => f.id === filterId);\n\n        if (filter) {\n            filter.enable();\n        }\n    }\n\n    disableFilter(filterId: string) {\n        const filter = this.filters.find(f => f.id === filterId);\n\n        if (filter) {\n            filter.disable();\n        }\n    }\n\n    toggleFilter(filterId: string) {\n        const filter = this.filters.find(f => f.id === filterId);\n\n        if (filter) {\n            filter.toggle();\n        }\n    }\n\n    async changeFilterSettings(filterId: string, settings: FilterSettings) {\n        const filter = this.filters.find(f => f.id === filterId);\n\n        if (filter) {\n            for (const key of Object.keys(settings)) {\n                await filter.setSetting(key, settings[key]);\n            }\n        }\n    }\n\n    async resetFilterSettings(filterId: string) {\n        const filter = this.filters.find(f => f.id === filterId);\n\n        if (filter) {\n            await filter.resetSettings();\n        }\n    }\n\n    resetAllFiltersState() {\n        this.filters.forEach(element => {\n            if (element.isDefaultEnabled()) {\n                element.enable();\n            } else {\n                element.disable();\n            }\n        });\n    }\n\n    async connectNodes(context: BaseAudioContext, buffer: AudioBuffer, keepCurrentInputOutput: boolean, isCompatibilityMode: boolean): Promise<void> {\n        if (!this._entryPointFilter) {\n            return;\n        }\n\n        let entrypointNode: AudioNode | null = null;\n\n        if (keepCurrentInputOutput && this._currentNodes) {\n            entrypointNode = this._currentNodes.input;\n        } else {\n            const entrypointNodes = await this._entryPointFilter.getEntrypointNode(context, buffer, !isCompatibilityMode);\n            entrypointNode = entrypointNodes.input;\n        }\n\n        const intermediateNodes: AudioFilterNodes[] = [];\n        let previousNode: AudioNode | undefined = entrypointNode;\n\n        this.disconnectOldNodes(keepCurrentInputOutput);\n\n        // Sort by filter order, then remove the disabled filter (but always keep the last/output filter)\n        const filters = this.filters\n            .sort((a, b) => a.order - b.order)\n            .filter((filter, index) => filter !== this._entryPointFilter && (filter.isEnabled() || index >= this.filters.length - 1));\n\n        for (const filter of filters) {\n            const node = filter.getNode(context);\n\n            if (previousNode) {\n                previousNode.connect(node.input);\n            }\n\n            previousNode = node.output;\n            intermediateNodes.push(node);\n        }\n\n        if (this._entryPointFilter) {\n            this._entryPointFilter.updateState();\n        }\n\n        this._currentNodes = {\n            input: entrypointNode!,\n            output: previousNode!,\n            intermediateNodes: intermediateNodes\n                .filter(n => n.input != previousNode && n.output != previousNode &&\n                    n.input != entrypointNode && n.output != entrypointNode)\n        };\n    }\n\n    disconnectOldNodes(keepCurrentOutput: boolean) {\n        if (this._currentNodes) {\n            this._currentNodes.input.disconnect();\n\n            if (!keepCurrentOutput) {\n                this._currentNodes.output.disconnect();\n            }\n\n            this.disconnecteIntermediateNodes();\n        }\n    }\n\n    private disconnecteIntermediateNodes() {\n        if (this._currentNodes && this._currentNodes.intermediateNodes) {\n            for (const intermediate of this._currentNodes.intermediateNodes) {\n                intermediate.input.disconnect();\n                intermediate.output.disconnect();\n            }\n\n            this._currentNodes.intermediateNodes = undefined;\n        }\n    }\n\n    async initializeWorklets(context: BaseAudioContext) {\n        for (const filter of this.filters) {\n            if (filter.isWorklet()) {\n                this.clearWorklets();\n                await (filter as AbstractAudioFilterWorklet<object>).initializeWorklet(context);\n            }\n        }\n    }\n\n    clearWorklets() {\n        for (const filter of this.filters) {\n            if (filter.isWorklet()) {\n                (filter as AbstractAudioFilterWorklet<object>).stop();\n            }\n        }\n    }\n\n    getAddingTime() {\n        let duration = 0;\n\n        for (const filter of this.filters) {\n            if (filter.isEnabled()) {\n                duration += filter.getAddingTime();\n            }\n        }\n\n        return duration;\n    }\n\n    setupTotalSamples(durationAudio: number, currentContext: AudioContext | null) {\n        if (currentContext) {\n            const totalSamples = durationAudio * currentContext.sampleRate;\n\n            for (const filter of this.filters) {\n                filter.totalSamples = totalSamples;\n            }\n        }\n    }\n\n    async resetFilterBuffers() {\n        for (const filter of this.filters) {\n            await filter.bufferFetcherReseted();\n        }\n    }\n\n    get entrypointFilter() {\n        return this._entryPointFilter;\n    }\n\n    get currentNodes() {\n        return this._currentNodes;\n    }\n}\n","import { injectable, injectFromBase, multiInject, postConstruct } from \"inversify\";\nimport { TYPES } from \"@/inversify.types\";\nimport AbstractAudioElement from \"@/interfaces/AbstractAudioElement\";\nimport AbstractAudioRenderer from \"@/filters/interfaces/AbstractAudioRenderer\";\nimport { FilterState } from \"@/model/FilterState\";\nimport RendererManagerInterface from \"./interfaces/RendererManagerInterface\";\n\n@injectable()\n@injectFromBase()\nexport default class RendererManager extends AbstractAudioElement implements RendererManagerInterface {\n\n    /** A list of renderers */\n    private renderers: AbstractAudioRenderer[] = [];\n\n    constructor(\n        @multiInject(TYPES.Renderers) renderers: AbstractAudioRenderer[] = []) {\n        super();\n\n        this.renderers = renderers;\n    }\n\n    @postConstruct()\n    setup() {\n        this.initializeRenderers(this.renderers);\n    }\n\n    addRenderers(...renderers: AbstractAudioRenderer[]) {\n        this.initializeRenderers(renderers);\n        this.renderers.push(...renderers);\n    }\n\n    private initializeRenderers(renderers: AbstractAudioRenderer[]) {\n        for (const renderer of renderers) {\n            renderer.injectDependencies(this.bufferFetcherService, this.bufferDecoderService, this.configService, this.eventEmitter, this.contextManager);\n        }\n    }\n\n    getRenderersState(): FilterState {\n        const state: FilterState = {};\n\n        this.renderers.forEach(renderer => {\n            state[renderer.id] = renderer.isEnabled();\n        });\n\n        return state;\n    }\n\n    enableRenderer(rendererId: string) {\n        const renderer = this.renderers.find(f => f.id === rendererId);\n\n        if (renderer) {\n            renderer.enable();\n        }\n    }\n\n    disableRenderer(rendererId: string) {\n        const renderer = this.renderers.find(f => f.id === rendererId);\n\n        if (renderer) {\n            renderer.disable();\n        }\n    }\n\n    toggleRenderer(rendererId: string) {\n        const renderer = this.renderers.find(f => f.id === rendererId);\n\n        if (renderer) {\n            renderer.toggle();\n        }\n    }\n\n    resetAllRenderersState() {\n        this.renderers.forEach(element => {\n            if (element.isDefaultEnabled()) {\n                element.enable();\n            } else {\n                element.disable();\n            }\n        });\n    }\n\n    async executeAudioRenderers(buffer: AudioBuffer, outputContext: AudioContext | OfflineAudioContext) {\n        let currentBuffer = buffer;\n\n        for (const renderer of this.renderers.sort((a, b) => a.order - b.order)) {\n            if (renderer.isEnabled()) {\n                currentBuffer = await renderer.renderAudio(outputContext, currentBuffer);\n            }\n        }\n\n        return currentBuffer;\n    }\n}\n","import { inject, injectable, injectFromBase, postConstruct } from \"inversify\";\nimport { TYPES } from \"../inversify.types\";\nimport { Recorder } from \"../recorder/Recorder\";\nimport { EventType } from \"@/model/EventTypeEnum\";\nimport AbstractAudioElement from \"@/interfaces/AbstractAudioElement\";\nimport SaveBufferOptions from \"@/model/SaveBufferOptions\";\nimport Constants from \"@/model/Constants\";\nimport RecorderWorkerMessage from \"../model/RecorderWorkerMessage\";\nimport getRecorderWorker from \"../recorder/getRecorderWorker\";\nimport SaveBufferManagerInterface from \"./interfaces/SaveBufferManagerInteface\";\nimport type BufferPlayerInterface from \"@/bufferPlayer/interfaces/BufferPlayerInterface\";\nimport type FilterManagerInterface from \"./interfaces/FilterManagerInterface\";\nimport utilFunctions from \"@/utils/Functions\";\n\n@injectable()\n@injectFromBase()\nexport default class SaveBufferManager extends AbstractAudioElement implements SaveBufferManagerInterface {\n\n    /** The filter manager */\n    private filterManager: FilterManagerInterface | undefined;\n\n    /** The audio player */\n    private bufferPlayer: BufferPlayerInterface | undefined;\n\n    /** If we are currently processing and downloading the buffer */\n    private _savingBuffer = false;\n\n    /** Callback used when saving audio */\n    private playingStoppedCallback: (() => void) | null = null;\n\n    constructor(\n        @inject(TYPES.FilterManager) filterManager: FilterManagerInterface,\n        @inject(TYPES.BufferPlayer) bufferPlayer: BufferPlayerInterface\n    ) {\n        super();\n\n        this.bufferPlayer = bufferPlayer;\n        this.filterManager = filterManager;\n    }\n\n    @postConstruct()\n    protected setup() {\n        if (this.eventEmitter) {\n            // Callback called when playing is finished\n            this.eventEmitter.on(EventType.PLAYING_FINISHED, () => {\n                if (this._savingBuffer && this.playingStoppedCallback && this.eventEmitter) {\n                    this.eventEmitter.off(EventType.PLAYING_STOPPED, this.playingStoppedCallback);\n                }\n            });\n        }\n    }\n\n    async saveBuffer(renderedBuffer: AudioBuffer | null, options?: SaveBufferOptions, recorder?: Recorder): Promise<boolean> {\n        if (this._savingBuffer) {\n            throw new Error(\"The buffer is currently saving\");\n        }\n\n        if (!this.bufferPlayer) {\n            throw new Error(\"No buffer player was found\");\n        }\n\n        this._savingBuffer = true;\n\n        let savingResult = false;\n\n        if (!this.bufferPlayer.compatibilityMode) {\n            savingResult = await this.saveBufferDirect(renderedBuffer, options);\n        } else {\n            savingResult = await this.saveBufferCompatibilityMode(options, recorder);\n        }\n\n        this._savingBuffer = false;\n\n        return savingResult;\n    }\n\n    /**\n     * Save the rendered audio to a buffer, when compatibility mode is disabled\n     * @param renderedBuffer The rendered buffer to save\n     * @param options The save options\n     * @returns A promise resolved when the audio buffer is downloaded to the user\n     */\n    private saveBufferDirect(renderedBuffer: AudioBuffer | null, options?: SaveBufferOptions): Promise<boolean> {\n        return new Promise((resolve, reject) => {\n            if (!renderedBuffer || (this.contextManager && !this.contextManager.currentContext)) {\n                reject(\"No rendered buffer or AudioContext not initialized\");\n                return;\n            }\n\n            const worker = getRecorderWorker(this.configService?.getWorkerBasePath());\n\n            if (worker) {\n                const buffer: Float32Array[] = [];\n\n                for (let i = 0; i < renderedBuffer.numberOfChannels; i++) {\n                    buffer.push(renderedBuffer.getChannelData(i));\n                }\n\n                worker.onmessage = (e: RecorderWorkerMessage) => {\n                    if (e.data.command == Constants.EXPORT_WAV_COMMAND || e.data.command == Constants.EXPORT_MP3_COMMAND) {\n                        this.downloadAudioBlob(e.data.data, options);\n                    }\n\n                    worker.terminate();\n                    this._savingBuffer = false;\n                    resolve(true);\n                };\n\n                worker.postMessage({\n                    command: Constants.INIT_COMMAND,\n                    config: {\n                        sampleRate: renderedBuffer.sampleRate,\n                        numChannels: 2,\n                        bitrate: options?.bitrate || Constants.DEFAULT_MP3_BITRATE\n                    }\n                });\n\n                worker.postMessage({\n                    command: Constants.RECORD_COMMAND,\n                    buffer\n                });\n\n                worker.postMessage({\n                    command: options?.format === \"mp3\" || Constants.DEFAULT_SAVE_FORMAT === \"mp3\" ? Constants.EXPORT_MP3_COMMAND : Constants.EXPORT_WAV_COMMAND,\n                    type: Constants.AUDIO_WAV\n                });\n            }\n        });\n    }\n\n    /**\n     * Save the rendered audio to a buffer, when compatibility mode is enabled\n     * @param options The save options - see SaveBufferOptions\n     * @returns A promise resolved when the audio buffer is downloaded to the user\n     */\n    private saveBufferCompatibilityMode(options?: SaveBufferOptions, recorder?: Recorder): Promise<boolean> {\n        return new Promise((resolve, reject) => {\n            if (!this.bufferPlayer) {\n                reject(\"No buffer player found\");\n                return;\n            }\n\n            this.bufferPlayer.start().then(() => {\n                if (!this.configService) {\n                    return reject(\"No config service found\");\n                }\n\n                if (!this.filterManager) {\n                    return reject(\"No filter manager found\");\n                }\n\n                if (!this.filterManager.currentNodes) {\n                    return reject(\"No current nodes found\");\n                }\n\n                const rec = recorder || new Recorder({\n                    bufferLen: this.configService.getBufferSize(),\n                    sampleRate: this.configService.getSampleRate(),\n                    numChannels: 2,\n                    workletBasePath: this.configService.getWorkletBasePath(),\n                    workerBasePath: this.configService.getWorkerBasePath(),\n                    mimeType: options?.format == \"mp3\" ? Constants.AUDIO_MP3 : Constants.AUDIO_WAV,\n                    bitrate: options?.bitrate || Constants.DEFAULT_MP3_BITRATE\n                });\n\n                rec.setup(this.filterManager.currentNodes.output).then(() => {\n                    rec.record();\n\n                    const finishedCallback = () => {\n                        if (this.playingStoppedCallback && this.eventEmitter) {\n                            this.eventEmitter.off(EventType.PLAYING_STOPPED, this.playingStoppedCallback);\n                        }\n\n                        rec.stop();\n\n                        const downloadBlobCallback = (blob: Blob) => {\n                            this.downloadAudioBlob(blob, options);\n\n                            this._savingBuffer = false;\n\n                            if (this.eventEmitter) {\n                                this.eventEmitter.off(EventType.PLAYING_FINISHED, finishedCallback);\n                            }\n\n                            rec.kill();\n\n                            resolve(true);\n                        };\n\n                        if (options?.format === \"mp3\" || Constants.DEFAULT_SAVE_FORMAT === \"mp3\") {\n                            rec.exportMP3(downloadBlobCallback);\n                        } else {\n                            rec.exportWAV(downloadBlobCallback);\n                        }\n                    };\n\n                    this.playingStoppedCallback = () => {\n                        rec.kill();\n\n                        this._savingBuffer = false;\n\n                        if (this.eventEmitter) {\n                            this.eventEmitter.off(EventType.PLAYING_FINISHED, finishedCallback);\n\n                            if (this.playingStoppedCallback) {\n                                this.eventEmitter.off(EventType.PLAYING_STOPPED, this.playingStoppedCallback);\n                            }\n                        }\n\n                        resolve(true);\n                    };\n\n                    if (this.eventEmitter) {\n                        this.eventEmitter.on(EventType.PLAYING_FINISHED, finishedCallback);\n                        this.eventEmitter.on(EventType.PLAYING_STOPPED, this.playingStoppedCallback);\n                    }\n                });\n            });\n        });\n    }\n\n    /**\n     * Download an audio Blob\n     * @param blob The blob\n     * @param options The save options - see SaveBufferOptions\n     */\n    private downloadAudioBlob(blob: Blob, options?: SaveBufferOptions) {\n        utilFunctions.forceDownload(blob, \"audio-\" + new Date().toISOString() + \".\" + (options?.format || Constants.DEFAULT_SAVE_FORMAT));\n    }\n\n    get savingBuffer() {\n        return this._savingBuffer;\n    }\n}\n","import { EventType } from \"../model/EventTypeEnum\";\nimport type { ConfigService } from \"./interfaces/ConfigService\";\nimport utilFunctions from \"../utils/Functions\";\nimport EventEmitter from \"../utils/EventEmitter\";\nimport BufferFetcherServiceInterface from \"./interfaces/BufferFetcherServiceInterface\";\nimport { inject, injectable } from \"inversify\";\nimport type EventEmitterInterface from \"@/utils/interfaces/EventEmitterInterface\";\nimport type AudioContextManagerInterface from \"@/audioEditor/interfaces/AudioContextManagerInterface\";\nimport { TYPES } from \"@/inversify.types\";\n\n@injectable()\nexport default class BufferFetcherService implements BufferFetcherServiceInterface {\n\n    private contextManager: AudioContextManagerInterface;\n    private buffers: Map<string, AudioBuffer> = new Map<string, AudioBuffer>();\n    private bufferErrors: string[] = [];\n    private eventEmitter: EventEmitterInterface | null;\n    private configService: ConfigService | null = null;\n\n    constructor(\n        @inject(TYPES.AudioContextManager) contextManager: AudioContextManagerInterface,\n        @inject(TYPES.ConfigService) configService: ConfigService,\n        @inject(TYPES.EventEmitter) eventEmitter?: EventEmitterInterface) {\n        this.contextManager = contextManager;\n        this.eventEmitter = eventEmitter || new EventEmitter();\n        this.configService = configService;\n    }\n\n    async fetchBuffer(bufferURI: string, force?: boolean) {\n        const realBufferURI = (this.configService ? this.configService.getSoundBasePath() : \"\") + bufferURI;\n\n        if (this.buffers.get(this.getKeyFromLocation(realBufferURI)) != null && !force) {\n            return;\n        }\n\n        this.eventEmitter?.emit(EventType.FETCHING_BUFFERS, realBufferURI);\n\n        try {\n            const response = await fetch(realBufferURI);\n\n            if (!response.ok) {\n                this.bufferErrors.push(realBufferURI);\n                this.eventEmitter?.emit(EventType.FETCHING_BUFFERS_ERROR, realBufferURI);\n                throw EventType.FETCHING_BUFFERS_ERROR;\n            } else {\n                const arrayBuffer = await response.arrayBuffer();\n\n                if (this.contextManager && this.contextManager.currentContext) {\n                    const buffer = await this.contextManager.currentContext.decodeAudioData(arrayBuffer);\n                    this.buffers.set(this.getKeyFromLocation(realBufferURI), utilFunctions.decodeBuffer(this.contextManager.currentContext, buffer));\n                }\n            }\n\n            this.eventEmitter?.emit(EventType.FINISHED_FETCHING_BUFFERS, realBufferURI);\n        } catch (e) {\n            console.error(e);\n\n            this.bufferErrors.push(realBufferURI);\n            this.eventEmitter?.emit(EventType.FETCHING_BUFFERS_ERROR, realBufferURI);\n            throw EventType.FETCHING_BUFFERS_ERROR;\n        }\n    }\n\n    async fetchAllBuffers(bufferURIs: string[]) {\n        for (const uri of bufferURIs) {\n            await this.fetchBuffer(uri);\n        }\n    }\n\n    getAudioBuffer(filename: string): AudioBuffer | undefined {\n        return this.buffers.get(this.getKeyFromLocation(filename));\n    }\n\n    async getOrFetchAudioBuffer(filename: string): Promise<AudioBuffer | undefined> {\n        if (this.getAudioBuffer(filename) == null) {\n            await this.fetchBuffer(filename);\n        }\n\n        return this.getAudioBuffer(filename);\n    }\n\n    getDownloadedBuffersList(): string[] {\n        return Array.from(this.buffers.keys());\n    }\n\n    private getKeyFromLocation(location: string) {\n        return location.substring(location.lastIndexOf(\"/\") + 1);\n    }\n\n    reset() {\n        this.buffers.clear();\n    }\n}\n","import type AudioContextManagerInterface from \"@/audioEditor/interfaces/AudioContextManagerInterface\";\nimport { EventType } from \"../model/EventTypeEnum\";\nimport EventEmitter from \"../utils/EventEmitter\";\nimport utilFunctions from \"../utils/Functions\";\nimport BufferDecoderServiceInterface from \"./interfaces/BufferDecoderServiceInterface\";\nimport { inject, injectable } from \"inversify\";\nimport type EventEmitterInterface from \"@/utils/interfaces/EventEmitterInterface\";\nimport { TYPES } from \"@/inversify.types\";\n\n@injectable()\nexport default class BufferDecoderService implements BufferDecoderServiceInterface {\n\n    private contextManager: AudioContextManagerInterface;\n    private eventEmitter: EventEmitterInterface | null;\n\n    constructor(\n        @inject(TYPES.AudioContextManager) contextManager: AudioContextManagerInterface,\n        @inject(TYPES.EventEmitter) eventEmitter?: EventEmitterInterface) {\n        this.contextManager = contextManager;\n        this.eventEmitter = eventEmitter || new EventEmitter();\n    }\n\n    async decodeBufferFromFile(file: File): Promise<AudioBuffer | null> {\n        if (this.eventEmitter) {\n            this.eventEmitter.emit(EventType.DECODING_AUDIO_FILE);\n        }\n\n        try {\n            if (this.contextManager && this.contextManager.currentContext) {\n                const buffer = await utilFunctions.loadAudioBuffer(this.contextManager.currentContext, file);\n\n                if (this.eventEmitter) {\n                    this.eventEmitter.emit(EventType.DECODED_AUDIO_FILE);\n                }\n\n                return buffer;\n            }\n        } catch (e) {\n            console.error(e);\n\n            if (this.eventEmitter) {\n                this.eventEmitter.emit(EventType.DECODED_AUDIO_FILE);\n                this.eventEmitter.emit(EventType.ERROR_DECODING_AUDIO_FILE);\n            }\n        }\n\n        return null;\n    }\n}\n","import AbstractAudioRenderer from \"./interfaces/AbstractAudioRenderer\";\nimport Constants from \"../model/Constants\";\n\nexport default class ReturnAudioRenderer extends AbstractAudioRenderer {\n\n    renderAudio(context: BaseAudioContext, buffer: AudioBuffer): Promise<AudioBuffer> {\n        const numChannels = buffer.numberOfChannels;\n        const totalFrames = context.sampleRate * buffer.duration + context.sampleRate * 2;\n        const bufferReturned = context.createBuffer(numChannels, totalFrames, context.sampleRate);\n\n        for (let channel = 0; channel < numChannels; channel++) {\n            const nowBuffering = bufferReturned.getChannelData(channel);\n            const sourceChannelData = buffer.getChannelData(channel);\n\n            for (let i = 0; i < totalFrames; i++) {\n                if (i < sourceChannelData.length) {\n                    nowBuffering[i] = sourceChannelData[sourceChannelData.length - 1 - i];\n                } else {\n                    nowBuffering[i] = 0;\n                }\n            }\n        }\n\n        return Promise.resolve(bufferReturned);\n    }\n\n    get order(): number {\n        return 0;\n    }\n\n    get id(): string {\n        return Constants.FILTERS_NAMES.RETURN_AUDIO;\n    }\n}\n","import AbstractAudioFilter from \"./interfaces/AbstractAudioFilter\";\nimport Constants from \"../model/Constants\";\nimport BassBoosterSettings from \"../model/filtersSettings/BassBoosterSettings\";\nimport { FilterSettingValue } from \"../model/filtersSettings/FilterSettings\";\nimport utilFunctions from \"../utils/Functions\";\n\nexport default class BassBoosterFilter extends AbstractAudioFilter {\n    private frequencyBooster = 200;\n    private frequencyReduce = 200;\n    private dbBooster = 20;\n    private dbReduce = 0;\n\n    getNode(context: BaseAudioContext) {\n        const bassBoostFilter = context.createBiquadFilter();\n        bassBoostFilter.type = \"lowshelf\";\n        bassBoostFilter.frequency.value = this.frequencyBooster;\n        bassBoostFilter.gain.value = this.dbBooster;\n\n        const bassBoostFilterHighFreq = context.createBiquadFilter();\n        bassBoostFilterHighFreq.type = \"highshelf\";\n        bassBoostFilterHighFreq.frequency.value = this.frequencyReduce;\n        bassBoostFilterHighFreq.gain.value = this.dbReduce;\n        bassBoostFilterHighFreq.connect(bassBoostFilter);\n\n        return {\n            input: bassBoostFilterHighFreq,\n            output: bassBoostFilter\n        };\n    }\n\n    get order(): number {\n        return 3;\n    }\n\n    get id(): string {\n        return Constants.FILTERS_NAMES.BASS_BOOST;\n    }\n\n    getSettings(): BassBoosterSettings {\n        return {\n            frequencyBooster: this.frequencyBooster,\n            frequencyReduce: this.frequencyReduce,\n            dbBooster: this.dbBooster,\n            dbReduce: this.dbReduce,\n        };\n    }\n\n    setSetting(settingId: string, value: FilterSettingValue): Promise<void> {\n        if (!utilFunctions.isSettingValueValid(value)) {\n            return Promise.resolve();\n        }\n\n        switch (settingId) {\n        case \"frequencyBooster\":\n            this.frequencyBooster = parseInt(value as string, 10);\n            break;\n        case \"frequencyReduce\":\n            this.frequencyReduce = parseInt(value as string, 10);\n            break;\n        case \"dbBooster\":\n            this.dbBooster = parseInt(value as string, 10);\n            break;\n        case \"dbReduce\":\n            this.dbReduce = parseInt(value as string, 10);\n            break;\n        }\n\n        return Promise.resolve();\n    }\n}\n","import Constants from \"../../model/Constants\";\n\nclass BitCrusherProcessor extends AudioWorkletProcessor {\n\n    private stopped = false;\n    private disabled = false;\n    private phaser: number[] | null = null;\n    private last: number[] | null = null;\n\n    constructor() {\n        super();\n        this.port.onmessage = event => {\n            switch (event.data) {\n            case \"stop\":\n                this.stop();\n                break;\n            case \"disable\":\n                this.disabled = true;\n                break;\n            case \"enable\":\n                this.disabled = false;\n                break;\n            }\n        };\n    }\n\n    static get parameterDescriptors() {\n        return [\n            { name: \"bits\", defaultValue: 16 },\n            { name: \"normFreq\", defaultValue: 0.9 },\n        ];\n    }\n\n    get defaultParameterDescriptors() {\n        return BitCrusherProcessor.parameterDescriptors;\n    }\n\n    process(inputs: Float32Array[][], outputs: Float32Array[][], parameters: Record<string, Float32Array>): boolean {\n        if (this.stopped || this.disabled) {\n            return false;\n        }\n\n        const input = inputs[0];\n        const output = outputs[0];\n\n        const step = 2 * Math.pow(1 / 2, parameters.bits[0]);\n        const currentNormFreq = (1 - parameters.normFreq[0]) / (sampleRate / 48000);\n\n        if (this.last == null) {\n            this.last = new Array(input.length).fill(0);\n        }\n\n        if (this.phaser == null) {\n            this.phaser = new Array(input.length).fill(0);\n        }\n\n        if (input && input[0]) {\n            const blockSize = input[0].length;\n\n            for (let channel = 0; channel < input.length; channel++) {\n                const inp = input[channel];\n                const out = output[channel];\n\n                if (inp && out) {\n                    for (let i = 0; i < blockSize; i++) {\n                        this.phaser[channel] += currentNormFreq;\n\n                        if (this.phaser[channel] >= 1.0) {\n                            this.phaser[channel] -= 1.0;\n                            this.last[channel] = step * Math.floor((inp[i] * (1 / step)) + 0.5);\n                        }\n\n                        out[i] = this.last[channel];\n                    }\n                }\n            }\n        }\n\n        return true;\n    }\n\n    stop() {\n        this.stopped = true;\n        this.phaser = null;\n        this.last = null;\n    }\n}\n\nregisterProcessor(Constants.WORKLET_NAMES.BITCRUSHER, BitCrusherProcessor);\n","import AbstractAudioFilterWorklet from \"./interfaces/AbstractAudioFilterWorklet\";\nimport Constants from \"../model/Constants\";\nimport BitCrusherSettings from \"../model/filtersSettings/BitCrusherSettings\";\nimport { FilterSettingValue } from \"../model/filtersSettings/FilterSettings\";\nimport \"./worklets/BitCrusher.worklet\";\nimport utilFunctions from \"../utils/Functions\";\n\nexport default class BitCrusherFilter extends AbstractAudioFilterWorklet<void> {\n    private bits = 16;\n    private normFreq = 0.9;\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    receiveEvent(message: MessageEvent<void>): void {\n        // Do nothing\n    }\n\n    get workletPath(): string {\n        return Constants.WORKLET_PATHS.BITCRUSHER;\n    }\n\n    get workletName(): string {\n        return Constants.WORKLET_NAMES.BITCRUSHER;\n    }\n\n    get order(): number {\n        return 6;\n    }\n\n    get id(): string {\n        return Constants.FILTERS_NAMES.BITCRUSHER;\n    }\n\n    getSettings(): BitCrusherSettings {\n        return {\n            bits: this.bits,\n            normFreq: this.normFreq,\n        };\n    }\n\n    setSetting(settingId: string, value: FilterSettingValue): Promise<void> {\n        if (!utilFunctions.isSettingValueValid(value)) {\n            return Promise.resolve();\n        }\n\n        switch (settingId) {\n        case \"bits\":\n            this.bits = parseInt(value as string, 10);\n            break;\n        case \"normFreq\":\n            this.normFreq = parseFloat(value as string);\n            break;\n        }\n\n        this.applyCurrentSettingsToWorklet();\n\n        return Promise.resolve();\n    }\n}\n","import AbstractAudioFilter from \"./interfaces/AbstractAudioFilter\";\nimport Constants from \"../model/Constants\";\nimport EchoSettings from \"../model/filtersSettings/EchoSettings\";\nimport { FilterSettingValue } from \"../model/filtersSettings/FilterSettings\";\nimport utilFunctions from \"../utils/Functions\";\n\nexport default class EchoFilter extends AbstractAudioFilter {\n    private delay = 0.2;\n    private gain = 0.75;\n\n    getNode(context: BaseAudioContext) {\n        const delayNode = context.createDelay(179);\n        delayNode.delayTime.value = this.delay;\n\n        const gainNode = context.createGain();\n        gainNode.gain.value = this.gain;\n\n        gainNode.connect(delayNode);\n        delayNode.connect(gainNode);\n\n        return {\n            input: gainNode,\n            output: delayNode\n        };\n    }\n\n    get order(): number {\n        return 7;\n    }\n\n    get id(): string {\n        return Constants.FILTERS_NAMES.ECHO;\n    }\n\n    getAddingTime() {\n        return 5;\n    }\n\n    getSettings(): EchoSettings {\n        return {\n            delay: this.delay,\n            gain: this.gain\n        };\n    }\n\n    setSetting(settingId: string, value: FilterSettingValue): Promise<void> {\n        if (!utilFunctions.isSettingValueValid(value)) {\n            return Promise.resolve();\n        }\n\n        switch (settingId) {\n        case \"delay\":\n            this.delay = parseFloat(value as string);\n            break;\n        case \"gain\":\n            this.gain = parseFloat(value as string);\n            break;\n        }\n\n        return Promise.resolve();\n    }\n}\n","import AbstractAudioFilter from \"./interfaces/AbstractAudioFilter\";\nimport Constants from \"../model/Constants\";\nimport HighPassSettings from \"../model/filtersSettings/HighPassSettings\";\nimport { FilterSettingValue } from \"../model/filtersSettings/FilterSettings\";\nimport utilFunctions from \"../utils/Functions\";\n\nexport default class HighPassFilter extends AbstractAudioFilter {\n    private highFrequency = 3500;\n\n    getNode(context: BaseAudioContext) {\n        const highPassFilter = context.createBiquadFilter();\n        highPassFilter.type = \"highpass\";\n        highPassFilter.frequency.value = this.highFrequency;\n\n        return {\n            input: highPassFilter,\n            output: highPassFilter\n        };\n    }\n\n    get order(): number {\n        return 4;\n    }\n\n    get id(): string {\n        return Constants.FILTERS_NAMES.HIGH_PASS;\n    }\n\n    getSettings(): HighPassSettings {\n        return {\n            highFrequency: this.highFrequency\n        };\n    }\n\n    setSetting(settingId: string, value: FilterSettingValue): Promise<void> {\n        if (!utilFunctions.isSettingValueValid(value)) {\n            return Promise.resolve();\n        }\n\n        switch (settingId) {\n        case \"highFrequency\":\n            this.highFrequency = parseInt(value as string, 10);\n            break;\n        }\n\n        return Promise.resolve();\n    }\n}\n","export default class DelayBuffer {\n    private _array: Float32Array = new Float32Array();\n    private n: number = 0;\n    private length: number = 0;\n    private readPointer: number = 0;\n    private writePointer: number = 0;\n\n    constructor(n: number) {\n        this.n = Math.floor(n);\n        this.init();\n    }\n\n    init() {\n        this._array = new Float32Array(2 * this.n);\n        this.length = this._array.length;\n        this.readPointer = 0;\n        this.writePointer = this.n - 1;\n        this._array.fill(0);\n    }\n\n    read() {\n        const value = this._array[this.readPointer % this.length];\n        this.readPointer = (this.readPointer + 1) % this.length;\n        return value;\n    }\n\n    push(v: number) {\n        this._array[this.writePointer % this.length] = v;\n        this.writePointer = (this.writePointer + 1) % this.length;\n    }\n\n    reset() {\n        this.init();\n    }\n\n    clear() {\n        this._array = new Float32Array();\n        this.length = 0;\n        this.readPointer = 0;\n        this.writePointer = 0;\n    }\n\n    sum() {\n        return this._array.reduce((a, b) => a + b, 0);\n    }\n}\n","/*\n * Copyright (C) 2019-2023 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"Simple Voice Changer\".\n *\n * \"Simple Voice Changer\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"Simple Voice Changer\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"Simple Voice Changer\".  If not, see <http://www.gnu.org/licenses/>.\n */\n// Source: https://webaudiotech.com/2016/01/21/should-your-web-audio-app-have-a-limiter/ (https://web.archive.org/web/20220519100003/https://webaudiotech.com/2016/01/21/should-your-web-audio-app-have-a-limiter/)\n// Original code: https://webaudiotech.com/sites/limiter_comparison/limiter.js\n// Additions by Eliastik (eliastiksofts.com): Stereo and multi-channel support, code simplified in one object class (Limiter), converted into AudioWorklet\nimport Constants from \"../../model/Constants\";\nimport DelayBuffer from \"../../utils/DelayBuffer\";\n\nclass LimiterProcessor extends AudioWorkletProcessor {\n\n    private delayBuffer: DelayBuffer[] = [];\n    private envelopeSamples: number[] = [];\n    private stopped = false;\n    private disabled = false;\n\n    constructor() {\n        super();\n\n        this.port.onmessage = event => {\n            switch (event.data) {\n            case \"reset\":\n                this.reset();\n                break;\n            case \"stop\":\n                this.stop();\n                break;\n            case \"disable\":\n                this.disabled = true;\n                break;\n            case \"enable\":\n                this.disabled = false;\n                break;\n            }\n        };\n    }\n\n    static get parameterDescriptors() {\n        return [\n            { name: \"preGain\", defaultValue: 0 },\n            { name: \"postGain\", defaultValue: 0 },\n            { name: \"attackTime\", defaultValue: 0 },\n            { name: \"releaseTime\", defaultValue: 3 },\n            { name: \"threshold\", defaultValue: -0.05 },\n            { name: \"lookAheadTime\", defaultValue: 0 }\n        ];\n    }\n\n    get defaultParameterDescriptors() {\n        return LimiterProcessor.parameterDescriptors;\n    }\n\n    process(inputs: Float32Array[][], outputs: Float32Array[][], parameters: Record<string, Float32Array>): boolean {\n        if (this.stopped) {\n            return false;\n        }\n\n        const inputBuffer = inputs[0];\n        const outputBuffer = outputs[0];\n\n        const envelopeData = this.applyPreGainAndComputeEnvelope(inputBuffer, outputBuffer, parameters);\n\n        this.applyLimiter(inputBuffer, outputBuffer, parameters, envelopeData);\n\n        return true;\n    }\n\n    private getEnvelope(data: Float32Array, attackTime: number, releaseTime: number, sampleRate: number, channel: number) {\n        const attackGain = Math.exp(-1 / (sampleRate * attackTime));\n        const releaseGain = Math.exp(-1 / (sampleRate * releaseTime));\n\n        const envelope = new Float32Array(data.length);\n\n        if (this.envelopeSamples[channel] == null) {\n            this.envelopeSamples[channel] = 0;\n        }\n\n        for (let i = 0; i < data.length; i++) {\n            const envIn = Math.abs(data[i]);\n\n            if (this.envelopeSamples[channel] < envIn) {\n                this.envelopeSamples[channel] = envIn + attackGain * (this.envelopeSamples[channel] - envIn);\n            } else {\n                this.envelopeSamples[channel] = envIn + releaseGain * (this.envelopeSamples[channel] - envIn);\n            }\n\n            envelope[i] = this.envelopeSamples[channel];\n        }\n\n        return envelope;\n    }\n\n    private getMaxEnvelope(envelope: Float32Array[], channels: number, index: number) {\n        let max = envelope[0][index];\n\n        for (let channel = 0; channel < channels; channel++) {\n            if (envelope[channel][index] > max) {\n                max = envelope[channel][index];\n            }\n        }\n\n        return max;\n    }\n\n    private ampToDB(value: number) {\n        return 20 * Math.log10(value);\n    }\n\n    private dBToAmp(db: number) {\n        return Math.pow(10, db / 20);\n    }\n\n    private applyPreGainAndComputeEnvelope(inputBuffer: Float32Array[], outputBuffer: Float32Array[], parameters: Record<string, Float32Array>) {\n        const preGainAmp = this.dBToAmp(parameters.preGain[0]);\n\n        const envelopeData = [];\n\n        // apply pre gain to signal\n        // compute the envelope for each channel\n        for (let channel = 0; channel < outputBuffer.length; channel++) {\n            const inp = inputBuffer[channel];\n            const out = outputBuffer[channel];\n\n            // create a delay buffer\n            if (this.delayBuffer[channel] == null) {\n                this.delayBuffer[channel] = new DelayBuffer(parameters.lookAheadTime[0] * sampleRate);\n            }\n\n            // apply pre gain to signal\n            if (inp && out) {\n                this.applyPreGain(inp, out, preGainAmp);\n            }\n\n            // compute the envelope\n            if (!this.disabled && out) {\n                envelopeData[channel] = this.getEnvelope(out, parameters.attackTime[0], parameters.releaseTime[0], sampleRate, channel);\n            }\n        }\n\n        return envelopeData;\n    }\n\n    private applyPreGain(inp: Float32Array, out: Float32Array, preGainAmp: number) {\n        for (let k = 0; k < inp.length; ++k) {\n            if (!this.disabled) {\n                out[k] = preGainAmp * inp[k];\n            } else {\n                out[k] = inp[k];\n            }\n        }\n    }\n\n    private applyLimiter(inputBuffer: Float32Array[], outputBuffer: Float32Array[], parameters: Record<string, Float32Array>, envelopeData: Float32Array[]) {\n        const postGainAmp = this.dBToAmp(parameters.postGain[0]);\n\n        for (let channel = 0; channel < outputBuffer.length; channel++) {\n            const inp = inputBuffer[channel];\n            const out = outputBuffer[channel];\n\n            if (parameters.lookAheadTime[0] > 0 && out) {\n                // write signal into buffer and read delayed signal\n                this.applyLookAheadDelay(out, channel);\n            }\n\n            // If disabled we don't apply the limitation to the audio\n            if (this.disabled) {\n                continue;\n            }\n\n            // limiter mode: slope is 1\n            const slope = 1;\n\n            if (inp && out) {\n                for (let i = 0; i < inp.length; i++) {\n                    let gainDB = slope * (parameters.threshold[0] - this.ampToDB(this.getMaxEnvelope(envelopeData, outputBuffer.length, i))); // max gain\n\n                    // is gain below zero?\n                    gainDB = Math.min(0, gainDB);\n\n                    const gainAmp = this.dBToAmp(gainDB);\n\n                    out[i] *= (gainAmp * postGainAmp);\n                }\n            }\n        }\n    }\n\n    private applyLookAheadDelay(out: Float32Array, channel: number) {\n        for (let i = 0; i < out.length; i++) {\n            this.delayBuffer[channel].push(out[i]);\n            out[i] = this.delayBuffer[channel].read();\n        }\n    }\n\n    private clearBuffers() {\n        for (let i = 0; i < this.delayBuffer.length; i++) {\n            if (this.delayBuffer[i] != null) {\n                this.delayBuffer[i].clear();\n            }\n        }\n\n        this.delayBuffer = [];\n        this.envelopeSamples = [];\n    }\n\n    private reset() {\n        this.clearBuffers();\n    }\n\n    private stop() {\n        this.clearBuffers();\n        this.stopped = true;\n    }\n}\n\nregisterProcessor(Constants.WORKLET_NAMES.LIMITER, LimiterProcessor);\n","import AbstractAudioFilterWorklet from \"./interfaces/AbstractAudioFilterWorklet\";\nimport Constants from \"../model/Constants\";\nimport LimiterSettings from \"../model/filtersSettings/LimiterSettings\";\nimport { FilterSettingValue } from \"../model/filtersSettings/FilterSettings\";\nimport \"./worklets/Limiter.worklet\";\nimport utilFunctions from \"../utils/Functions\";\n\nexport default class LimiterFilter extends AbstractAudioFilterWorklet<void> {\n\n    private preGain = 0; // dB\n    private postGain = 0; // dB\n    private attackTime = 0; // s\n    private releaseTime = 5; // s\n    private threshold = 0; // dB\n    private lookAheadTime = 0.35; // s\n\n    constructor() {\n        super();\n        this.keepCurrentNodeIfPossible = true;\n        this.setDefaultEnabled(true);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    receiveEvent(message: MessageEvent<void>): void {\n        // Do nothing\n    }\n\n    get workletPath(): string {\n        return Constants.WORKLET_PATHS.LIMITER;\n    }\n\n    get workletName(): string {\n        return Constants.WORKLET_NAMES.LIMITER;\n    }\n\n    get order(): number {\n        return 11;\n    }\n\n    get id(): string {\n        return Constants.FILTERS_NAMES.LIMITER;\n    }\n\n    getAddingTime() {\n        return this.lookAheadTime;\n    }\n\n    getSettings(): LimiterSettings {\n        return {\n            preGain: this.preGain,\n            postGain: this.postGain,\n            attackTime: this.attackTime,\n            releaseTime: this.releaseTime,\n            threshold: this.threshold,\n            lookAheadTime: this.lookAheadTime\n        };\n    }\n\n    setSetting(settingId: string, value: FilterSettingValue): Promise<void> {\n        if (!utilFunctions.isSettingValueValid(value)) {\n            return Promise.resolve();\n        }\n\n        switch (settingId) {\n        case \"preGain\":\n            this.preGain = parseFloat(value as string);\n            break;\n        case \"postGain\":\n            this.postGain = parseFloat(value as string);\n            break;\n        case \"attackTime\":\n            this.attackTime = parseFloat(value as string);\n            break;\n        case \"releaseTime\":\n            this.releaseTime = parseFloat(value as string);\n            break;\n        case \"threshold\":\n            this.threshold = parseFloat(value as string);\n            break;\n        case \"lookAheadTime\":\n            this.lookAheadTime = parseFloat(value as string);\n            break;\n        }\n\n        this.applyCurrentSettingsToWorklet();\n\n        return Promise.resolve();\n    }\n}\n","import AbstractAudioFilter from \"./interfaces/AbstractAudioFilter\";\nimport Constants from \"../model/Constants\";\nimport LowPassSettings from \"../model/filtersSettings/LowPassSettings\";\nimport { FilterSettingValue } from \"../model/filtersSettings/FilterSettings\";\nimport utilFunctions from \"../utils/Functions\";\n\nexport default class LowPassFilter extends AbstractAudioFilter {\n    private lowFrequency = 3500;\n\n    getNode(context: BaseAudioContext) {\n        const lowPassFilter = context.createBiquadFilter();\n        lowPassFilter.type = \"lowpass\";\n        lowPassFilter.frequency.value = this.lowFrequency;\n\n        return {\n            input: lowPassFilter,\n            output: lowPassFilter\n        };\n    }\n\n    get order(): number {\n        return 5;\n    }\n\n    get id(): string {\n        return Constants.FILTERS_NAMES.LOW_PASS;\n    }\n\n    getSettings(): LowPassSettings {\n        return {\n            lowFrequency: this.lowFrequency\n        };\n    }\n\n    setSetting(settingId: string, value: FilterSettingValue): Promise<void> {\n        if (!utilFunctions.isSettingValueValid(value)) {\n            return Promise.resolve();\n        }\n\n        switch (settingId) {\n        case \"lowFrequency\":\n            this.lowFrequency = parseInt(value as string, 10);\n            break;\n        }\n\n        return Promise.resolve();\n    }\n}\n","import AbstractAudioFilter from \"./interfaces/AbstractAudioFilter\";\nimport Constants from \"../model/Constants\";\nimport { ReverbEnvironment } from \"../model/ReverbEnvironment\";\nimport ReverbSettings from \"../model/filtersSettings/ReverbSettings\";\nimport GenericSettingValue from \"../model/filtersSettings/GenericSettingValue\";\nimport { FilterSettingValue } from \"../model/filtersSettings/FilterSettings\";\nimport utilFunctions from \"@/utils/Functions\";\n\nexport default class ReverbFilter extends AbstractAudioFilter {\n\n    private reverbEnvironment: ReverbEnvironment = Constants.DEFAULT_REVERB_ENVIRONMENT;\n    private reverbCustomEnvironmentAddTime = 5;\n    private customEnvironment: AudioBuffer | null = null;\n\n    getNode(context: BaseAudioContext) {\n        const convolver = context.createConvolver();\n\n        if (!this.reverbEnvironment || (this.reverbEnvironment.url == \"custom\" && !this.customEnvironment)) {\n            // Fallback to default environment otherwise\n            this.reverbEnvironment = Constants.DEFAULT_REVERB_ENVIRONMENT;\n        }\n\n        const buffer = this.getReverbBuffer(context);\n\n        if (buffer) {\n            convolver.buffer = buffer;\n        }\n\n        return {\n            input: convolver,\n            output: convolver\n        };\n    }\n\n    private getReverbBuffer(context: BaseAudioContext): AudioBuffer | undefined {\n        if (this.reverbEnvironment.url == \"custom\" && this.customEnvironment) {\n            if (this.customEnvironment.sampleRate === context.sampleRate) {\n                return this.customEnvironment;\n            }\n\n            this.reverbEnvironment = Constants.DEFAULT_REVERB_ENVIRONMENT;\n        } else if (this.bufferFetcherService) {\n            return this.bufferFetcherService.getAudioBuffer(this.reverbEnvironment.url);\n        }\n    }\n\n    get order(): number {\n        return 9;\n    }\n\n    get id(): string {\n        return Constants.FILTERS_NAMES.REVERB;\n    }\n\n    getAddingTime() {\n        const settings = this.getSettings();\n\n        if (settings && settings.reverbEnvironment) {\n            if (settings.reverbEnvironment.value != \"custom\") {\n                if (settings.reverbEnvironment.additionalData) {\n                    return settings.reverbEnvironment.additionalData.addDuration as number;\n                }\n            } else {\n                return this.reverbCustomEnvironmentAddTime;\n            }\n        }\n\n        return 0;\n    }\n\n    getSettings(): ReverbSettings {\n        if (!this.reverbEnvironment) {\n            return {\n                reverbCustomEnvironmentAddTime: this.reverbCustomEnvironmentAddTime\n            };\n        }\n\n        return {\n            reverbEnvironment: {\n                name: this.reverbEnvironment.name,\n                value: this.reverbEnvironment.url,\n                additionalData: {\n                    size: this.reverbEnvironment.size,\n                    link: this.reverbEnvironment.link,\n                    addDuration: this.reverbEnvironment.addDuration\n                }\n            },\n            downloadedBuffers: this.bufferFetcherService?.getDownloadedBuffersList(),\n            hasCustomEnvironment: Boolean(this.customEnvironment),\n            reverbCustomEnvironmentAddTime: this.reverbCustomEnvironmentAddTime\n        };\n    }\n\n    async setSetting(settingId: string, value: FilterSettingValue) {\n        if (settingId == \"reverbEnvironment\") {\n            const reverbEnvironment = value as GenericSettingValue;\n\n            if (reverbEnvironment) {\n                const url = reverbEnvironment.value;\n\n                try {\n                    if (url != \"custom\") {\n                        await this.bufferFetcherService?.fetchBuffer(url);\n                    }\n\n                    if (reverbEnvironment.additionalData) {\n                        this.reverbEnvironment = {\n                            name: reverbEnvironment.name,\n                            url,\n                            size: reverbEnvironment.additionalData.size as number,\n                            addDuration: reverbEnvironment.additionalData.addDuration as number,\n                            link: reverbEnvironment.additionalData.link as string\n                        };\n                    } else {\n                        this.reverbEnvironment = {\n                            name: reverbEnvironment.name,\n                            url,\n                            size: 0,\n                            addDuration: 0,\n                            link: \"\"\n                        };\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            }\n        } else if (settingId == \"reverbCustomEnvironmentAddTime\") {\n            if (utilFunctions.isSettingValueValid(value)) {\n                this.reverbCustomEnvironmentAddTime = parseInt(value as string, 10);\n            }\n        } else if (settingId == \"reverbCustomEnvironmentFile\") {\n            if (this.bufferDecoderService && value) {\n                this.customEnvironment = await this.bufferDecoderService.decodeBufferFromFile(value as File);\n\n                if (!this.customEnvironment) {\n                    // Fallback to default environment\n                    this.reverbEnvironment = Constants.DEFAULT_REVERB_ENVIRONMENT;\n                }\n            }\n        }\n    }\n\n    async bufferFetcherReseted() {\n        const reverbSettings = this.getSettings();\n\n        if (reverbSettings) {\n            const reverbUrl = (reverbSettings as ReverbSettings).reverbEnvironment?.value;\n\n            if (reverbUrl && reverbUrl !== \"custom\" && this.bufferFetcherService) {\n                await this.bufferFetcherService.fetchBuffer(reverbUrl);\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n","/*\n * SoundTouch JS v0.2.1 audio processing library\n * Copyright (c) Olli Parviainen\n * Copyright (c) Ryan Berdeen\n * Copyright (c) Jakub Fiala\n * Copyright (c) Steve 'Cutter' Blades\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n */\n\nclass FifoSampleBuffer {\n  constructor() {\n    this._vector = new Float32Array();\n    this._position = 0;\n    this._frameCount = 0;\n  }\n  get vector() {\n    return this._vector;\n  }\n  get position() {\n    return this._position;\n  }\n  get startIndex() {\n    return this._position * 2;\n  }\n  get frameCount() {\n    return this._frameCount;\n  }\n  get endIndex() {\n    return (this._position + this._frameCount) * 2;\n  }\n  clear() {\n    this.receive(this._frameCount);\n    this.rewind();\n  }\n  put(numFrames) {\n    this._frameCount += numFrames;\n  }\n  putSamples(samples, position, numFrames = 0) {\n    position = position || 0;\n    const sourceOffset = position * 2;\n    if (!(numFrames >= 0)) {\n      numFrames = (samples.length - sourceOffset) / 2;\n    }\n    const numSamples = numFrames * 2;\n    this.ensureCapacity(numFrames + this._frameCount);\n    const destOffset = this.endIndex;\n    this.vector.set(samples.subarray(sourceOffset, sourceOffset + numSamples), destOffset);\n    this._frameCount += numFrames;\n  }\n  putBuffer(buffer, position, numFrames = 0) {\n    position = position || 0;\n    if (!(numFrames >= 0)) {\n      numFrames = buffer.frameCount - position;\n    }\n    this.putSamples(buffer.vector, buffer.position + position, numFrames);\n  }\n  receive(numFrames) {\n    if (!(numFrames >= 0) || numFrames > this._frameCount) {\n      numFrames = this.frameCount;\n    }\n    this._frameCount -= numFrames;\n    this._position += numFrames;\n  }\n  receiveSamples(output, numFrames = 0) {\n    const numSamples = numFrames * 2;\n    const sourceOffset = this.startIndex;\n    output.set(this._vector.subarray(sourceOffset, sourceOffset + numSamples));\n    this.receive(numFrames);\n  }\n  extract(output, position = 0, numFrames = 0) {\n    const sourceOffset = this.startIndex + position * 2;\n    const numSamples = numFrames * 2;\n    output.set(this._vector.subarray(sourceOffset, sourceOffset + numSamples));\n  }\n  ensureCapacity(numFrames = 0) {\n    const minLength = parseInt(numFrames * 2);\n    if (this._vector.length < minLength) {\n      const newVector = new Float32Array(minLength);\n      newVector.set(this._vector.subarray(this.startIndex, this.endIndex));\n      this._vector = newVector;\n      this._position = 0;\n    } else {\n      this.rewind();\n    }\n  }\n  ensureAdditionalCapacity(numFrames = 0) {\n    this.ensureCapacity(this._frameCount + numFrames);\n  }\n  rewind() {\n    if (this._position > 0) {\n      this._vector.set(this._vector.subarray(this.startIndex, this.endIndex));\n      this._position = 0;\n    }\n  }\n}\n\nclass AbstractFifoSamplePipe {\n  constructor(createBuffers) {\n    if (createBuffers) {\n      this._inputBuffer = new FifoSampleBuffer();\n      this._outputBuffer = new FifoSampleBuffer();\n    } else {\n      this._inputBuffer = this._outputBuffer = null;\n    }\n  }\n  get inputBuffer() {\n    return this._inputBuffer;\n  }\n  set inputBuffer(inputBuffer) {\n    this._inputBuffer = inputBuffer;\n  }\n  get outputBuffer() {\n    return this._outputBuffer;\n  }\n  set outputBuffer(outputBuffer) {\n    this._outputBuffer = outputBuffer;\n  }\n  clear() {\n    this._inputBuffer.clear();\n    this._outputBuffer.clear();\n  }\n}\n\nclass RateTransposer extends AbstractFifoSamplePipe {\n  constructor(createBuffers) {\n    super(createBuffers);\n    this.reset();\n    this._rate = 1;\n  }\n  set rate(rate) {\n    this._rate = rate;\n  }\n  reset() {\n    this.slopeCount = 0;\n    this.prevSampleL = 0;\n    this.prevSampleR = 0;\n  }\n  clone() {\n    const result = new RateTransposer();\n    result.rate = this._rate;\n    return result;\n  }\n  process() {\n    const numFrames = this._inputBuffer.frameCount;\n    this._outputBuffer.ensureAdditionalCapacity(numFrames / this._rate + 1);\n    const numFramesOutput = this.transpose(numFrames);\n    this._inputBuffer.receive();\n    this._outputBuffer.put(numFramesOutput);\n  }\n  transpose(numFrames = 0) {\n    if (numFrames === 0) {\n      return 0;\n    }\n    const src = this._inputBuffer.vector;\n    const srcOffset = this._inputBuffer.startIndex;\n    const dest = this._outputBuffer.vector;\n    const destOffset = this._outputBuffer.endIndex;\n    let used = 0;\n    let i = 0;\n    while (this.slopeCount < 1.0) {\n      dest[destOffset + 2 * i] = (1.0 - this.slopeCount) * this.prevSampleL + this.slopeCount * src[srcOffset];\n      dest[destOffset + 2 * i + 1] = (1.0 - this.slopeCount) * this.prevSampleR + this.slopeCount * src[srcOffset + 1];\n      i = i + 1;\n      this.slopeCount += this._rate;\n    }\n    this.slopeCount -= 1.0;\n    if (numFrames !== 1) {\n      out: while (true) {\n        while (this.slopeCount > 1.0) {\n          this.slopeCount -= 1.0;\n          used = used + 1;\n          if (used >= numFrames - 1) {\n            break out;\n          }\n        }\n        const srcIndex = srcOffset + 2 * used;\n        dest[destOffset + 2 * i] = (1.0 - this.slopeCount) * src[srcIndex] + this.slopeCount * src[srcIndex + 2];\n        dest[destOffset + 2 * i + 1] = (1.0 - this.slopeCount) * src[srcIndex + 1] + this.slopeCount * src[srcIndex + 3];\n        i = i + 1;\n        this.slopeCount += this._rate;\n      }\n    }\n    this.prevSampleL = src[srcOffset + 2 * numFrames - 2];\n    this.prevSampleR = src[srcOffset + 2 * numFrames - 1];\n    return i;\n  }\n}\n\nclass FilterSupport {\n  constructor(pipe) {\n    this._pipe = pipe;\n  }\n  get pipe() {\n    return this._pipe;\n  }\n  get inputBuffer() {\n    return this._pipe.inputBuffer;\n  }\n  get outputBuffer() {\n    return this._pipe.outputBuffer;\n  }\n  fillInputBuffer(\n  ) {\n    throw new Error('fillInputBuffer() not overridden');\n  }\n  fillOutputBuffer(numFrames = 0) {\n    while (this.outputBuffer.frameCount < numFrames) {\n      const numInputFrames = 8192 * 2 - this.inputBuffer.frameCount;\n      this.fillInputBuffer(numInputFrames);\n      if (this.inputBuffer.frameCount < 8192 * 2) {\n        break;\n      }\n      this._pipe.process();\n    }\n  }\n  clear() {\n    this._pipe.clear();\n  }\n}\n\nconst noop = function () {\n  return;\n};\n\nclass SimpleFilter extends FilterSupport {\n  constructor(sourceSound, pipe, callback = noop) {\n    super(pipe);\n    this.callback = callback;\n    this.sourceSound = sourceSound;\n    this.historyBufferSize = 22050;\n    this._sourcePosition = 0;\n    this.outputBufferPosition = 0;\n    this._position = 0;\n  }\n  get position() {\n    return this._position;\n  }\n  set position(position) {\n    if (position > this._position) {\n      throw new RangeError('New position may not be greater than current position');\n    }\n    const newOutputBufferPosition = this.outputBufferPosition - (this._position - position);\n    if (newOutputBufferPosition < 0) {\n      throw new RangeError('New position falls outside of history buffer');\n    }\n    this.outputBufferPosition = newOutputBufferPosition;\n    this._position = position;\n  }\n  get sourcePosition() {\n    return this._sourcePosition;\n  }\n  set sourcePosition(sourcePosition) {\n    this.clear();\n    this._sourcePosition = sourcePosition;\n  }\n  onEnd() {\n    this.callback();\n  }\n  fillInputBuffer(numFrames = 0) {\n    const samples = new Float32Array(numFrames * 2);\n    const numFramesExtracted = this.sourceSound.extract(samples, numFrames, this._sourcePosition);\n    this._sourcePosition += numFramesExtracted;\n    this.inputBuffer.putSamples(samples, 0, numFramesExtracted);\n  }\n  extract(target, numFrames = 0) {\n    this.fillOutputBuffer(this.outputBufferPosition + numFrames);\n    const numFramesExtracted = Math.min(numFrames, this.outputBuffer.frameCount - this.outputBufferPosition);\n    this.outputBuffer.extract(target, this.outputBufferPosition, numFramesExtracted);\n    const currentFrames = this.outputBufferPosition + numFramesExtracted;\n    this.outputBufferPosition = Math.min(this.historyBufferSize, currentFrames);\n    this.outputBuffer.receive(Math.max(currentFrames - this.historyBufferSize, 0));\n    this._position += numFramesExtracted;\n    return numFramesExtracted;\n  }\n  handleSampleData(event) {\n    this.extract(event.data, 4096);\n  }\n  clear() {\n    super.clear();\n    this.outputBufferPosition = 0;\n  }\n}\n\nconst USE_AUTO_SEQUENCE_LEN = 0;\nconst DEFAULT_SEQUENCE_MS = USE_AUTO_SEQUENCE_LEN;\nconst USE_AUTO_SEEKWINDOW_LEN = 0;\nconst DEFAULT_SEEKWINDOW_MS = USE_AUTO_SEEKWINDOW_LEN;\nconst DEFAULT_OVERLAP_MS = 8;\nconst _SCAN_OFFSETS = [[124, 186, 248, 310, 372, 434, 496, 558, 620, 682, 744, 806, 868, 930, 992, 1054, 1116, 1178, 1240, 1302, 1364, 1426, 1488, 0], [-100, -75, -50, -25, 25, 50, 75, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-20, -15, -10, -5, 5, 10, 15, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-4, -3, -2, -1, 1, 2, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]];\nconst AUTOSEQ_TEMPO_LOW = 0.25;\nconst AUTOSEQ_TEMPO_TOP = 4.0;\nconst AUTOSEQ_AT_MIN = 125.0;\nconst AUTOSEQ_AT_MAX = 50.0;\nconst AUTOSEQ_K = (AUTOSEQ_AT_MAX - AUTOSEQ_AT_MIN) / (AUTOSEQ_TEMPO_TOP - AUTOSEQ_TEMPO_LOW);\nconst AUTOSEQ_C = AUTOSEQ_AT_MIN - AUTOSEQ_K * AUTOSEQ_TEMPO_LOW;\nconst AUTOSEEK_AT_MIN = 25.0;\nconst AUTOSEEK_AT_MAX = 15.0;\nconst AUTOSEEK_K = (AUTOSEEK_AT_MAX - AUTOSEEK_AT_MIN) / (AUTOSEQ_TEMPO_TOP - AUTOSEQ_TEMPO_LOW);\nconst AUTOSEEK_C = AUTOSEEK_AT_MIN - AUTOSEEK_K * AUTOSEQ_TEMPO_LOW;\nclass Stretch extends AbstractFifoSamplePipe {\n  constructor(createBuffers) {\n    super(createBuffers);\n    this._quickSeek = true;\n    this.midBufferDirty = false;\n    this.midBuffer = null;\n    this.overlapLength = 0;\n    this.autoSeqSetting = true;\n    this.autoSeekSetting = true;\n    this._tempo = 1;\n    this.setParameters(44100, DEFAULT_SEQUENCE_MS, DEFAULT_SEEKWINDOW_MS, DEFAULT_OVERLAP_MS);\n  }\n  clear() {\n    super.clear();\n    this.clearMidBuffer();\n  }\n  clearMidBuffer() {\n    if (this.midBufferDirty) {\n      this.midBufferDirty = false;\n      this.midBuffer = null;\n    }\n  }\n  setParameters(sampleRate, sequenceMs, seekWindowMs, overlapMs) {\n    if (sampleRate > 0) {\n      this.sampleRate = sampleRate;\n    }\n    if (overlapMs > 0) {\n      this.overlapMs = overlapMs;\n    }\n    if (sequenceMs > 0) {\n      this.sequenceMs = sequenceMs;\n      this.autoSeqSetting = false;\n    } else {\n      this.autoSeqSetting = true;\n    }\n    if (seekWindowMs > 0) {\n      this.seekWindowMs = seekWindowMs;\n      this.autoSeekSetting = false;\n    } else {\n      this.autoSeekSetting = true;\n    }\n    this.calculateSequenceParameters();\n    this.calculateOverlapLength(this.overlapMs);\n    this.tempo = this._tempo;\n  }\n  set tempo(newTempo) {\n    let intskip;\n    this._tempo = newTempo;\n    this.calculateSequenceParameters();\n    this.nominalSkip = this._tempo * (this.seekWindowLength - this.overlapLength);\n    this.skipFract = 0;\n    intskip = Math.floor(this.nominalSkip + 0.5);\n    this.sampleReq = Math.max(intskip + this.overlapLength, this.seekWindowLength) + this.seekLength;\n  }\n  get tempo() {\n    return this._tempo;\n  }\n  get inputChunkSize() {\n    return this.sampleReq;\n  }\n  get outputChunkSize() {\n    return this.overlapLength + Math.max(0, this.seekWindowLength - 2 * this.overlapLength);\n  }\n  calculateOverlapLength(overlapInMsec = 0) {\n    let newOvl;\n    newOvl = this.sampleRate * overlapInMsec / 1000;\n    newOvl = newOvl < 16 ? 16 : newOvl;\n    newOvl -= newOvl % 8;\n    this.overlapLength = newOvl;\n    this.refMidBuffer = new Float32Array(this.overlapLength * 2);\n    this.midBuffer = new Float32Array(this.overlapLength * 2);\n  }\n  checkLimits(x, mi, ma) {\n    return x < mi ? mi : x > ma ? ma : x;\n  }\n  calculateSequenceParameters() {\n    let seq;\n    let seek;\n    if (this.autoSeqSetting) {\n      seq = AUTOSEQ_C + AUTOSEQ_K * this._tempo;\n      seq = this.checkLimits(seq, AUTOSEQ_AT_MAX, AUTOSEQ_AT_MIN);\n      this.sequenceMs = Math.floor(seq + 0.5);\n    }\n    if (this.autoSeekSetting) {\n      seek = AUTOSEEK_C + AUTOSEEK_K * this._tempo;\n      seek = this.checkLimits(seek, AUTOSEEK_AT_MAX, AUTOSEEK_AT_MIN);\n      this.seekWindowMs = Math.floor(seek + 0.5);\n    }\n    this.seekWindowLength = Math.floor(this.sampleRate * this.sequenceMs / 1000);\n    this.seekLength = Math.floor(this.sampleRate * this.seekWindowMs / 1000);\n  }\n  set quickSeek(enable) {\n    this._quickSeek = enable;\n  }\n  clone() {\n    const result = new Stretch();\n    result.tempo = this._tempo;\n    result.setParameters(this.sampleRate, this.sequenceMs, this.seekWindowMs, this.overlapMs);\n    return result;\n  }\n  seekBestOverlapPosition() {\n    return this._quickSeek ? this.seekBestOverlapPositionStereoQuick() : this.seekBestOverlapPositionStereo();\n  }\n  seekBestOverlapPositionStereo() {\n    let bestOffset;\n    let bestCorrelation;\n    let correlation;\n    let i = 0;\n    this.preCalculateCorrelationReferenceStereo();\n    bestOffset = 0;\n    bestCorrelation = Number.MIN_VALUE;\n    for (; i < this.seekLength; i = i + 1) {\n      correlation = this.calculateCrossCorrelationStereo(2 * i, this.refMidBuffer);\n      if (correlation > bestCorrelation) {\n        bestCorrelation = correlation;\n        bestOffset = i;\n      }\n    }\n    return bestOffset;\n  }\n  seekBestOverlapPositionStereoQuick() {\n    let bestOffset;\n    let bestCorrelation;\n    let correlation;\n    let scanCount = 0;\n    let correlationOffset;\n    let tempOffset;\n    this.preCalculateCorrelationReferenceStereo();\n    bestCorrelation = Number.MIN_VALUE;\n    bestOffset = 0;\n    correlationOffset = 0;\n    tempOffset = 0;\n    for (; scanCount < 4; scanCount = scanCount + 1) {\n      let j = 0;\n      while (_SCAN_OFFSETS[scanCount][j]) {\n        tempOffset = correlationOffset + _SCAN_OFFSETS[scanCount][j];\n        if (tempOffset >= this.seekLength) {\n          break;\n        }\n        correlation = this.calculateCrossCorrelationStereo(2 * tempOffset, this.refMidBuffer);\n        if (correlation > bestCorrelation) {\n          bestCorrelation = correlation;\n          bestOffset = tempOffset;\n        }\n        j = j + 1;\n      }\n      correlationOffset = bestOffset;\n    }\n    return bestOffset;\n  }\n  preCalculateCorrelationReferenceStereo() {\n    let i = 0;\n    let context;\n    let temp;\n    for (; i < this.overlapLength; i = i + 1) {\n      temp = i * (this.overlapLength - i);\n      context = i * 2;\n      this.refMidBuffer[context] = this.midBuffer[context] * temp;\n      this.refMidBuffer[context + 1] = this.midBuffer[context + 1] * temp;\n    }\n  }\n  calculateCrossCorrelationStereo(mixingPosition, compare) {\n    const mixing = this._inputBuffer.vector;\n    mixingPosition += this._inputBuffer.startIndex;\n    let correlation = 0;\n    let i = 2;\n    const calcLength = 2 * this.overlapLength;\n    let mixingOffset;\n    for (; i < calcLength; i = i + 2) {\n      mixingOffset = i + mixingPosition;\n      correlation += mixing[mixingOffset] * compare[i] + mixing[mixingOffset + 1] * compare[i + 1];\n    }\n    return correlation;\n  }\n  overlap(overlapPosition) {\n    this.overlapStereo(2 * overlapPosition);\n  }\n  overlapStereo(inputPosition) {\n    const input = this._inputBuffer.vector;\n    inputPosition += this._inputBuffer.startIndex;\n    const output = this._outputBuffer.vector;\n    const outputPosition = this._outputBuffer.endIndex;\n    let i = 0;\n    let context;\n    let tempFrame;\n    const frameScale = 1 / this.overlapLength;\n    let fi;\n    let inputOffset;\n    let outputOffset;\n    for (; i < this.overlapLength; i = i + 1) {\n      tempFrame = (this.overlapLength - i) * frameScale;\n      fi = i * frameScale;\n      context = 2 * i;\n      inputOffset = context + inputPosition;\n      outputOffset = context + outputPosition;\n      output[outputOffset + 0] = input[inputOffset + 0] * fi + this.midBuffer[context + 0] * tempFrame;\n      output[outputOffset + 1] = input[inputOffset + 1] * fi + this.midBuffer[context + 1] * tempFrame;\n    }\n  }\n  process() {\n    let offset;\n    let temp;\n    let overlapSkip;\n    if (this.midBuffer === null) {\n      if (this._inputBuffer.frameCount < this.overlapLength) {\n        return;\n      }\n      this.midBuffer = new Float32Array(this.overlapLength * 2);\n      this._inputBuffer.receiveSamples(this.midBuffer, this.overlapLength);\n    }\n    while (this._inputBuffer.frameCount >= this.sampleReq) {\n      offset = this.seekBestOverlapPosition();\n      this._outputBuffer.ensureAdditionalCapacity(this.overlapLength);\n      this.overlap(Math.floor(offset));\n      this._outputBuffer.put(this.overlapLength);\n      temp = this.seekWindowLength - 2 * this.overlapLength;\n      if (temp > 0) {\n        this._outputBuffer.putBuffer(this._inputBuffer, offset + this.overlapLength, temp);\n      }\n      const start = this._inputBuffer.startIndex + 2 * (offset + this.seekWindowLength - this.overlapLength);\n      this.midBuffer.set(this._inputBuffer.vector.subarray(start, start + 2 * this.overlapLength));\n      this.skipFract += this.nominalSkip;\n      overlapSkip = Math.floor(this.skipFract);\n      this.skipFract -= overlapSkip;\n      this._inputBuffer.receive(overlapSkip);\n    }\n  }\n}\n\nconst testFloatEqual = function (a, b) {\n  return (a > b ? a - b : b - a) > 1e-10;\n};\n\nclass SoundTouch {\n  constructor() {\n    this.transposer = new RateTransposer(false);\n    this.stretch = new Stretch(false);\n    this._inputBuffer = new FifoSampleBuffer();\n    this._intermediateBuffer = new FifoSampleBuffer();\n    this._outputBuffer = new FifoSampleBuffer();\n    this._rate = 0;\n    this._tempo = 0;\n    this.virtualPitch = 1.0;\n    this.virtualRate = 1.0;\n    this.virtualTempo = 1.0;\n    this.calculateEffectiveRateAndTempo();\n  }\n  clear() {\n    this.transposer.clear();\n    this.stretch.clear();\n  }\n  clone() {\n    const result = new SoundTouch();\n    result.rate = this.rate;\n    result.tempo = this.tempo;\n    return result;\n  }\n  get rate() {\n    return this._rate;\n  }\n  set rate(rate) {\n    this.virtualRate = rate;\n    this.calculateEffectiveRateAndTempo();\n  }\n  set rateChange(rateChange) {\n    this._rate = 1.0 + 0.01 * rateChange;\n  }\n  get tempo() {\n    return this._tempo;\n  }\n  set tempo(tempo) {\n    this.virtualTempo = tempo;\n    this.calculateEffectiveRateAndTempo();\n  }\n  set tempoChange(tempoChange) {\n    this.tempo = 1.0 + 0.01 * tempoChange;\n  }\n  set pitch(pitch) {\n    this.virtualPitch = pitch;\n    this.calculateEffectiveRateAndTempo();\n  }\n  set pitchOctaves(pitchOctaves) {\n    this.pitch = Math.exp(0.69314718056 * pitchOctaves);\n    this.calculateEffectiveRateAndTempo();\n  }\n  set pitchSemitones(pitchSemitones) {\n    this.pitchOctaves = pitchSemitones / 12.0;\n  }\n  get inputBuffer() {\n    return this._inputBuffer;\n  }\n  get outputBuffer() {\n    return this._outputBuffer;\n  }\n  calculateEffectiveRateAndTempo() {\n    const previousTempo = this._tempo;\n    const previousRate = this._rate;\n    this._tempo = this.virtualTempo / this.virtualPitch;\n    this._rate = this.virtualRate * this.virtualPitch;\n    if (testFloatEqual(this._tempo, previousTempo)) {\n      this.stretch.tempo = this._tempo;\n    }\n    if (testFloatEqual(this._rate, previousRate)) {\n      this.transposer.rate = this._rate;\n    }\n    if (this._rate > 1.0) {\n      if (this._outputBuffer != this.transposer.outputBuffer) {\n        this.stretch.inputBuffer = this._inputBuffer;\n        this.stretch.outputBuffer = this._intermediateBuffer;\n        this.transposer.inputBuffer = this._intermediateBuffer;\n        this.transposer.outputBuffer = this._outputBuffer;\n      }\n    } else {\n      if (this._outputBuffer != this.stretch.outputBuffer) {\n        this.transposer.inputBuffer = this._inputBuffer;\n        this.transposer.outputBuffer = this._intermediateBuffer;\n        this.stretch.inputBuffer = this._intermediateBuffer;\n        this.stretch.outputBuffer = this._outputBuffer;\n      }\n    }\n  }\n  process() {\n    if (this._rate > 1.0) {\n      this.stretch.process();\n      this.transposer.process();\n    } else {\n      this.transposer.process();\n      this.stretch.process();\n    }\n  }\n}\n\nclass WebAudioBufferSource {\n  constructor(buffer) {\n    this.buffer = buffer;\n    this._position = 0;\n  }\n  get dualChannel() {\n    return this.buffer.numberOfChannels > 1;\n  }\n  get position() {\n    return this._position;\n  }\n  set position(value) {\n    this._position = value;\n  }\n  extract(target, numFrames = 0, position = 0) {\n    this.position = position;\n    let left = this.buffer.getChannelData(0);\n    let right = this.dualChannel ? this.buffer.getChannelData(1) : this.buffer.getChannelData(0);\n    let i = 0;\n    for (; i < numFrames; i++) {\n      target[i * 2] = left[i + position];\n      target[i * 2 + 1] = right[i + position];\n    }\n    return Math.min(numFrames, left.length - position);\n  }\n}\n\nconst getWebAudioNode = function (context, filter, sourcePositionCallback = noop, bufferSize = 4096) {\n  const node = context.createScriptProcessor(bufferSize, 2, 2);\n  const samples = new Float32Array(bufferSize * 2);\n  node.onaudioprocess = event => {\n    let left = event.outputBuffer.getChannelData(0);\n    let right = event.outputBuffer.getChannelData(1);\n    let framesExtracted = filter.extract(samples, bufferSize);\n    sourcePositionCallback(filter.sourcePosition);\n    if (framesExtracted === 0) {\n      filter.onEnd();\n    }\n    let i = 0;\n    for (; i < framesExtracted; i++) {\n      left[i] = samples[i * 2];\n      right[i] = samples[i * 2 + 1];\n    }\n  };\n  return node;\n};\n\nconst pad = function (n, width, z) {\n  z = z || '0';\n  n = n + '';\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n};\nconst minsSecs = function (secs) {\n  const mins = Math.floor(secs / 60);\n  const seconds = secs - mins * 60;\n  return `${mins}:${pad(parseInt(seconds), 2)}`;\n};\n\nconst onUpdate = function (sourcePosition) {\n  const currentTimePlayed = this.timePlayed;\n  const sampleRate = this.sampleRate;\n  this.sourcePosition = sourcePosition;\n  this.timePlayed = sourcePosition / sampleRate;\n  if (currentTimePlayed !== this.timePlayed) {\n    const timePlayed = new CustomEvent('play', {\n      detail: {\n        timePlayed: this.timePlayed,\n        formattedTimePlayed: this.formattedTimePlayed,\n        percentagePlayed: this.percentagePlayed\n      }\n    });\n    this._node.dispatchEvent(timePlayed);\n  }\n};\nclass PitchShifter {\n  constructor(context, buffer, bufferSize, onEnd = noop) {\n    this._soundtouch = new SoundTouch();\n    const source = new WebAudioBufferSource(buffer);\n    this.timePlayed = 0;\n    this.sourcePosition = 0;\n    this._filter = new SimpleFilter(source, this._soundtouch, onEnd);\n    this._node = getWebAudioNode(context, this._filter, sourcePostion => onUpdate.call(this, sourcePostion), bufferSize);\n    this.tempo = 1;\n    this.rate = 1;\n    this.duration = buffer.duration;\n    this.sampleRate = context.sampleRate;\n    this.listeners = [];\n  }\n  get formattedDuration() {\n    return minsSecs(this.duration);\n  }\n  get formattedTimePlayed() {\n    return minsSecs(this.timePlayed);\n  }\n  get percentagePlayed() {\n    return 100 * this._filter.sourcePosition / (this.duration * this.sampleRate);\n  }\n  set percentagePlayed(perc) {\n    this._filter.sourcePosition = parseInt(perc * this.duration * this.sampleRate);\n    this.sourcePosition = this._filter.sourcePosition;\n    this.timePlayed = this.sourcePosition / this.sampleRate;\n  }\n  get node() {\n    return this._node;\n  }\n  set pitch(pitch) {\n    this._soundtouch.pitch = pitch;\n  }\n  set pitchSemitones(semitone) {\n    this._soundtouch.pitchSemitones = semitone;\n  }\n  set rate(rate) {\n    this._soundtouch.rate = rate;\n  }\n  set tempo(tempo) {\n    this._soundtouch.tempo = tempo;\n  }\n  connect(toNode) {\n    this._node.connect(toNode);\n  }\n  disconnect() {\n    this._node.disconnect();\n  }\n  on(eventName, cb) {\n    this.listeners.push({\n      name: eventName,\n      cb: cb\n    });\n    this._node.addEventListener(eventName, event => cb(event.detail));\n  }\n  off(eventName = null) {\n    let listeners = this.listeners;\n    if (eventName) {\n      listeners = listeners.filter(e => e.name === eventName);\n    }\n    listeners.forEach(e => {\n      this._node.removeEventListener(e.name, event => e.cb(event.detail));\n    });\n  }\n}\n\nexport { AbstractFifoSamplePipe, PitchShifter, RateTransposer, SimpleFilter, SoundTouch, Stretch, WebAudioBufferSource, getWebAudioNode };\n//# sourceMappingURL=soundtouch.js.map\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n//@ts-ignore\nimport { PitchShifter } from \"soundtouchjs\";\nimport Constants from \"../model/Constants\";\nimport AbstractAudioFilterWorklet from \"./interfaces/AbstractAudioFilterWorklet\";\nimport AudioFilterEntrypointInterface from \"./interfaces/AudioFilterEntrypointInterface\";\nimport { AudioFilterNodes } from \"../model/AudioNodes\";\nimport SoundtouchSettings from \"../model/filtersSettings/SoundtouchSettings\";\nimport { FilterSettingValue } from \"../model/filtersSettings/FilterSettings\";\nimport utilFunctions from \"../utils/Functions\";\n\nexport default class SoundtouchWrapperFilter extends AbstractAudioFilterWorklet<void> implements AudioFilterEntrypointInterface {\n\n    private speedAudio = Constants.SOUNDTOUCH_DEFAULT_SPEED;\n    private frequencyAudio = Constants.SOUNDTOUCH_DEFAULT_FREQUENCY;\n    private pitchSemitones = Constants.SOUNDTOUCH_DEFAULT_PITCH_SEMITONES;\n    private currentSpeedAudio = Constants.SOUNDTOUCH_DEFAULT_SPEED;\n    private currentPitchShifter: PitchShifter;\n    private currentBufferSource: AudioBufferSourceNode | null = null;\n    private isOfflineMode = false;\n\n    constructor() {\n        super();\n        this.setDefaultEnabled(true);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    receiveEvent(message: MessageEvent<void>): void {\n        // Do nothing\n    }\n\n    get workletPath(): string {\n        return Constants.WORKLET_PATHS.SOUNDTOUCH;\n    }\n\n    get workletName(): string {\n        return Constants.WORKLET_NAMES.SOUNDTOUCH;\n    }\n\n    getEntrypointNode(context: BaseAudioContext, buffer: AudioBuffer, offline: boolean): Promise<AudioFilterNodes> {\n        this.isOfflineMode = offline;\n\n        this.cleanUpOldNodes();\n\n        // In offline (compatibility) mode\n        const { isWorklet, renderWithSoundtouch } = this.getCurrentRenderingMode();\n\n        if (renderWithSoundtouch) { // Rendering with soundtouch enabled\n            if (isWorklet && utilFunctions.isAudioWorkletCompatible(context)) {\n                return this.renderWithWorklet(buffer, context);\n            }\n\n            if (offline) {\n                return this.renderWithScriptProcessorNode(buffer, context);\n            }\n\n            // Not in offline mode: get classic soundtouch script processor node\n            this.currentPitchShifter = this.getSoundtouchScriptProcessorNode(buffer, context);\n            this.updateState();\n\n            return Promise.resolve({\n                input: this.currentPitchShifter,\n                output: this.currentPitchShifter\n            });\n        }\n\n        // Rendering with soundtouch disabled\n        // Just return an audio buffer source node\n        const bufferSource = this.constructBufferSourceNode(context, buffer);\n\n        return Promise.resolve({\n            input: bufferSource,\n            output: bufferSource\n        });\n    }\n\n    private getSoundtouchScriptProcessorNode(buffer: AudioBuffer, context: BaseAudioContext): AudioNode {\n        return new PitchShifter(context, buffer, Constants.SOUNDTOUCH_PITCH_SHIFTER_BUFFER_SIZE);\n    }\n\n    /**\n     * Setup an audio buffer source from the audio buffer\n     * @param context The audio context\n     * @param buffer The buffer\n     * @returns The AudioBufferSourceNode\n     */\n    private constructBufferSourceNode(context: BaseAudioContext, buffer: AudioBuffer) {\n        const bufferSource = context.createBufferSource();\n        bufferSource.buffer = buffer;\n        bufferSource.start();\n\n        this.currentBufferSource = bufferSource;\n\n        return bufferSource;\n    }\n\n    /** Cleanup old nodes (worklets, pitch shifter) */\n    private cleanUpOldNodes() {\n        if (this.currentPitchShifter) {\n            this.currentPitchShifter.disconnect();\n            this.currentPitchShifter._filter = null;\n            this.currentPitchShifter = null;\n        }\n\n        if (this.currentBufferSource) {\n            this.currentBufferSource.disconnect();\n            this.currentBufferSource = null;\n        }\n    }\n\n    /**\n     * Use script processor node (deprecated) to render the audio buffer with Soundtouch, according to the current settings.\n     * Not working on Firefox\n     * @param buffer Audio buffer\n     * @param context Audio context\n     * @returns A promise resolving to audio nodes with the rendered audio as a buffer source\n     */\n    private async renderWithScriptProcessorNode(buffer: AudioBuffer, context: BaseAudioContext): Promise<AudioFilterNodes> {\n        const durationAudio = utilFunctions.calcAudioDuration(buffer, this.speedAudio);\n\n        if (this.contextManager) {\n            const offlineContext = this.contextManager.createOfflineAudioContext(2, context.sampleRate * durationAudio, context.sampleRate);\n\n            this.currentPitchShifter = this.getSoundtouchScriptProcessorNode(buffer, offlineContext);\n\n            this.updateState();\n\n            this.currentPitchShifter.connect(offlineContext.destination);\n\n            const renderedBuffer = await offlineContext.startRendering();\n\n            const bufferSourceRendered = this.constructBufferSourceNode(context, renderedBuffer);\n\n            this.currentPitchShifter.disconnect();\n\n            return {\n                input: bufferSourceRendered,\n                output: bufferSourceRendered\n            };\n        }\n\n        throw new Error(\"AudioContextManager is not available!\");\n    }\n\n    /**\n     * Use audio worklet to render the audio buffer with Soundtouch, according to the current settings.\n     * Working in Firefox and Chrome\n     * @param buffer Audio buffer\n     * @param context Audio context\n     * @returns A promise resolving to audio nodes with the rendered audio as a buffer source\n     */\n    private renderWithWorklet(buffer: AudioBuffer, context: BaseAudioContext): Promise<AudioFilterNodes> {\n        try {\n            const bufferSource = this.constructBufferSourceNode(context, buffer);\n\n            const workletNode = this.getNode(context);\n\n            // Connect the node for correct rendering\n            bufferSource.connect(workletNode.input);\n\n            // Setup pitch/speed of Soundtouch\n            this.updateState();\n\n            return Promise.resolve({\n                input: workletNode.input,\n                output: workletNode.output\n            });\n        } catch (e) {\n            // Fallback to script processor node\n            console.error(e);\n            return this.renderWithScriptProcessorNode(buffer, context);\n        }\n    }\n\n    get order(): number {\n        return 2;\n    }\n\n    get id(): string {\n        return Constants.FILTERS_NAMES.SOUNDTOUCH;\n    }\n\n    getSettings(): SoundtouchSettings {\n        return {\n            speedAudio: this.speedAudio,\n            frequencyAudio: this.frequencyAudio,\n            pitchSemitones: this.pitchSemitones\n        };\n    }\n\n    protected isAudioWorkletEnabled() {\n        if (this.configService) {\n            return this.configService.isSoundtouchAudioWorkletEnabled();\n        }\n\n        return Constants.ENABLE_SOUNDTOUCH_AUDIO_WORKLET;\n    }\n\n    private getCurrentRenderingMode() {\n        // If the settings are untouched, we don't use Soundtouch\n        const settingUntouched = this.speedAudio == Constants.SOUNDTOUCH_DEFAULT_SPEED\n            && this.frequencyAudio == Constants.SOUNDTOUCH_DEFAULT_FREQUENCY\n            && this.pitchSemitones == Constants.SOUNDTOUCH_DEFAULT_PITCH_SEMITONES;\n\n        if (this.isOfflineMode && (!this.isEnabled() || settingUntouched)) {\n            return { isWorklet: false, renderWithSoundtouch: false };\n        }\n\n        if (this.isAudioWorkletAvailable()) {\n            return { isWorklet: true, renderWithSoundtouch: true };\n        }\n\n        return { isWorklet: false, renderWithSoundtouch: true };\n    }\n\n    updateState(): void {\n        const { isWorklet, renderWithSoundtouch } = this.getCurrentRenderingMode();\n\n        this.currentSpeedAudio = 1;\n\n        let pitch = 1;\n        let tempo = 1;\n        let key = 0;\n\n        if (renderWithSoundtouch) {\n            tempo = this.speedAudio;\n            key = this.pitchSemitones;\n\n            if (isWorklet) {\n                pitch = this.frequencyAudio * (1 / this.speedAudio);\n            } else {\n                pitch = this.frequencyAudio;\n            }\n\n            this.currentSpeedAudio = this.speedAudio;\n        }\n\n        if (isWorklet) {\n            this.setWorkletSetting(\"pitch\", pitch);\n            this.setWorkletSetting(\"pitchSemitones\", key);\n\n            if (this.currentBufferSource) {\n                this.currentBufferSource.playbackRate.value = tempo;\n            }\n        } else if (this.currentPitchShifter) {\n            this.currentPitchShifter.pitch = pitch * Math.pow(2, key / 12);\n            this.currentPitchShifter.tempo = tempo;\n        }\n    }\n\n    setSetting(settingId: string, value: FilterSettingValue): Promise<void> {\n        if (!utilFunctions.isSettingValueValid(value)) {\n            return Promise.resolve();\n        }\n\n        const valueFloat = parseFloat(value as string);\n\n        switch (settingId) {\n        case \"speedAudio\":\n            this.speedAudio = valueFloat;\n            break;\n        case \"frequencyAudio\":\n            this.frequencyAudio = valueFloat;\n            break;\n        case \"pitchSemitones\":\n            this.pitchSemitones = valueFloat;\n            break;\n        default:\n            break;\n        }\n\n        this.updateState();\n\n        return Promise.resolve();\n    }\n\n    setEnabled(state: boolean): void {\n        super.setEnabled(state);\n\n        this.updateState();\n    }\n\n    getSpeed(): number {\n        return this.currentSpeedAudio;\n    }\n}\n","import AbstractAudioFilter from \"./interfaces/AbstractAudioFilter\";\nimport Constants from \"../model/Constants\";\nimport { FilterSettingValue } from \"../model/filtersSettings/FilterSettings\";\n\nexport default class TelephonizerFilter extends AbstractAudioFilter {\n\n    getNode(context: BaseAudioContext) {\n        const lpf1 = context.createBiquadFilter();\n        lpf1.type = \"lowpass\";\n        lpf1.frequency.value = 2000.0;\n        const lpf2 = context.createBiquadFilter();\n        lpf2.type = \"lowpass\";\n        lpf2.frequency.value = 2000.0;\n        const hpf1 = context.createBiquadFilter();\n        hpf1.type = \"highpass\";\n        hpf1.frequency.value = 500.0;\n        const hpf2 = context.createBiquadFilter();\n        hpf2.type = \"highpass\";\n        hpf2.frequency.value = 500.0;\n        lpf1.connect(lpf2);\n        lpf2.connect(hpf1);\n        hpf1.connect(hpf2);\n\n        return {\n            input: lpf1,\n            output: hpf2\n        };\n    }\n\n    get order(): number {\n        return 7;\n    }\n\n    get id(): string {\n        return Constants.FILTERS_NAMES.TELEPHONIZER;\n    }\n\n    getSettings() {\n        return {};\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async setSetting(settingId: string, value: FilterSettingValue) { }\n}\n","/*\n * Copyright (c) 2012 The Chromium Authors. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *    * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *    * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *    * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n/*\n * Copyright (C) 2023 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"Simple Voice Changer\".\n *\n * \"Simple Voice Changer\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"Simple Voice Changer\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"Simple Voice Changer\".  If not, see <http://www.gnu.org/licenses/>.\n */\ninterface VocoderBand {\n    frequency: number;\n}\n\nexport default class Vocoder {\n\n    private FILTER_QUALITY = 6;  // The Q value for the carrier and modulator filters\n    private FOURIER_SIZE = 4096;\n    private WAVETABLEBOOST = 40.0;\n    private SAWTOOTHBOOST = 0.40;\n    private oscillatorType = 4;   // CUSTOM\n    private oscillatorDetuneValue = 0;\n\n    private audioContext: BaseAudioContext | null = null;\n    private modulatorBuffer: AudioBuffer | undefined;\n    private carrierBuffer: AudioBuffer | null = null;\n    private modulatorNode: AudioBufferSourceNode | null = null;\n    private vocoding = false;\n\n    // These are \"placeholder\" gain nodes - because the modulator and carrier will get swapped in\n    // as they are loaded, it's easier to connect these nodes to all the bands, and the \"real\"\n    // modulator & carrier AudioBufferSourceNodes connect to these.\n    private modulatorInput: GainNode | null = null;\n    private carrierInput: GainNode | null = null;\n\n    private modulatorGain: GainNode | null = null;\n    private modulatorGainValue = 1.0;\n\n    // noise node added to the carrier signal\n    private noiseBuffer: AudioBuffer | null = null;\n    private noiseNode: AudioBufferSourceNode | null = null;\n    private noiseGain: GainNode | null = null;\n    private noiseGainValue = 0.2;\n\n    // Carrier sample gain\n    private carrierSampleNode: AudioBufferSourceNode | null = null;\n    private carrierSampleGain: GainNode | null = null;\n    private carrierSampleGainValue = 0.0;\n\n    // Carrier Synth oscillator stuff\n    private oscillatorNode: OscillatorNode | null = null;\n    private oscillatorGain: GainNode | null = null;\n    private oscillatorGainValue = 1.0;\n    private wavetable: PeriodicWave | null = null;\n    private wavetableSignalGain: GainNode | null = null;\n\n    // These are the arrays of nodes - the \"columns\" across the frequency band \"rows\"\n    private modFilterBands: BiquadFilterNode[] | null = null;    // tuned bandpass filters\n    private modFilterPostGains: GainNode[] | null = null;  // post-filter gains.\n    private heterodynes: GainNode[] | null = null;   // gain nodes used to multiply bandpass X sine\n    private powers: number[] | null = null;      // gain nodes used to multiply prev out by itself\n    private lpFilters: BiquadFilterNode[] | null = null;   // tuned LP filters to remove doubled copy of product\n    private lpFilterPostGains: GainNode[] | null = null;   // gain nodes for tuning input to waveshapers\n    private carrierBands: BiquadFilterNode[] | null = null;  // tuned bandpass filters, same as modFilterBands but in carrier chain\n    private carrierFilterPostGains: GainNode[] | null = null;  // post-bandpass gain adjustment\n    private carrierBandGains: GainNode[] | null = null;  // these are the \"control gains\" driven by the lpFilters\n\n    private vocoderBands: VocoderBand[] | null = null;\n    private numVocoderBands: number = 0;\n\n    private hpFilterGain: GainNode | null = null;\n    private outputGain: GainNode | null = null;\n\n    // Initialization function for the page.\n    constructor(ctx: BaseAudioContext, carrierB: AudioBuffer, modulatorB?: AudioBuffer) {\n        this.audioContext = ctx;\n        this.carrierBuffer = carrierB;\n        this.modulatorBuffer = modulatorB;\n    }\n\n    init() {\n        this.generateVocoderBands(55, 7040, 28);\n        // Set up the vocoder chains\n        this.setupVocoderGraph();\n        this.vocode();\n    }\n\n    getNodes() {\n        return {\n            modulatorNode: this.modulatorNode,\n            modulatorGain: this.modulatorGain,\n            synthLevel: this.oscillatorGain,\n            noiseNode: this.noiseGain,\n            oscillatorNode: this.oscillatorNode,\n            hpFilterGain: this.hpFilterGain,\n            outputGain: this.outputGain\n        };\n    }\n\n    private shutOffCarrier() {\n        if (this.oscillatorNode && this.noiseNode && this.carrierSampleNode) {\n            this.oscillatorNode.stop(0);\n            this.oscillatorNode = null;\n            this.noiseNode.stop(0);\n            this.noiseNode = null;\n            this.carrierSampleNode.stop(0);\n            this.carrierSampleNode = null;\n        }\n    }\n\n    selectSawtooth() {\n        if (this.wavetableSignalGain) {\n            this.wavetableSignalGain.gain.value = this.SAWTOOTHBOOST;\n        }\n        if (this.oscillatorNode) {\n            this.oscillatorNode.type = \"sawtooth\";\n        }\n    }\n\n    selectWavetable() {\n        if (this.wavetableSignalGain) {\n            this.wavetableSignalGain.gain.value = this.WAVETABLEBOOST;\n        }\n        if (this.oscillatorNode && this.wavetable) {\n            this.oscillatorNode.setPeriodicWave(this.wavetable);\n        }\n        if (this.wavetableSignalGain) {\n            this.wavetableSignalGain.gain.value = this.WAVETABLEBOOST;\n        }\n    }\n\n    updateModGain(value: number) {\n        this.modulatorGainValue = value;\n        if (this.modulatorGain) {\n            this.modulatorGain.gain.value = value;\n        }\n    }\n\n    // sample-based carrier\n    updateSampleLevel(value: number) {\n        this.carrierSampleGainValue = value;\n        if (this.carrierSampleGain) {\n            this.carrierSampleGain.gain.value = value;\n        }\n    }\n\n    // noise in carrier\n    updateSynthLevel(value: number) {\n        this.oscillatorGainValue = value;\n        if (this.oscillatorGain) {\n            this.oscillatorGain.gain.value = value;\n        }\n    }\n\n    // noise in carrier\n    updateNoiseLevel(value: number) {\n        this.noiseGainValue = value;\n        if (this.noiseGain) {\n            this.noiseGain.gain.value = value;\n        }\n    }\n\n    updateDetuneValue(value: number) {\n        this.oscillatorDetuneValue = value;\n        if (this.oscillatorNode) {\n            this.oscillatorNode.detune.value = value;\n        }\n    }\n\n    // this will algorithmically re-calculate vocoder bands, distributing evenly\n    // from startFreq to endFreq, splitting evenly (logarhythmically) into a given numBands.\n    // The function places this info into the global vocoderBands and numVocoderBands letiables.\n    private generateVocoderBands(startFreq: number, endFreq: number, numBands: number) {\n        // Remember: 1200 cents in octave, 100 cents per semitone\n\n        const totalRangeInCents = 1200 * Math.log(endFreq / startFreq) / Math.LN2;\n        const centsPerBand = totalRangeInCents / numBands;\n        const scale = Math.pow(2, centsPerBand / 1200);  // This is the scaling for successive bands\n\n        this.vocoderBands = [];\n        let currentFreq = startFreq;\n\n        for (let i = 0; i < numBands; i++) {\n            this.vocoderBands[i] = { frequency: currentFreq };\n            //console.log( \"Band \" + i + \" centered at \" + currentFreq + \"Hz\" );\n            currentFreq = currentFreq * scale;\n        }\n\n        this.numVocoderBands = numBands;\n    }\n\n    private loadNoiseBuffer() {  // create a 5-second buffer of noise\n        if (!this.audioContext) {\n            return;\n        }\n\n        const lengthInSamples = 5 * this.audioContext.sampleRate;\n        this.noiseBuffer = this.audioContext.createBuffer(1, lengthInSamples, this.audioContext.sampleRate);\n        const bufferData = this.noiseBuffer.getChannelData(0);\n\n        for (let i = 0; i < lengthInSamples; ++i) {\n            bufferData[i] = (2 * Math.random() - 1);  // -1 to +1\n        }\n    }\n\n    private initBandpassFilters() {\n        if (!this.audioContext) {\n            return;\n        }\n\n        // When this function is called, the carrierNode and modulatorAnalyser\n        // may not already be created.  Create placeholder nodes for them.\n        this.modulatorInput = this.audioContext.createGain();\n        this.carrierInput = this.audioContext.createGain();\n\n        if (this.modFilterBands == null) {\n            this.modFilterBands = [];\n        }\n\n        if (this.modFilterPostGains == null) {\n            this.modFilterPostGains = [];\n        }\n\n        if (this.heterodynes == null) {\n            this.heterodynes = [];\n        }\n\n        if (this.powers == null) {\n            this.powers = [];\n        }\n\n        if (this.lpFilters == null) {\n            this.lpFilters = [];\n        }\n\n        if (this.lpFilterPostGains == null) {\n            this.lpFilterPostGains = [];\n        }\n\n        if (this.carrierBands == null) {\n            this.carrierBands = [];\n        }\n\n        if (this.carrierFilterPostGains == null) {\n            this.carrierFilterPostGains = [];\n        }\n\n        if (this.carrierBandGains == null) {\n            this.carrierBandGains = [];\n        }\n\n        const waveShaperCurve = new Float32Array(65536);\n        // Populate with a \"curve\" that does an abs()\n        const n = 65536;\n        const n2 = n / 2;\n        let x;\n\n        for (let i = 0; i < n2; ++i) {\n            x = i / n2;\n\n            waveShaperCurve[n2 + i] = x;\n            waveShaperCurve[n2 - i - 1] = x;\n        }\n\n        // Set up a high-pass filter to add back in the fricatives, etc.\n        // (this isn't used by default in the \"production\" version, as I hid the slider)\n        const hpFilter = this.audioContext.createBiquadFilter();\n        hpFilter.type = \"highpass\";\n        hpFilter.frequency.value = 8000; // or use vocoderBands[numVocoderBands-1].frequency;\n        hpFilter.Q.value = 1; //  no peaking\n        this.modulatorInput.connect(hpFilter);\n\n        this.hpFilterGain = this.audioContext.createGain();\n        this.hpFilterGain.gain.value = 0.0;\n\n        hpFilter.connect(this.hpFilterGain);\n\n        if (this.modulatorBuffer) {\n            this.hpFilterGain.connect(this.audioContext.destination);\n        }\n\n        //clear the arrays\n        this.modFilterBands.length = 0;\n        this.modFilterPostGains.length = 0;\n        this.heterodynes.length = 0;\n        this.powers.length = 0;\n        this.lpFilters.length = 0;\n        this.lpFilterPostGains.length = 0;\n        this.carrierBands.length = 0;\n        this.carrierFilterPostGains.length = 0;\n        this.carrierBandGains.length = 0;\n\n        this.outputGain = this.audioContext.createGain();\n\n        if (this.modulatorBuffer) {\n            this.outputGain.connect(this.audioContext.destination);\n        }\n\n        const rectifierCurve = new Float32Array(65536);\n        for (let i = -32768; i < 32768; i++) {\n            rectifierCurve[i + 32768] = ((i > 0) ? i : -i) / 32768;\n        }\n\n        for (let i = 0; i < this.numVocoderBands; i++) {\n            // CREATE THE MODULATOR CHAIN\n            // create the bandpass filter in the modulator chain\n            const modulatorFilter = this.audioContext.createBiquadFilter();\n            modulatorFilter.type = \"bandpass\";  // Bandpass filter\n            if (this.vocoderBands) {\n                modulatorFilter.frequency.value = this.vocoderBands[i].frequency;\n            }\n            modulatorFilter.Q.value = this.FILTER_QUALITY; //  initial quality\n            this.modulatorInput.connect(modulatorFilter);\n            this.modFilterBands.push(modulatorFilter);\n\n            // Now, create a second bandpass filter tuned to the same frequency -\n            // this turns our second-order filter into a 4th-order filter,\n            // which has a steeper rolloff/octave\n            const secondModulatorFilter = this.audioContext.createBiquadFilter();\n            secondModulatorFilter.type = \"bandpass\";  // Bandpass filter\n            if (this.vocoderBands) {\n                secondModulatorFilter.frequency.value = this.vocoderBands[i].frequency;\n            }\n            secondModulatorFilter.Q.value = this.FILTER_QUALITY; //  initial quality\n            //modulatorFilter.chainedFilter = secondModulatorFilter;\n            modulatorFilter.connect(secondModulatorFilter);\n\n            // create a post-filtering gain to bump the levels up.\n            const modulatorFilterPostGain = this.audioContext.createGain();\n            modulatorFilterPostGain.gain.value = 6;\n            secondModulatorFilter.connect(modulatorFilterPostGain);\n            this.modFilterPostGains.push(modulatorFilterPostGain);\n\n            // Create the sine oscillator for the heterodyne\n            const heterodyneOscillator = this.audioContext.createOscillator();\n            if (this.vocoderBands) {\n                heterodyneOscillator.frequency.value = this.vocoderBands[i].frequency;\n            }\n\n            heterodyneOscillator.start(0);\n\n            // Create the node to multiply the sine by the modulator\n            const heterodyne = this.audioContext.createGain();\n            modulatorFilterPostGain.connect(heterodyne);\n            heterodyne.gain.value = 0.0;  // audio-rate inputs are summed with initial intrinsic value\n            heterodyneOscillator.connect(heterodyne.gain);\n\n            const heterodynePostGain = this.audioContext.createGain();\n            heterodynePostGain.gain.value = 2.0;    // GUESS:  boost\n            heterodyne.connect(heterodynePostGain);\n            this.heterodynes.push(heterodynePostGain);\n\n\n            // Create the rectifier node\n            const rectifier = this.audioContext.createWaveShaper();\n            rectifier.curve = rectifierCurve;\n            heterodynePostGain.connect(rectifier);\n\n            // Create the lowpass filter to mask off the difference (near zero)\n            const lpFilter = this.audioContext.createBiquadFilter();\n            lpFilter.type = \"lowpass\";  // Lowpass filter\n            lpFilter.frequency.value = 5.0; // Guesstimate!  Mask off 20Hz and above.\n            lpFilter.Q.value = 1; // don't need a peak\n            this.lpFilters.push(lpFilter);\n            rectifier.connect(lpFilter);\n\n            const lpFilterPostGain = this.audioContext.createGain();\n            lpFilterPostGain.gain.value = 1.0;\n            lpFilter.connect(lpFilterPostGain);\n            this.lpFilterPostGains.push(lpFilterPostGain);\n\n            const waveshaper = this.audioContext.createWaveShaper();\n            waveshaper.curve = waveShaperCurve;\n            lpFilterPostGain.connect(waveshaper);\n\n\n            // Create the bandpass filter in the carrier chain\n            const carrierFilter = this.audioContext.createBiquadFilter();\n            carrierFilter.type = \"bandpass\";\n            if (this.vocoderBands) {\n                carrierFilter.frequency.value = this.vocoderBands[i].frequency;\n            }\n            carrierFilter.Q.value = this.FILTER_QUALITY;\n            this.carrierBands.push(carrierFilter);\n            this.carrierInput.connect(carrierFilter);\n\n            // We want our carrier filters to be 4th-order filter too.\n            const secondCarrierFilter = this.audioContext.createBiquadFilter();\n            secondCarrierFilter.type = \"bandpass\";  // Bandpass filter\n            if (this.vocoderBands) {\n                secondCarrierFilter.frequency.value = this.vocoderBands[i].frequency;\n            }\n            secondCarrierFilter.Q.value = this.FILTER_QUALITY; //  initial quality\n            //carrierFilter.chainedFilter = secondCarrierFilter;\n            carrierFilter.connect(secondCarrierFilter);\n\n            const carrierFilterPostGain = this.audioContext.createGain();\n            carrierFilterPostGain.gain.value = 10.0;\n            secondCarrierFilter.connect(carrierFilterPostGain);\n            this.carrierFilterPostGains.push(carrierFilterPostGain);\n\n            // Create the carrier band gain node\n            const bandGain = this.audioContext.createGain();\n            this.carrierBandGains.push(bandGain);\n            carrierFilterPostGain.connect(bandGain);\n            bandGain.gain.value = 0.0;  // audio-rate inputs are summed with initial intrinsic value\n            waveshaper.connect(bandGain.gain);  // connect the lp controller\n\n            bandGain.connect(this.outputGain);\n        }\n\n\n        // Now set up our wavetable stuff.\n        const real = new Float32Array(this.FOURIER_SIZE);\n        const imag = new Float32Array(this.FOURIER_SIZE);\n        real[0] = 0.0;\n        imag[0] = 0.0;\n        for (let i = 1; i < this.FOURIER_SIZE; i++) {\n            real[i] = 1.0;\n            imag[i] = 1.0;\n        }\n\n        this.wavetable = this.audioContext.createPeriodicWave(real, imag);\n        this.loadNoiseBuffer();\n    }\n\n    private setupVocoderGraph() {\n        this.initBandpassFilters();\n    }\n\n    private createCarriersAndPlay(output: GainNode | null) {\n        if (!this.audioContext || !output) {\n            return;\n        }\n\n        this.carrierSampleNode = this.audioContext.createBufferSource();\n        this.carrierSampleNode.buffer = this.carrierBuffer;\n        this.carrierSampleNode.loop = true;\n\n        this.carrierSampleGain = this.audioContext.createGain();\n        this.carrierSampleGain.gain.value = this.carrierSampleGainValue;\n        this.carrierSampleNode.connect(this.carrierSampleGain);\n        this.carrierSampleGain.connect(output);\n\n        // The wavetable signal needs a boost.\n        this.wavetableSignalGain = this.audioContext.createGain();\n\n        this.oscillatorNode = this.audioContext.createOscillator();\n        if (this.oscillatorType == 4 && this.wavetable) { // wavetable\n            this.oscillatorNode.setPeriodicWave(this.wavetable);\n            this.wavetableSignalGain.gain.value = this.WAVETABLEBOOST;\n        } else {\n            //oscillatorNode.type = oscillatorType;\n            this.wavetableSignalGain.gain.value = this.SAWTOOTHBOOST;\n        }\n        this.oscillatorNode.frequency.value = 110;\n        this.oscillatorNode.detune.value = this.oscillatorDetuneValue;\n        this.oscillatorNode.connect(this.wavetableSignalGain);\n\n        this.oscillatorGain = this.audioContext.createGain();\n        this.oscillatorGain.gain.value = this.oscillatorGainValue;\n\n        this.wavetableSignalGain.connect(this.oscillatorGain);\n        this.oscillatorGain.connect(output);\n\n        this.noiseNode = this.audioContext.createBufferSource();\n        this.noiseNode.buffer = this.noiseBuffer;\n        this.noiseNode.loop = true;\n        this.noiseGain = this.audioContext.createGain();\n        this.noiseGain.gain.value = this.noiseGainValue;\n        this.noiseNode.connect(this.noiseGain);\n\n        this.noiseGain.connect(output);\n        this.oscillatorNode.start(0);\n        this.noiseNode.start(0);\n        this.carrierSampleNode.start(0);\n\n    }\n\n    private vocode() {\n        if (!this.audioContext) {\n            return;\n        }\n\n        if (this.vocoding) {\n            if (this.modulatorNode) {\n                this.modulatorNode.stop(0);\n            }\n            this.shutOffCarrier();\n            this.vocoding = false;\n            return;\n        }\n\n        this.createCarriersAndPlay(this.carrierInput);\n\n        this.vocoding = true;\n\n        this.modulatorGain = this.audioContext.createGain();\n        this.modulatorGain.gain.value = this.modulatorGainValue;\n\n        if (this.modulatorBuffer) {\n            this.modulatorNode = this.audioContext.createBufferSource();\n            this.modulatorNode.buffer = this.modulatorBuffer;\n            this.modulatorNode.connect(this.modulatorGain);\n            this.modulatorNode.start(0);\n        }\n\n        if (this.modulatorInput) {\n            this.modulatorGain.connect(this.modulatorInput);\n        }\n    }\n}\n","import AbstractAudioFilter from \"./interfaces/AbstractAudioFilter\";\nimport { AudioFilterNodes } from \"../model/AudioNodes\";\nimport Constants from \"../model/Constants\";\nimport Vocoder from \"../utils/Vocoder\";\nimport VocoderSettings from \"../model/filtersSettings/VocoderSettings\";\nimport utilFunctions from \"../utils/Functions\";\nimport { FilterSettingValue } from \"../model/filtersSettings/FilterSettings\";\n\nexport default class VocoderFilter extends AbstractAudioFilter {\n\n    private currentVocoder: Vocoder | null = null;\n    private modulatorGainValue = 1.0;\n    private carrierSampleGainValue = 0;\n    private oscillatorGainValue = 1.0;\n    private noiseGainValue = 0.2;\n    private oscillatorDetuneValue = 0;\n\n    getNode(context: BaseAudioContext): AudioFilterNodes {\n        const modulatorBuffer = this.bufferFetcherService?.getAudioBuffer(Constants.VOCODER_MODULATOR);\n\n        this.currentVocoder = new Vocoder(context, modulatorBuffer!);\n        this.currentVocoder.init();\n        this.applyCurrentSettingsToVocoder();\n\n        const { modulatorGain, outputGain } = this.currentVocoder.getNodes();\n\n        return {\n            input: modulatorGain!,\n            output: outputGain!\n        };\n    }\n\n    getSettings(): VocoderSettings {\n        return {\n            modulatorGainValue: this.modulatorGainValue,\n            carrierSampleGainValue: this.carrierSampleGainValue,\n            oscillatorGainValue: this.oscillatorGainValue,\n            noiseGainValue: this.noiseGainValue,\n            oscillatorDetuneValue: this.oscillatorDetuneValue\n        };\n    }\n\n    setSetting(settingId: string, value: FilterSettingValue): Promise<void> {\n        if (!utilFunctions.isSettingValueValid(value)) {\n            return Promise.resolve();\n        }\n\n        switch (settingId) {\n        case \"modulatorGainValue\":\n            this.modulatorGainValue = parseFloat(value as string);\n            break;\n        case \"carrierSampleGainValue\":\n            this.carrierSampleGainValue = parseFloat(value as string);\n            break;\n        case \"oscillatorGainValue\":\n            this.oscillatorGainValue = parseFloat(value as string);\n            break;\n        case \"noiseGainValue\":\n            this.noiseGainValue = parseFloat(value as string);\n            break;\n        case \"oscillatorDetuneValue\":\n            this.oscillatorDetuneValue = parseFloat(value as string);\n            break;\n        }\n\n        this.applyCurrentSettingsToVocoder();\n\n        return Promise.resolve();\n    }\n\n    private applyCurrentSettingsToVocoder() {\n        if (this.currentVocoder) {\n            this.currentVocoder.updateModGain(this.modulatorGainValue);\n            this.currentVocoder.updateSampleLevel(this.carrierSampleGainValue);\n            this.currentVocoder.updateSynthLevel(this.oscillatorGainValue);\n            this.currentVocoder.updateNoiseLevel(this.noiseGainValue);\n            this.currentVocoder.updateDetuneValue(this.oscillatorDetuneValue);\n        }\n    }\n\n    get order(): number {\n        return 1;\n    }\n\n    get id(): string {\n        return Constants.FILTERS_NAMES.VOCODER;\n    }\n}\n","import Constants from \"../../model/Constants\";\n\nclass RenderingProgressCalculationWorkletProcessor extends AudioWorkletProcessor {\n\n    private stopped = false;\n    private disabled = false;\n    private samplesCount = 0;\n\n    constructor() {\n        super();\n\n        this.port.onmessage = event => {\n            switch (event.data) {\n            case \"stop\":\n                this.stop();\n                break;\n            case \"disable\":\n                this.disabled = true;\n                break;\n            case \"enable\":\n                this.disabled = false;\n                break;\n            }\n        };\n    }\n\n    static get parameterDescriptors() {\n        return [];\n    }\n\n    get defaultParameterDescriptors() {\n        return RenderingProgressCalculationWorkletProcessor.parameterDescriptors;\n    }\n\n    process(inputs: Float32Array[][], outputs: Float32Array[][]): boolean {\n        if (this.stopped || this.disabled) {\n            return false;\n        }\n\n        const input = inputs[0];\n        const output = outputs[0];\n\n        if (input && input[0]) {\n            this.samplesCount += input[0].length;\n        }\n\n        if (output) {\n            for (let channel = 0; channel < output.length; channel++) {\n                const inp = input[channel];\n                const out = output[channel];\n\n                if (inp) {\n                    for (let sample = 0; sample < inp.length; sample++) {\n                        out[sample] = inp[sample];\n                    }\n                }\n            }\n\n            this.port.postMessage({ command: \"update\", samplesCount: this.samplesCount });\n        }\n\n        return true;\n    }\n\n    stop() {\n        this.stopped = true;\n    }\n}\n\nregisterProcessor(Constants.WORKLET_NAMES.RENDERING_PROGRESS_CALCULATION, RenderingProgressCalculationWorkletProcessor);\n","import AbstractAudioFilterWorklet from \"./interfaces/AbstractAudioFilterWorklet\";\nimport Constants from \"../model/Constants\";\nimport \"./worklets/RenderingProgressCalculation.worklet\";\nimport { FilterSettingValue } from \"../model/filtersSettings/FilterSettings\";\nimport RenderingProgressCalculationFilterEvent from \"@/model/RenderingProgressCalculationFilterEvent\";\nimport { EventType } from \"@/model/EventTypeEnum\";\n\nexport default class RenderingProgressCalculationFilter extends AbstractAudioFilterWorklet<RenderingProgressCalculationFilterEvent> {\n\n    private currentTime = 0;\n    private lastSampleCount = 0;\n    private samplePerSecond = 0;\n    private currentTimeSamplesPerSecond = 0;\n\n    receiveEvent(message: MessageEvent<RenderingProgressCalculationFilterEvent>): void {\n        const currentTime = performance.now();\n        const samplesProcessed = message.data.samplesCount;\n\n        if (message.data.command === \"update\") {\n            this.calculatePercentageProcessed(currentTime, samplesProcessed);\n        }\n\n        this.calculateRemainingTimeProcessing(currentTime, samplesProcessed);\n    }\n\n    /**\n     * Calculate percentage processed\n     * @param currentTime Current time (ms)\n     * @param samplesProcessed Samples count processed\n     */\n    private calculatePercentageProcessed(currentTime: number, samplesProcessed: number) {\n        if (this.currentTime === 0) {\n            this.currentTime = currentTime;\n        }\n\n        const timeDifference = currentTime - this.currentTime;\n        const percentageProcessed = (samplesProcessed / this._totalSamples) * 100;\n\n        if (this.eventEmitter && timeDifference >= Constants.TREATMENT_TIME_COUNTING_THROTTLE_INTERVAL) {\n            this.eventEmitter.emit(EventType.UPDATE_AUDIO_TREATMENT_PERCENT, percentageProcessed);\n            this.currentTime = currentTime;\n        }\n\n        if (percentageProcessed >= 100) {\n            this.stop();\n        }\n    }\n\n    /**\n     * Calculate remaining time to process the audio\n     * @param currentTime Current time (ms)\n     * @param samplesProcessed Samples count processed\n     */\n    private calculateRemainingTimeProcessing(currentTime: number, samplesProcessed: number) {\n        if (this.currentTimeSamplesPerSecond === 0) {\n            this.currentTimeSamplesPerSecond = currentTime;\n        }\n\n        const timeDifferenceSamplePerSecond = currentTime - this.currentTimeSamplesPerSecond;\n        const remainingSamples = this._totalSamples - samplesProcessed;\n\n        if (this.eventEmitter && remainingSamples <= 0) {\n            this.eventEmitter.emit(EventType.UPDATE_REMAINING_TIME_ESTIMATED, 0);\n            return;\n        }\n\n        if (this.eventEmitter && timeDifferenceSamplePerSecond >= 1000) {\n            this.calculateSmoothedSamplePerSecond(timeDifferenceSamplePerSecond, samplesProcessed);\n\n            const remainingTimeSeconds = remainingSamples / this.samplePerSecond;\n\n            this.currentTimeSamplesPerSecond = currentTime;\n            this.lastSampleCount = samplesProcessed;\n\n            if (isNaN(remainingTimeSeconds) || !isFinite(remainingTimeSeconds)) {\n                this.eventEmitter.emit(EventType.UPDATE_REMAINING_TIME_ESTIMATED, -1);\n            } else {\n                this.eventEmitter.emit(EventType.UPDATE_REMAINING_TIME_ESTIMATED, remainingTimeSeconds);\n            }\n        }\n    }\n\n    /**\n     * Calculate smoothed samples per second\n     * @param timeDifferenceSamplePerSecond Time difference\n     * @param samplesProcessed Samples count processed\n     * @returns Smoothed samples per second\n     */\n    private calculateSmoothedSamplePerSecond(timeDifferenceSamplePerSecond: number, samplesProcessed: number): void {\n        if (timeDifferenceSamplePerSecond > 0) {\n            const currentSampleRate = (samplesProcessed - this.lastSampleCount) / (timeDifferenceSamplePerSecond / 1000);\n            this.samplePerSecond = (Constants.TREATMENT_TIME_COUNTING_SMOOTHING_FACTOR * currentSampleRate) + ((1 - Constants.TREATMENT_TIME_COUNTING_SMOOTHING_FACTOR) * this.samplePerSecond);\n        }\n    }\n\n    get workletName(): string {\n        return Constants.WORKLET_NAMES.RENDERING_PROGRESS_CALCULATION;\n    }\n\n    get workletPath(): string {\n        return Constants.WORKLET_PATHS.RENDERING_PROGRESS_CALCULATION;\n    }\n\n    get order(): number {\n        return 10;\n    }\n\n    get id(): string {\n        return Constants.FILTERS_NAMES.RENDERING_PROGRESS_CALCULATION;\n    }\n\n    set totalSamples(value: number) {\n        super.totalSamples = value;\n        this.currentTime = 0;\n        this.currentTimeSamplesPerSecond = 0;\n        this.samplePerSecond = 0;\n        this.lastSampleCount = 0;\n    }\n\n    getSettings() {\n        return {};\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async setSetting(settingId: string, value: FilterSettingValue) { }\n}\n","import { TYPES } from \"@/inversify.types\";\nimport AudioEditorInterface from \"@/audioEditor/interfaces/AudioEditorInterface\";\nimport { getAudioEditorContainer } from \"@/inversify.config\";\nimport { ConfigService } from \"@/services/interfaces/ConfigService\";\nimport EventEmitterInterface from \"./interfaces/EventEmitterInterface\";\nimport BufferPlayerInterface from \"@/bufferPlayer/interfaces/BufferPlayerInterface\";\nimport GenericConfigService from \"@/services/GenericConfigService\";\nimport VoiceRecorderInterface from \"@/voiceRecorder/interfaces/VoiceRecorderInterface\";\nimport SoundStudioFactoryNewInstanceOptions from \"@/model/SoundStudioFactoryNewInstanceOptions\";\nimport SoundStudioFactoryInstance from \"@/model/SoundStudioFactoryInstance\";\n\n/**\n * Factory class to create instances of sound studio components.\n *\n * This factory supports both singleton-based methods (deprecated) and a new\n * instance-based creation model. The singleton methods will be removed in a\n * future release.\n */\nexport default class SoundStudioFactory {\n\n    private static ready = false;\n\n    // Singletons (remove when removing deprecated methods)\n    private static audioEditor: AudioEditorInterface | null = null;\n    private static audioPlayer: BufferPlayerInterface | null = null;\n    private static configService: ConfigService | null = null;\n    private static eventEmitter: EventEmitterInterface | null = null;\n    private static voiceRecorder: VoiceRecorderInterface | null = null;\n\n    /**\n     * Create a new instance of sound studio components.\n     *\n     * @param options Optional configuration for the new instance. See SoundStudioFactoryNewInstanceOptions\n     * @returns A new instance of the sound studio components. See SoundStudioFactoryInstance\n     */\n    static createNewInstance(options?: SoundStudioFactoryNewInstanceOptions): SoundStudioFactoryInstance {\n        try {\n            const audioEditorContainer = getAudioEditorContainer();\n\n            if (options && options.configService) {\n                audioEditorContainer.bind<ConfigService>(TYPES.ConfigService).toDynamicValue(() => options.configService!);\n            } else {\n                audioEditorContainer.bind<ConfigService>(TYPES.ConfigService).to(GenericConfigService);\n                console.warn(\"No ConfigService provided. Using default generic implementation.\");\n            }\n\n            audioEditorContainer.bind<string[]>(TYPES.AudioBuffersToFetch).toConstantValue((options && options.buffersToFetch) || []);\n\n            return {\n                audioEditor: audioEditorContainer.get<AudioEditorInterface>(TYPES.AudioEditor),\n                audioPlayer: audioEditorContainer.get<BufferPlayerInterface>(TYPES.BufferPlayer),\n                configService: audioEditorContainer.get<ConfigService>(TYPES.ConfigService),\n                eventEmitter: audioEditorContainer.get<EventEmitterInterface>(TYPES.EventEmitter),\n                voiceRecorder: audioEditorContainer.get<VoiceRecorderInterface>(TYPES.VoiceRecorder)\n            };\n        } catch (e) {\n            console.error(\"Error when creating new Sound Studio instance\\n\", e);\n            throw new Error(\"Error when creating new Sound Studio instance\");\n        }\n    }\n\n    /**\n     * Create a singleton AudioEditor instance.\n     *\n     * @param configService Optional configuration service.\n     * @param buffersToFetch Optional list of audio buffers to pre-fetch.\n     * @returns The singleton AudioEditor instance.\n     * @deprecated This method is deprecated. Use createNewInstance instead.\n     */\n    static createAudioEditor(configService?: ConfigService, buffersToFetch?: string[]): AudioEditorInterface {\n        console.warn(\"[DEPRECATED] SoundStudioFactory.createAudioEditor is deprecated and \"\n            + \"will be removed in a future release of simple-sound-studio-lib. \" +\n            \"Please use SoundStudioFactory.createNewInstance instead, which doesn't work as a singleton.\");\n\n        if (!SoundStudioFactory.ready) {\n            const instance = SoundStudioFactory.createNewInstance({ configService, buffersToFetch });\n\n            SoundStudioFactory.audioEditor = instance.audioEditor;\n            SoundStudioFactory.audioPlayer = instance.audioPlayer;\n            SoundStudioFactory.configService = instance.configService;\n            SoundStudioFactory.eventEmitter = instance.eventEmitter;\n            SoundStudioFactory.voiceRecorder = instance.voiceRecorder;\n\n            SoundStudioFactory.ready = true;\n        }\n\n        return SoundStudioFactory.audioEditor!;\n    }\n\n    /**\n     * Create a singleton VoiceRecorder instance.\n     *\n     * @returns The singleton VoiceRecorder instance.\n     * @deprecated This method is deprecated. Use createNewInstance instead.\n     */\n    static createVoiceRecorder(): VoiceRecorderInterface {\n        console.warn(\"[DEPRECATED] SoundStudioFactory.createVoiceRecorder is deprecated and \"\n            + \"will be removed in a future release of simple-sound-studio-lib. \" +\n            \"Please use SoundStudioFactory.createNewInstance instead, which doesn't work as a singleton.\");\n\n        return SoundStudioFactory.voiceRecorder!;\n    }\n\n    /**\n     * Get the singleton AudioEditor instance.\n     *\n     * @returns The singleton AudioEditor instance, or null if not initialized.\n     * @deprecated This method is deprecated. Use createNewInstance instead.\n     */\n    static getAudioEditorInstance(): AudioEditorInterface | null {\n        console.warn(\"[DEPRECATED] SoundStudioFactory.getAudioEditorInstance is deprecated and \"\n            + \"will be removed in a future release of simple-sound-studio-lib. \" +\n            \"Please use SoundStudioFactory.createNewInstance instead, which doesn't work as a singleton.\");\n\n        return SoundStudioFactory.audioEditor!;\n    }\n\n    /**\n     * Get the singleton BufferPlayer instance.\n     *\n     * @returns The singleton BufferPlayer instance, or null if not initialized.\n     * @deprecated This method is deprecated. Use createNewInstance instead.\n     */\n    static getAudioPlayerInstance(): BufferPlayerInterface | null {\n        console.warn(\"[DEPRECATED] SoundStudioFactory.getAudioPlayerInstance is deprecated and \"\n            + \"will be removed in a future release of simple-sound-studio-lib. \" +\n            \"Please use SoundStudioFactory.createNewInstance instead, which doesn't work as a singleton.\");\n\n        return SoundStudioFactory.audioPlayer!;\n    }\n\n    /**\n     * Get the singleton VoiceRecorder instance.\n     *\n     * @returns The singleton VoiceRecorder instance, or null if not initialized.\n     * @deprecated This method is deprecated. Use createNewInstance instead.\n     */\n    static getAudioRecorderInstance(): VoiceRecorderInterface | null {\n        console.warn(\"[DEPRECATED] SoundStudioFactory.getAudioRecorderInstance is deprecated and \"\n            + \"will be removed in a future release of simple-sound-studio-lib. \" +\n            \"Please use SoundStudioFactory.createNewInstance instead, which doesn't work as a singleton.\");\n\n        return SoundStudioFactory.voiceRecorder!;\n    }\n\n    /**\n     * Get the singleton EventEmitter instance.\n     *\n     * @returns The singleton EventEmitter instance, or null if not initialized.\n     * @deprecated This method is deprecated. Use createNewInstance instead.\n     */\n    static getEventEmitterInstance(): EventEmitterInterface | null {\n        console.warn(\"[DEPRECATED] SoundStudioFactory.getEventEmitterInstance is deprecated and \"\n            + \"will be removed in a future release of simple-sound-studio-lib. \" +\n            \"Please use SoundStudioFactory.createNewInstance instead, which doesn't work as a singleton.\");\n\n        return SoundStudioFactory.eventEmitter!;\n    }\n\n    /**\n     * Get the singleton ConfigService instance.\n     *\n     * @returns The singleton ConfigService instance, or undefined if not initialized.\n     * @deprecated This method is deprecated. Use createNewInstance instead.\n     */\n    static getConfigServiceInstance(): ConfigService | undefined {\n        console.warn(\"[DEPRECATED] SoundStudioFactory.getConfigServiceInstance is deprecated and \"\n            + \"will be removed in a future release of simple-sound-studio-lib. \" +\n            \"Please use SoundStudioFactory.createNewInstance instead, which doesn't work as a singleton.\");\n\n        return SoundStudioFactory.configService!;\n    }\n}\n","import \"reflect-metadata\";\nimport { Container } from \"inversify\";\nimport { TYPES } from \"./inversify.types\";\nimport AudioContextManagerInterface from \"./audioEditor/interfaces/AudioContextManagerInterface\";\nimport AudioContextManager from \"./audioEditor/AudioContextManager\";\nimport AudioEditorInterface from \"./audioEditor/interfaces/AudioEditorInterface\";\nimport AudioProcessorInterface from \"./audioEditor/interfaces/AudioProcessorInterface\";\nimport BufferManagerInterface from \"./audioEditor/interfaces/BufferManagerInterface\";\nimport FilterManagerInterface from \"./audioEditor/interfaces/FilterManagerInterface\";\nimport RendererManagerInterface from \"./audioEditor/interfaces/RendererManagerInterface\";\nimport SaveBufferManagerInterface from \"./audioEditor/interfaces/SaveBufferManagerInteface\";\nimport AudioEditor from \"./audioEditor/AudioEditor\";\nimport AudioProcessor from \"./audioEditor/AudioProcessor\";\nimport BufferManager from \"./audioEditor/BufferManager\";\nimport FilterManager from \"./audioEditor/FilterManager\";\nimport RendererManager from \"./audioEditor/RendererManager\";\nimport SaveBufferManager from \"./audioEditor/SaveBufferManager\";\nimport EventEmitterInterface from \"./utils/interfaces/EventEmitterInterface\";\nimport EventEmitter from \"./utils/EventEmitter\";\nimport BufferPlayerInterface from \"./bufferPlayer/interfaces/BufferPlayerInterface\";\nimport BufferPlayer from \"./bufferPlayer/BufferPlayer\";\nimport BufferFetcherServiceInterface from \"./services/interfaces/BufferFetcherServiceInterface\";\nimport BufferDecoderServiceInterface from \"./services/interfaces/BufferDecoderServiceInterface\";\nimport BufferFetcherService from \"./services/BufferFetcherService\";\nimport BufferDecoderService from \"./services/BufferDecoderService\";\nimport AbstractAudioRenderer from \"./filters/interfaces/AbstractAudioRenderer\";\nimport ReturnAudioRenderer from \"./filters/ReturnAudioRenderer\";\nimport BassBoosterFilter from \"./filters/BassBoosterFilter\";\nimport BitCrusherFilter from \"./filters/BitCrusherFilter\";\nimport EchoFilter from \"./filters/EchoFilter\";\nimport HighPassFilter from \"./filters/HighPassFilter\";\nimport LimiterFilter from \"./filters/LimiterFilter\";\nimport LowPassFilter from \"./filters/LowPassFilter\";\nimport ReverbFilter from \"./filters/ReverbFilter\";\nimport SoundtouchWrapperFilter from \"./filters/SountouchWrapperFilter\";\nimport TelephonizerFilter from \"./filters/TelephonizerFilter\";\nimport VocoderFilter from \"./filters/VocoderFilter\";\nimport RenderingProgressCalculationFilter from \"./filters/RenderingProgressCalculationFilter\";\nimport AbstractAudioFilter from \"./filters/interfaces/AbstractAudioFilter\";\nimport AudioFilterEntrypointInterface from \"./filters/interfaces/AudioFilterEntrypointInterface\";\nimport VoiceRecorderInterface from \"./voiceRecorder/interfaces/VoiceRecorderInterface\";\nimport VoiceRecorder from \"./voiceRecorder/VoiceRecorder\";\n\nfunction getAudioEditorContainer() {\n    const audioEditorContainer = new Container({ defaultScope: \"Singleton\" });\n\n    // Entrypoint filter\n    audioEditorContainer.bind<AudioFilterEntrypointInterface>(TYPES.EntryPointFilter).to(SoundtouchWrapperFilter);\n\n    // Renderers\n    audioEditorContainer.bind<AbstractAudioRenderer>(TYPES.Renderers).to(ReturnAudioRenderer);\n\n    // Filters\n    audioEditorContainer.bind<AbstractAudioFilter>(TYPES.Filters).toDynamicValue(() => audioEditorContainer.get<AbstractAudioFilter>(TYPES.EntryPointFilter));\n    audioEditorContainer.bind<AbstractAudioFilter>(TYPES.Filters).to(BassBoosterFilter);\n    audioEditorContainer.bind<AbstractAudioFilter>(TYPES.Filters).to(BitCrusherFilter);\n    audioEditorContainer.bind<AbstractAudioFilter>(TYPES.Filters).to(EchoFilter);\n    audioEditorContainer.bind<AbstractAudioFilter>(TYPES.Filters).to(HighPassFilter);\n    audioEditorContainer.bind<AbstractAudioFilter>(TYPES.Filters).to(LimiterFilter);\n    audioEditorContainer.bind<AbstractAudioFilter>(TYPES.Filters).to(LowPassFilter);\n    audioEditorContainer.bind<AbstractAudioFilter>(TYPES.Filters).to(ReverbFilter);\n    audioEditorContainer.bind<AbstractAudioFilter>(TYPES.Filters).to(TelephonizerFilter);\n    audioEditorContainer.bind<AbstractAudioFilter>(TYPES.Filters).to(VocoderFilter);\n    audioEditorContainer.bind<AbstractAudioFilter>(TYPES.Filters).to(RenderingProgressCalculationFilter);\n\n    // Services\n    audioEditorContainer.bind<EventEmitterInterface>(TYPES.EventEmitter).to(EventEmitter);\n    audioEditorContainer.bind<AudioContextManagerInterface>(TYPES.AudioContextManager).to(AudioContextManager);\n    audioEditorContainer.bind<AudioEditorInterface>(TYPES.AudioEditor).to(AudioEditor);\n    audioEditorContainer.bind<AudioProcessorInterface>(TYPES.AudioProcessor).to(AudioProcessor);\n    audioEditorContainer.bind<BufferManagerInterface>(TYPES.BufferManager).to(BufferManager);\n    audioEditorContainer.bind<FilterManagerInterface>(TYPES.FilterManager).to(FilterManager);\n    audioEditorContainer.bind<RendererManagerInterface>(TYPES.RendererManager).to(RendererManager);\n    audioEditorContainer.bind<SaveBufferManagerInterface>(TYPES.SaveBufferManager).to(SaveBufferManager);\n    audioEditorContainer.bind<BufferPlayerInterface>(TYPES.BufferPlayer).to(BufferPlayer);\n    audioEditorContainer.bind<BufferFetcherServiceInterface>(TYPES.BufferFetcherService).to(BufferFetcherService);\n    audioEditorContainer.bind<BufferDecoderServiceInterface>(TYPES.BufferDecoderService).to(BufferDecoderService);\n    audioEditorContainer.bind<VoiceRecorderInterface>(TYPES.VoiceRecorder).to(VoiceRecorder);\n\n    return audioEditorContainer;\n}\n\nexport { getAudioEditorContainer };\n"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","SuppressedError","t","toString","name","Error","root","globalThis","global","self","this","Function","_","functionThis","eval","indirectEvalThis","exporter","makeExporter","previous","configurable","writable","hasOwn","prototype","hasOwnProperty","supportsSymbol","Symbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","iterator","supportsCreate","create","supportsProto","__proto__","Array","downLevel","HashMap","MakeDictionary","has","map","call","get","undefined","functionPrototype","getPrototypeOf","_Map","Map","entries","CreateMapPolyfill","_Set","Set","CreateSetPolyfill","_WeakMap","WeakMap","CreateWeakMapPolyfill","registrySymbol","for","metadataRegistry","GetOrCreateMetadataRegistry","metadataProvider","CreateMetadataProvider","propertyKey","attributes","IsUndefined","IsArray","TypeError","IsConstructor","DecorateConstructor","IsObject","IsNull","DecorateProperty","ToPropertyKey","IsPropertyKey","OrdinaryDefineOwnMetadata","defineMetadata","hasMetadata","OrdinaryHasMetadata","hasOwnMetadata","OrdinaryHasOwnMetadata","getMetadata","OrdinaryGetMetadata","getOwnMetadata","OrdinaryGetOwnMetadata","getMetadataKeys","OrdinaryMetadataKeys","getOwnMetadataKeys","OrdinaryOwnMetadataKeys","deleteMetadata","provider","GetMetadataProvider","OrdinaryDeleteMetadata","decorated","descriptor","MetadataKey","O","parent","OrdinaryGetPrototypeOf","ToBoolean","MetadataValue","ownKeys","parentKeys","set","keys","_i","ownKeys_1","add","push","_a","parentKeys_1","Type","x","IsSymbol","ToPrimitive","input","PreferredType","hint","exoticToPrim","GetMethod","OrdinaryToPrimitive","valueOf","toString_1","IsCallable","argument","ToString","isArray","SameValueZero","y","V","func","GetIterator","obj","method","IteratorValue","iterResult","IteratorStep","IteratorClose","f","proto","prototypeProto","constructor","CreateMetadataRegistry","fallback","first","second","rest","CreateFallbackProvider","targetProviderMap","registry","registerProvider","getProvider","setProvider","isExtensible","getProviderNoCache","isProviderFor","providerMap","hasProvider","existingProvider","enumerable","targetMetadata","GetOrCreateMetadataMap","Create","createdTargetMetadata","metadataMap","delete","k","nextValue","size","reflect","metadataOwner","metadataPropertySet","registeredProvider","cacheSentinel","arraySentinel","MapIterator","values","selector","_index","_keys","_values","_selector","index","throw","error","return","_cacheKey","_cacheIndex","_find","clear","getKey","getValue","getEntry","insert","_map","UUID_SIZE","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","buffer","Math","random","GenRandomBytes","Uint8Array","array","crypto","getRandomValues","msCrypto","data","offset","byte","toLowerCase","__","factory","n","n$1","is","unwrap","a","s","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","u","l","p","o","clone","getAllKeys","removeByRelation","indexOf","splice","g","m","moduleId","serviceId","h","isOptional","build","removeAllByModuleId","removeAllByServiceId","id","v","getNonParentBindings","getById","getByModuleId","getNonParentBoundServices","removeById","serviceIdentifier","I","w","constructorArguments","lifecycle","postConstructMethodName","preDestroyMethodName","properties","scope","b","j","T$1","T","j$1","kind","super","isErrorOfKind","S","A","C","$","missingInjectionDecorator","join","unknown","R","injectionDecoratorConflict","planning","resolution","multipleInjection","singleInjection","unmanaged","B","optional","tags","isFromTypescriptParamType","D","F","property","targetClass","parameter","message","cause","E","N","U","K","BigInt","Boolean","String","z","forEach","includes","q","G","extendConstructorArguments","extendProperties","H","type","X","J","ee","ae","Ae","se","elem","getAncestor","ce","last","concat","ue","customServiceIdentifier","getBindings","filter","isSatisfiedBy","autobindOptions","cache","isRight","implementationType","onActivation","onDeactivation","setBinding","de","redirections","le","binding","targetServiceIdentifier","fe","ge","pe","me","he","bindings","ye","rootConstraints","tag","je","isMultiple","tree","RangeError","test","servicesBranch","ve","Me","classMetadata","getClassMetadata","constructorParams","propertyParams","Se","node","Ie","we","be","params","Te","pop","singleMandatory","singleOptional","multipleMandatory","multipleOptional","Ce","clearCache","M","subscribe","$e","xe","async","Be","context","ke","getActivations","Re","Pe","De","Fe","Oe","requestScopeCache","Ve","Ee","Ne","Ue","Ke","qe","ze","Ge","Ye","all","_e","We","Xe","some","He","Je","Le","Ze","et","tt","getDeactivations","nt","it","ot","rt","at","ct","static","getIdentifier","inRequestScope","inSingletonScope","inTransientScope","to","always","toSelf","toConstantValue","toDynamicValue","toResolvedValue","toFactory","toProvider","toService","when","whenAnyAncestor","whenAnyAncestorIs","whenAnyAncestorNamed","whenAnyAncestorTagged","whenDefault","whenNamed","whenNoParent","whenNoParentIs","whenNoParentNamed","whenNoParentTagged","whenParent","whenParentIs","whenParentNamed","whenParentTagged","whenTagged","whenNoAncestor","whenNoAncestorIs","whenNoAncestorNamed","whenNoAncestorTagged","invalidOperation","L","bind","autobind","defaultScope","getAll","getAllAsync","getAsync","isBound","isCurrentBound","load","loadSync","restore","activationService","bindingService","deactivationService","rebind","unbind","rebindSync","unbindSync","snapshot","unbindAll","unload","unloadSync","getBindingsFromModule","planResult","TYPES","AudioContextManager","AudioEditor","AudioProcessor","BufferManager","FilterManager","RendererManager","SaveBufferManager","ConfigService","EventEmitter","BufferPlayer","BufferDecoderService","BufferFetcherService","AudioBuffersToFetch","Renderers","Filters","EntryPointFilter","VoiceRecorder","AbstractAudioElement","bufferFetcherService","bufferDecoderService","configService","eventEmitter","contextManager","injectDependencies","inject","injectable","utilFunctions","calcAudioDuration","audio","speed","duration","loadAudioBuffer","file","arrayBuffer","readAsArrayBufferPromisified","audioBuffer","decodeAudioData","decodeBuffer","reader","FileReader","onload","ev","ArrayBuffer","readAsArrayBuffer","numberOfChannels","resume","sampleRate","newBuffer","createBuffer","sourceChannelData","getChannelData","channel0Data","channel1Data","convertAudioBufferToFloat32Array","channel","convertAudioParamToFloat32Array","param","Float32Array","sumAudioBufferChannel","reduce","sumAudioBuffer","sum","isAudioWorkletCompatible","audioContext","isSettingValueValid","isNaN","trim","calculateAudioDuration","filterManager","speedAudio","addingTime","getAddingTime","forceDownload","blob","filename","link","window","document","createElement","url","URL","createObjectURL","body","appendChild","href","download","click","revokeObjectURL","removeChild","clearAudioBuffer","channelData","EventType","rendererManager","saveBufferManager","audioProcessor","bufferManager","player","principalBuffer","fileList","fileListCurrIndex","loadingAudio","renderingAudio","bufferPlayer","setup","on","PLAYING_STARTED","compatibilityMode","currentContext","setupOutput","PLAYING_FINISHED","loop","start","PLAYING_FINISHED_LOOP_ALL","loopAll","loadNextAudio","console","addFilters","filters","addRenderers","renderers","currentSampleRate","defaultDeviceSampleRate","tempContext","AudioContext","close","loadBufferFromFile","prepareContext","clearPrincipalBuffer","decodeBufferFromFile","initialRenderingDone","sumInputBuffer","utils","resetAudioRenderingProgress","totalFileList","toggleLoop","loadFileList","loadBufferFromFileListIndex","item","emit","LOADED_AUDIO_FILE_FROM_LIST","loadPreviousAudio","forceInitialRendering","currentIndex","currentIndexFileList","maxIndex","newIndex","renderAudio","getCurrentFileList","mapFiles","loadBuffer","getOutputBuffer","renderedBuffer","STARTED_RENDERING_AUDIO","AUDIO_RENDERING_FINISHED","AUDIO_RENDERING_EXCEPTION_THROWN","isAudioWorkletAvailable","getFiltersState","assign","getRenderersState","getFiltersSettings","reconnectNodesIfNeeded","entrypointFilter","connectNodes","getSpeed","audioDuration","updateAudioSpeedAndDuration","enableFilter","filterId","enableRenderer","disableFilter","disableRenderer","toggleFilter","toggleRenderer","changeFilterSettings","settings","resetFilterSettings","resetAllFiltersState","resetAllRenderersState","exit","stop","reset","cancelAudioRendering","clearBuffers","clearRenderedBuffer","event","callback","off","saveBuffer","options","downloadingInitialData","state","postConstruct","injectFromBase","source","gainNode","intervals","_volume","_duration","currentTime","displayTime","playing","currentNode","AUDIO_SPEED_UPDATED","AUDIO_DURATION_UPDATED","init","direct","disconnect","createGainNode","connect","destination","updateInfos","createBufferSource","createGain","setGainNodeValue","setCompatibilityMode","clearIntervals","PLAYING_STOPPED","interval","clearInterval","startTime","performance","now","setInterval","timeNow","nextTime","_b","_c","playDirect","pause","PLAYING_UPDATE","setTimePercent","percent","round","setTime","time","volume","gain","pow","onBeforePlaying","toggleLoopAll","currentTimeDisplay","trunc","slice","maxTimeDisplay","remainingTimeDisplay","TimerSaveTime","seconds","incr","initialSeconds","countCallback","count","onCount","FilterNames","REVERB","ECHO","BASS_BOOST","BITCRUSHER","HIGH_PASS","LIMITER","LOW_PASS","RENDERING_PROGRESS_CALCULATION","RETURN_AUDIO","SOUNDTOUCH","TELEPHONIZER","VOCODER","Constants","AUDIO_EDITOR","VOICE_RECORDER","BUFFER_PLAYER","AUDIO_CONTEXT_MANAGER","AUDIO_PROCESSOR","BUFFER_MANAGER","FILTER_MANAGER","RENDERER_MANAGER","SAVE_BUFFER_MANAGER","EXPORT_WAV_COMMAND","EXPORT_MP3_COMMAND","AUDIO_WAV","AUDIO_MP3","RECORD_COMMAND","INIT_COMMAND","FILTERS_NAMES","WORKLET_PATHS","RECORDER_WORKLET","WORKLET_NAMES","PREFERENCES_KEYS","COMPATIBILITY_MODE_ENABLED","COMPATIBILITY_MODE_CHECKED","ENABLE_AUDIO_WORKLET","ENABLE_SOUNDTOUCH_AUDIO_WORKLET","BUFFER_SIZE","SAMPLE_RATE","DISABLE_INITIAL_RENDERING","BITRATE_MP3","ENABLE_RECORDER_AUDIO_WORKLET","SOUNDTOUCH_PITCH_SHIFTER_BUFFER_SIZE","SOUNDTOUCH_DEFAULT_SPEED","SOUNDTOUCH_DEFAULT_FREQUENCY","SOUNDTOUCH_DEFAULT_PITCH_SEMITONES","DEFAULT_REVERB_ENVIRONMENT","addDuration","VOCODER_MODULATOR","DEFAULT_BUFFER_SIZE","VALID_BUFFER_SIZE","VALID_MP3_BITRATES","DEFAULT_SAMPLE_RATE","VALID_SAMPLE_RATES","TREATMENT_TIME_COUNTING_THROTTLE_INTERVAL","TREATMENT_TIME_COUNTING_SMOOTHING_FACTOR","DEFAULT_SAVE_FORMAT","DEFAULT_MP3_BITRATE","getRecorderWorker","workerBasePath","Worker","Recorder","cfg","worker","config","bufferLen","numChannels","mimeType","workletBasePath","bitrate","callbacks","getBuffer","exportWAV","exportMP3","recording","AudioWorkletNode","port","postMessage","createRecorderNode","command","onmessage","cb","createRecorderWorklet","createRecorderScriptProcessorNode","audioWorklet","addModule","numChannelParameter","parameters","setValueAtTime","onaudioprocess","inputBuffer","record","kill","terminate","Recorder$1","recorder","stream","alreadyInit","timer","enableAudioFeedback","deviceList","constraints","noiseSuppression","echoCancellation","autoGainControl","ideal","sampleRateConfigNotSupported","isRecordingAvailable","navigator","mediaDevices","getSupportedConstraints","createNewContext","createNewContextIfNeeded","RECORDER_INIT","getUserMedia","RECORDER_COUNT_UPDATE","successCallback","errorCallback","notFoundErrorCallback","unknownErrorCallback","ondevicechange","updateInputList","RECORDER_SUCCESS","RECORDER_ERROR","RECORDER_NOT_FOUND_ERROR","RECORDER_UNKNOWN_ERROR","audioFeedback","enable","RECORDER_UPDATE_CONSTRAINTS","getConstraints","tracks","getTracks","getSettings","updateConstraints","resetConstraints","newConstraint","precAudioFeedback","precRecording","applyConstraints","newConstraints","newConstraintName","stopStream","createMediaStreamSource","setNoiseSuppression","setAutoGain","setEchoCancellation","devices","enumerateDevices","device","changeInput","deviceId","groupId","getBufferSize","getSampleRate","getWorkletBasePath","getWorkerBasePath","RECORDER_RECORDING","RECORDER_STOPPED","RECORDER_PAUSED","RECORDER_RESETED","AbstractAudioNode","enabled","defaultEnabled","isEnabled","isDefaultEnabled","setDefaultEnabled","disable","setEnabled","toggle","AbstractAudioFilter","defaultSettings","_totalSamples","initializeDefaultSettings","getDefaultSettings","resetSettings","setSetting","isWorklet","bufferFetcherReseted","totalSamples","AudioParamPolyfill","defaultValue","_value","_minValue","_maxValue","_defaultValue","automationRate","newValue","max","min","minValue","maxValue","warn","linearRampToValueAtTime","endTime","exponentialRampToValueAtTime","cancelAndHoldAtTime","cancelTime","cancelScheduledValues","setTargetAtTime","timeConstant","setValueCurveAtTime","WorkletScriptProcessorNodeAdapter","bufferSize","_parameters","_port","workletProcessor","_scriptProcessorNode","createScriptProcessor","channelCount","setupPort","setupProcessor","setupWorkletScope","messageChannel","MessageChannel","port1","port2","inputArray","Functions","ouputArray","outputBuffer","records","recordsMap","fromEntries","process","descriptors","defaultParameterDescriptors","RegisterProcessorPolyfill","registerProcessor","processorName","processorClass","processorsMap","getProcessor","processor","SimpleAudioWorkletProcessor","inputs","outputs","parameterDescriptors","AudioWorkletProcessor","AbstractAudioFilterWorklet","currentWorkletNode","fallbackToScriptProcessor","keepCurrentNodeIfPossible","loadedModulesMap","initializeWorklet","workletPath","alreadyLoadedModules","workletPathSet","WORKLET_SUCCESSFULLY_LOADED","catch","FALLBACK_WORKLET_TO_SCRIPT_PROCESSOR","isAudioWorkletEnabled","initializeNode","workletName","receiveEvent","applyCurrentSettingsToWorklet","currentSettings","settingKey","setWorkletSetting","settingValue","settingFromWorklet","getNode","output","AbstractAudioRenderer","_listeners","listeners","events","GenericConfigService","mapConfig","soundBasePath","getConfig","setConfig","isCompatibilityModeEnabled","isCompatibilityModeChecked","setting","isSoundtouchAudioWorkletEnabled","parseInt","getBitrateMP3","enableCompatibilityMode","disableCompatibilityMode","getSoundBasePath","setWorkletBasePath","setWorkerBasePath","setSoundBasePath","isInitialRenderingDisabled","previousSampleRate","SAMPLE_RATE_CHANGED","_currentContext","latencyHint","createOfflineAudioContext","iframe","style","display","iframeWindow","contentWindow","offlineAudioContext","OfflineAudioContextConstructor","OfflineAudioContext","addEventListener","setTimeout","_renderedBuffer","audioRenderingLastCanceled","resetBufferFetcher","durationAudio","UPDATE_AUDIO_TREATMENT_PERCENT","UPDATE_REMAINING_TIME_ESTIMATED","startRenderingProgressCalculation","loadInitialBuffer","currentOfflineContext","outputContext","executeAudioRenderers","setupTotalSamples","compatibilityModeEnabled","initializeWorklets","currentNodes","offlineContext","startRendering","cleanupAfterOfflineRendering","loadRenderedAudio","OFFLINE_AUDIO_RENDERING_FINISHED","disconnectOldNodes","CANCELLING_AUDIO_PROCESSING","clearWorklets","CANCELLED_AND_LOADED_INITIAL_AUDIO","setCompatibilityModeChecked","COMPATIBILITY_MODE_AUTO_ENABLED","RENDERING_AUDIO_PROBLEM_DETECTED","checked","audioBuffersToFetch","fetchBuffers","refetch","LOADING_BUFFERS","fetchAllBuffers","LOADED_BUFFERS","LOADING_BUFFERS_ERROR","resetFilterBuffers","entryPointFilter","_entryPointFilter","_currentNodes","initializeFilters","find","element","keepCurrentInputOutput","isCompatibilityMode","entrypointNode","entrypointNodes","getEntrypointNode","intermediateNodes","previousNode","sort","order","updateState","keepCurrentOutput","disconnecteIntermediateNodes","intermediate","multiInject","initializeRenderers","renderer","rendererId","currentBuffer","_savingBuffer","playingStoppedCallback","savingResult","saveBufferCompatibilityMode","saveBufferDirect","downloadAudioBlob","format","rec","finishedCallback","downloadBlobCallback","Date","toISOString","savingBuffer","buffers","bufferErrors","fetchBuffer","bufferURI","force","realBufferURI","getKeyFromLocation","FETCHING_BUFFERS","response","fetch","ok","FETCHING_BUFFERS_ERROR","FINISHED_FETCHING_BUFFERS","_d","bufferURIs","uri","getAudioBuffer","getOrFetchAudioBuffer","getDownloadedBuffersList","from","location","substring","lastIndexOf","DECODING_AUDIO_FILE","DECODED_AUDIO_FILE","ERROR_DECODING_AUDIO_FILE","ReturnAudioRenderer","totalFrames","bufferReturned","nowBuffering","BassBoosterFilter","frequencyBooster","frequencyReduce","dbBooster","dbReduce","bassBoostFilter","createBiquadFilter","frequency","bassBoostFilterHighFreq","settingId","BitCrusherProcessor","stopped","disabled","phaser","bits","currentNormFreq","normFreq","fill","blockSize","inp","out","floor","BitCrusherFilter","parseFloat","EchoFilter","delay","delayNode","createDelay","delayTime","HighPassFilter","highFrequency","highPassFilter","DelayBuffer","_array","readPointer","writePointer","read","LimiterProcessor","delayBuffer","envelopeSamples","envelopeData","applyPreGainAndComputeEnvelope","applyLimiter","getEnvelope","attackTime","releaseTime","attackGain","exp","releaseGain","envelope","envIn","abs","getMaxEnvelope","channels","ampToDB","log10","dBToAmp","db","preGainAmp","preGain","lookAheadTime","applyPreGain","postGainAmp","postGain","applyLookAheadDelay","slope","gainDB","threshold","gainAmp","LimiterFilter","LowPassFilter","lowFrequency","lowPassFilter","ReverbFilter","reverbEnvironment","reverbCustomEnvironmentAddTime","customEnvironment","convolver","createConvolver","getReverbBuffer","additionalData","downloadedBuffers","hasCustomEnvironment","reverbSettings","reverbUrl","FifoSampleBuffer","_vector","_position","_frameCount","vector","position","startIndex","frameCount","endIndex","receive","rewind","put","numFrames","putSamples","samples","sourceOffset","numSamples","ensureCapacity","destOffset","subarray","putBuffer","receiveSamples","extract","minLength","newVector","ensureAdditionalCapacity","AbstractFifoSamplePipe","createBuffers","_inputBuffer","_outputBuffer","RateTransposer","_rate","rate","slopeCount","prevSampleL","prevSampleR","numFramesOutput","transpose","src","srcOffset","dest","used","srcIndex","FilterSupport","pipe","_pipe","fillInputBuffer","fillOutputBuffer","numInputFrames","noop","SimpleFilter","sourceSound","historyBufferSize","_sourcePosition","outputBufferPosition","newOutputBufferPosition","sourcePosition","onEnd","numFramesExtracted","currentFrames","handleSampleData","_SCAN_OFFSETS","AUTOSEEK_K","Stretch","_quickSeek","midBufferDirty","midBuffer","overlapLength","autoSeqSetting","autoSeekSetting","_tempo","setParameters","clearMidBuffer","sequenceMs","seekWindowMs","overlapMs","calculateSequenceParameters","calculateOverlapLength","tempo","newTempo","intskip","nominalSkip","seekWindowLength","skipFract","sampleReq","seekLength","inputChunkSize","outputChunkSize","overlapInMsec","newOvl","refMidBuffer","checkLimits","mi","ma","seq","seek","AUTOSEQ_AT_MIN","AUTOSEEK_AT_MIN","quickSeek","seekBestOverlapPosition","seekBestOverlapPositionStereoQuick","seekBestOverlapPositionStereo","bestOffset","bestCorrelation","correlation","preCalculateCorrelationReferenceStereo","MIN_VALUE","calculateCrossCorrelationStereo","correlationOffset","tempOffset","scanCount","temp","mixingPosition","compare","mixing","calcLength","mixingOffset","overlap","overlapPosition","overlapStereo","inputPosition","outputPosition","tempFrame","frameScale","fi","inputOffset","outputOffset","overlapSkip","testFloatEqual","SoundTouch","transposer","stretch","_intermediateBuffer","virtualPitch","virtualRate","virtualTempo","calculateEffectiveRateAndTempo","rateChange","tempoChange","pitch","pitchOctaves","pitchSemitones","previousTempo","previousRate","WebAudioBufferSource","dualChannel","left","right","minsSecs","secs","mins","width","pad","onUpdate","currentTimePlayed","timePlayed","CustomEvent","detail","formattedTimePlayed","percentagePlayed","_node","dispatchEvent","PitchShifter","_soundtouch","_filter","sourcePositionCallback","framesExtracted","getWebAudioNode","sourcePostion","formattedDuration","perc","semitone","toNode","eventName","removeEventListener","SoundtouchWrapperFilter","frequencyAudio","currentSpeedAudio","currentBufferSource","isOfflineMode","offline","cleanUpOldNodes","renderWithSoundtouch","getCurrentRenderingMode","renderWithWorklet","renderWithScriptProcessorNode","currentPitchShifter","getSoundtouchScriptProcessorNode","bufferSource","constructBufferSourceNode","bufferSourceRendered","workletNode","settingUntouched","playbackRate","valueFloat","TelephonizerFilter","lpf1","lpf2","hpf1","hpf2","Vocoder","ctx","carrierB","modulatorB","FILTER_QUALITY","FOURIER_SIZE","WAVETABLEBOOST","SAWTOOTHBOOST","oscillatorType","oscillatorDetuneValue","carrierBuffer","modulatorNode","vocoding","modulatorInput","carrierInput","modulatorGain","modulatorGainValue","noiseBuffer","noiseNode","noiseGain","noiseGainValue","carrierSampleNode","carrierSampleGain","carrierSampleGainValue","oscillatorNode","oscillatorGain","oscillatorGainValue","wavetable","wavetableSignalGain","modFilterBands","modFilterPostGains","heterodynes","powers","lpFilters","lpFilterPostGains","carrierBands","carrierFilterPostGains","carrierBandGains","vocoderBands","numVocoderBands","hpFilterGain","outputGain","modulatorBuffer","generateVocoderBands","setupVocoderGraph","vocode","getNodes","synthLevel","shutOffCarrier","selectSawtooth","selectWavetable","setPeriodicWave","updateModGain","updateSampleLevel","updateSynthLevel","updateNoiseLevel","updateDetuneValue","detune","startFreq","endFreq","numBands","centsPerBand","log","LN2","scale","currentFreq","loadNoiseBuffer","lengthInSamples","bufferData","initBandpassFilters","waveShaperCurve","n2","hpFilter","Q","rectifierCurve","modulatorFilter","secondModulatorFilter","modulatorFilterPostGain","heterodyneOscillator","createOscillator","heterodyne","heterodynePostGain","rectifier","createWaveShaper","curve","lpFilter","lpFilterPostGain","waveshaper","carrierFilter","secondCarrierFilter","carrierFilterPostGain","bandGain","real","imag","createPeriodicWave","createCarriersAndPlay","VocoderFilter","currentVocoder","applyCurrentSettingsToVocoder","RenderingProgressCalculationWorkletProcessor","samplesCount","sample","RenderingProgressCalculationFilter","lastSampleCount","samplePerSecond","currentTimeSamplesPerSecond","samplesProcessed","calculatePercentageProcessed","calculateRemainingTimeProcessing","timeDifference","percentageProcessed","timeDifferenceSamplePerSecond","remainingSamples","calculateSmoothedSamplePerSecond","remainingTimeSeconds","isFinite","SoundStudioFactory","createNewInstance","audioEditorContainer","Container","getAudioEditorContainer","buffersToFetch","audioEditor","audioPlayer","voiceRecorder","createAudioEditor","ready","instance","createVoiceRecorder","getAudioEditorInstance","getAudioPlayerInstance","getAudioRecorderInstance","getEventEmitterInstance","getConfigServiceInstance"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,49]}