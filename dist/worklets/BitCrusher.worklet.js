class s extends AudioWorkletProcessor{constructor(){super(),this.stopped=!1,this.disabled=!1,this.phaser=null,this.last=null,this.port.onmessage=s=>{switch(s.data){case"stop":this.stop();break;case"disable":this.disabled=!0;break;case"enable":this.disabled=!1}}}static get parameterDescriptors(){return[{name:"bits",defaultValue:16},{name:"normFreq",defaultValue:.9}]}get defaultParameterDescriptors(){return s.parameterDescriptors}process(s,t,e){if(this.stopped||this.disabled)return!1;const r=s[0],a=t[0],l=2*Math.pow(.5,e.bits[0]),i=(1-e.normFreq[0])/(sampleRate/48e3);if(null==this.last&&(this.last=new Array(r.length).fill(0)),null==this.phaser&&(this.phaser=new Array(r.length).fill(0)),r&&r[0]){const s=r[0].length;for(let t=0;t<r.length;t++){const e=r[t],h=a[t];if(e&&h)for(let r=0;r<s;r++)this.phaser[t]+=i,this.phaser[t]>=1&&(this.phaser[t]-=1,this.last[t]=l*Math.floor(e[r]*(1/l)+.5)),h[r]=this.last[t]}}return!0}stop(){this.stopped=!0,this.phaser=null,this.last=null}}registerProcessor("bitcrusher-processor",s);
